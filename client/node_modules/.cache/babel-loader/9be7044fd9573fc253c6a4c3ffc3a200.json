{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Litsey_10th_grade\\\\Informatics\\\\Fictionlib\\\\SchoolProject\\\\client\\\\src\\\\components\\\\ChosenFiction\\\\chosenFictionsContainer.jsx\";\nimport { getAllFictions, getRatingOfFictionFromUser, getOverallRatingOfFiction } from './../../DataBase/Fictions.js';\nimport { getUsersFriends, getFictionAtUser } from './../../DataBase/Users.js';\nimport { getFictionsComments } from './../../DataBase/Comments.js';\nimport { getLoggedInStatus, getLoggedUserId } from './../../LocalInfo/localInfo.js';\nimport { changeUsersRatingOfFictionActionCreator, changeUsersStatusOfFictionActionCreator, addCommentActionCreator } from './../../redux/reducers/chosenFictionReducer.js';\nimport { Routes, Route } from \"react-router-dom\";\nimport { useEffect } from 'react';\nimport ChosenFiction from './chosenFiction.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChosenFictionsContainer = props => {\n  getAllFictions().then(data => {\n    let fictionLinks = data.map(fiction => {\n      console.log(fiction);\n      let link = '';\n\n      if (fiction.type == 'book') {\n        link = '/bookCatalog/' + fiction.iD;\n      } else if (fiction.type == 'film') {\n        link = '/filmCatalog/' + fiction.iD;\n      }\n\n      let view = '';\n\n      if (getLoggedInStatus()) {\n        view = 'loggedInUsersView';\n      } else {\n        view = 'notLoggedInUsersView';\n      }\n\n      let changeUsersRatingOfFiction = rating => {\n        props.dispatch(changeUsersRatingOfFictionActionCreator(fiction.iD, getLoggedUserId(), rating));\n      };\n\n      let changeUsersStatusOfFiction = status => {\n        props.dispatch(changeUsersStatusOfFictionActionCreator(getLoggedUserId(), fiction.iD, status));\n      };\n\n      let fictionAtFriends = [];\n      let friendsOfUser = getUsersFriends(getLoggedUserId());\n\n      for (var i = 0; i < friendsOfUser.length; i++) {\n        fictionAtFriends.push({\n          id: friendsOfUser[i].id,\n          name: friendsOfUser[i].usersInfo.name,\n          status: getFictionAtUser(fiction.id, friendsOfUser[i].id)\n        });\n      }\n\n      let addComment = content => {\n        props.dispatch(addCommentActionCreator(getLoggedUserId(), fiction.id, content));\n      };\n\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: link,\n        element: /*#__PURE__*/_jsxDEV(ChosenFiction, {\n          fiction: fiction,\n          loggedIn: getLoggedInStatus(),\n          usersStatus: getFictionAtUser(fiction.id, getLoggedUserId()),\n          usersRating: getRatingOfFictionFromUser(fiction.id, getLoggedUserId()),\n          overallRating: getOverallRatingOfFiction(fiction.id),\n          comments: getFictionsComments(fiction.id),\n          fictionAtFriends: fictionAtFriends,\n          addComment: addComment,\n          changeUsersRatingOfFiction: changeUsersRatingOfFiction,\n          changeUsersStatusOfFiction: changeUsersStatusOfFiction,\n          view: view,\n          dispatch: props.dispatch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(Routes, {\n      children: fictionLinks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this);\n  });\n};\n\n_c = ChosenFictionsContainer;\nexport default ChosenFictionsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChosenFictionsContainer\");","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/SchoolProject/client/src/components/ChosenFiction/chosenFictionsContainer.jsx"],"names":["getAllFictions","getRatingOfFictionFromUser","getOverallRatingOfFiction","getUsersFriends","getFictionAtUser","getFictionsComments","getLoggedInStatus","getLoggedUserId","changeUsersRatingOfFictionActionCreator","changeUsersStatusOfFictionActionCreator","addCommentActionCreator","Routes","Route","useEffect","ChosenFiction","ChosenFictionsContainer","props","then","data","fictionLinks","map","fiction","console","log","link","type","iD","view","changeUsersRatingOfFiction","rating","dispatch","changeUsersStatusOfFiction","status","fictionAtFriends","friendsOfUser","i","length","push","id","name","usersInfo","addComment","content"],"mappings":"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","sourcesContent":["import {getAllFictions, getRatingOfFictionFromUser, getOverallRatingOfFiction} from './../../DataBase/Fictions.js'\r\nimport {getUsersFriends, getFictionAtUser} from './../../DataBase/Users.js'\r\nimport {getFictionsComments} from './../../DataBase/Comments.js'\r\nimport {getLoggedInStatus, getLoggedUserId} from './../../LocalInfo/localInfo.js'\r\nimport {changeUsersRatingOfFictionActionCreator, changeUsersStatusOfFictionActionCreator, addCommentActionCreator} from './../../redux/reducers/chosenFictionReducer.js'\r\nimport {Routes, Route} from \"react-router-dom\";\r\nimport {useEffect} from 'react';\r\nimport ChosenFiction from './chosenFiction.jsx'\r\n\r\nconst ChosenFictionsContainer = (props) =>{\r\n  getAllFictions()\r\n  .then((data)=>{\r\n    let fictionLinks = data.map((fiction)=>{\r\n      console.log(fiction);\r\n    let link = ''\r\n    if (fiction.type == 'book'){\r\n      link = '/bookCatalog/' + fiction.iD;\r\n    } else if (fiction.type == 'film'){\r\n      link = '/filmCatalog/' + fiction.iD;\r\n    }\r\n\r\n    let view = ''\r\n    if (getLoggedInStatus()){\r\n      view = 'loggedInUsersView';\r\n    }else{\r\n      view = 'notLoggedInUsersView';\r\n    }\r\n\r\n    let changeUsersRatingOfFiction = (rating) =>{\r\n      props.dispatch(changeUsersRatingOfFictionActionCreator(fiction.iD, getLoggedUserId(), rating))\r\n    }\r\n    let changeUsersStatusOfFiction = (status) =>{\r\n      props.dispatch(changeUsersStatusOfFictionActionCreator(getLoggedUserId(), fiction.iD, status))\r\n    }\r\n\r\n\r\n    let fictionAtFriends = []\r\n    let friendsOfUser = getUsersFriends(getLoggedUserId())\r\n    for (var i = 0; i < friendsOfUser.length; i++) {\r\n      fictionAtFriends.push({id:friendsOfUser[i].id, name:friendsOfUser[i].usersInfo.name, status:getFictionAtUser(fiction.id, friendsOfUser[i].id)})\r\n    }\r\n\r\n    let addComment = (content) =>{\r\n      props.dispatch(addCommentActionCreator(getLoggedUserId(),fiction.id, content))\r\n    }\r\n\r\n    return (<Route path={link}\r\n    element={<ChosenFiction fiction={fiction} loggedIn={getLoggedInStatus()}\r\n              usersStatus={getFictionAtUser(fiction.id, getLoggedUserId())}\r\n              usersRating={getRatingOfFictionFromUser(fiction.id, getLoggedUserId())}\r\n              overallRating={getOverallRatingOfFiction(fiction.id)}\r\n              comments={getFictionsComments(fiction.id)}\r\n              fictionAtFriends={fictionAtFriends} addComment={addComment}\r\n              changeUsersRatingOfFiction={changeUsersRatingOfFiction}\r\n              changeUsersStatusOfFiction={changeUsersStatusOfFiction}\r\n              view={view} dispatch={props.dispatch}/>}/>)\r\n  })\r\n\r\n  return (\r\n    <Routes>\r\n      {fictionLinks}\r\n    </Routes>\r\n  );\r\n  })\r\n}\r\n\r\nexport default ChosenFictionsContainer;\r\n"]},"metadata":{},"sourceType":"module"}