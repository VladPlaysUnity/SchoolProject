{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\Projects\\\\SchoolProject\\\\client\\\\src\\\\components\\\\Catalog\\\\catalogPageContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport s from './catalog.module.css';\nimport CatalogPage from './catalog.jsx';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getAllBooks, getAllFilms, getFictionById } from './../../DataBase/Fictions.js';\nimport { getAllUsers, getUserById } from './../../DataBase/Users.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CatalogPageContainer = props => {\n  _s();\n\n  const [elems, setElems] = useState([]);\n  const [allFilms, setAllFilms] = useState([]);\n  const [allBooks, setAllBooks] = useState([]);\n  const [type, setType] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  let catalog = '';\n  let params = useParams();\n  useEffect(() => {\n    setIsLoaded(false);\n    setElems([]);\n\n    switch (params.type) {\n      case 'allBooks':\n        setType('fiction');\n        getAllBooks().then(result => {\n          setIsLoaded(true);\n          setAllBooks(result);\n        });\n        break;\n\n      case 'allFilms':\n        setType('fiction');\n        getAllFilms().then(result => {\n          setIsLoaded(true);\n          setAllFilms(result);\n        });\n        break;\n\n      case 'allUsers':\n        setType('user');\n        getAllUsers().then(result => {\n          setIsLoaded(true);\n          setElems(result);\n        });\n        break;\n\n      case 'read_books':\n        setType('fiction');\n        getUserById(params.userID).then(user => {\n          let rb = [];\n          let f = '';\n\n          for (let i = 0; i < user.markedFictions.length; i++) {\n            if (user.markedFictions[i].status == 'completed') {\n              f = getFictionById(user.markedFictions[i].fiction_id);\n              rb.push(f);\n            }\n          }\n\n          Promise.all(rb).then(d => {\n            let k = [];\n\n            for (let i = 0; i < d.length; i++) {\n              if (d[i].type == 'book') {\n                k.push(d[i]);\n              }\n            }\n\n            setElems(k);\n            setIsLoaded(true);\n          });\n        });\n        break;\n\n      case 'planned_books':\n        setType('fiction');\n        getUserById(params.userID).then(user => {\n          let pb = [];\n          let f = '';\n\n          for (let i = 0; i < user.markedFictions.length; i++) {\n            if (user.markedFictions[i].status == 'planned') {\n              f = getFictionById(user.markedFictions[i].fiction_id);\n              pb.push(f);\n            }\n          }\n\n          Promise.all(pb).then(d => {\n            let k = [];\n\n            for (let i = 0; i < d.length; i++) {\n              if (d[i].type == 'book') {\n                k.push(d[i]);\n              }\n            }\n\n            setElems(k);\n            setIsLoaded(true);\n          });\n        });\n        break;\n\n      case 'watched_films':\n        setType('fiction');\n        getUserById(params.userID).then(user => {\n          let wf = [];\n          let f = '';\n\n          for (let i = 0; i < user.markedFictions.length; i++) {\n            if (user.markedFictions[i].status == 'completed') {\n              f = getFictionById(user.markedFictions[i].fiction_id);\n              wf.push(f);\n            }\n          }\n\n          Promise.all(wf).then(d => {\n            let k = [];\n\n            for (let i = 0; i < d.length; i++) {\n              if (d[i].type == 'film') {\n                k.push(d[i]);\n              }\n            }\n\n            setElems(k);\n            setIsLoaded(true);\n          });\n        });\n        break;\n\n      case 'planned_films':\n        setType('fiction');\n        getUserById(params.userID).then(user => {\n          let pf = [];\n          let f = '';\n\n          for (let i = 0; i < user.markedFictions.length; i++) {\n            if (user.markedFictions[i].status == 'planned') {\n              f = getFictionById(user.markedFictions[i].fiction_id);\n              pf.push(f);\n            }\n          }\n\n          Promise.all(pf).then(d => {\n            let k = [];\n\n            for (let i = 0; i < d.length; i++) {\n              if (d[i].type == 'film') {\n                k.push(d[i]);\n              }\n            }\n\n            setElems(k);\n            setIsLoaded(true);\n          });\n        });\n        break;\n\n      default:\n        return;\n    }\n  }, [params]);\n\n  if (params.type == 'allBooks') {\n    catalog = /*#__PURE__*/_jsxDEV(CatalogPage, {\n      type: type,\n      elems: allBooks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }, this);\n  } else if (params.type == 'allFilms') {\n    catalog = /*#__PURE__*/_jsxDEV(CatalogPage, {\n      type: type,\n      elems: allFilms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }, this);\n  } else {\n    catalog = /*#__PURE__*/_jsxDEV(CatalogPage, {\n      type: type,\n      elems: elems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  } else if (isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: catalog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(CatalogPageContainer, \"xejWxW3vXbDUfqv6e0xl4yieqwg=\", false, function () {\n  return [useParams];\n});\n\n_c = CatalogPageContainer;\nexport default CatalogPageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatalogPageContainer\");","map":{"version":3,"sources":["D:/Programming/Projects/SchoolProject/client/src/components/Catalog/catalogPageContainer.jsx"],"names":["s","CatalogPage","useEffect","useState","useParams","getAllBooks","getAllFilms","getFictionById","getAllUsers","getUserById","CatalogPageContainer","props","elems","setElems","allFilms","setAllFilms","allBooks","setAllBooks","type","setType","error","setError","isLoaded","setIsLoaded","catalog","params","then","result","userID","user","rb","f","i","markedFictions","length","status","fiction_id","push","Promise","all","d","k","pb","wf","pf","message"],"mappings":";;;AAAA,OAAOA,CAAP,MAAc,sBAAd;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,cAAnC,QAAyD,8BAAzD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,2BAAzC;;;AAGA,MAAMC,oBAAoB,GAAIC,KAAD,IAAU;AAAA;;AACrC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,KAAD,CAAxC;AAEA,MAAIqB,OAAO,GAAG,EAAd;AACA,MAAIC,MAAM,GAAGrB,SAAS,EAAtB;AAEAF,EAAAA,SAAS,CAAC,MAAI;AACZqB,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAV,IAAAA,QAAQ,CAAC,EAAD,CAAR;;AACA,YAAQY,MAAM,CAACP,IAAf;AACE,WAAK,UAAL;AACEC,QAAAA,OAAO,CAAC,SAAD,CAAP;AACAd,QAAAA,WAAW,GACVqB,IADD,CACOC,MAAD,IAAU;AACZJ,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAN,UAAAA,WAAW,CAACU,MAAD,CAAX;AACH,SAJD;AAKA;;AAEF,WAAK,UAAL;AACER,QAAAA,OAAO,CAAC,SAAD,CAAP;AACEb,QAAAA,WAAW,GACVoB,IADD,CACOC,MAAD,IAAU;AACZJ,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAR,UAAAA,WAAW,CAACY,MAAD,CAAX;AACH,SAJD;AAKA;;AAEJ,WAAK,UAAL;AACAR,QAAAA,OAAO,CAAC,MAAD,CAAP;AACEX,QAAAA,WAAW,GACVkB,IADD,CACOC,MAAD,IAAU;AACdJ,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAV,UAAAA,QAAQ,CAACc,MAAD,CAAR;AACD,SAJD;AAKA;;AAEF,WAAK,YAAL;AACAR,QAAAA,OAAO,CAAC,SAAD,CAAP;AACEV,QAAAA,WAAW,CAACgB,MAAM,CAACG,MAAR,CAAX,CACCF,IADD,CACOG,IAAD,IAAQ;AACZ,cAAIC,EAAE,GAAG,EAAT;AACA,cAAIC,CAAC,GAAG,EAAR;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,cAAL,CAAoBC,MAAxC,EAAgDF,CAAC,EAAjD,EAAoD;AAClD,gBAAIH,IAAI,CAACI,cAAL,CAAoBD,CAApB,EAAuBG,MAAvB,IAAiC,WAArC,EAAiD;AAC/CJ,cAAAA,CAAC,GAAGxB,cAAc,CAACsB,IAAI,CAACI,cAAL,CAAoBD,CAApB,EAAuBI,UAAxB,CAAlB;AACAN,cAAAA,EAAE,CAACO,IAAH,CAAQN,CAAR;AACD;AACF;;AACDO,UAAAA,OAAO,CAACC,GAAR,CAAYT,EAAZ,EACCJ,IADD,CACOc,CAAD,IAAK;AACT,gBAAIC,CAAC,GAAG,EAAR;;AACA,iBAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,CAAC,CAACN,MAAtB,EAA8BF,CAAC,EAA/B,EAAmC;AACjC,kBAAGQ,CAAC,CAACR,CAAD,CAAD,CAAKd,IAAL,IAAa,MAAhB,EAAuB;AACrBuB,gBAAAA,CAAC,CAACJ,IAAF,CAAOG,CAAC,CAACR,CAAD,CAAR;AACD;AACF;;AACDnB,YAAAA,QAAQ,CAAC4B,CAAD,CAAR;AACAlB,YAAAA,WAAW,CAAC,IAAD,CAAX;AACD,WAVD;AAWD,SArBD;AAsBA;;AAEF,WAAK,eAAL;AACAJ,QAAAA,OAAO,CAAC,SAAD,CAAP;AACEV,QAAAA,WAAW,CAACgB,MAAM,CAACG,MAAR,CAAX,CACCF,IADD,CACOG,IAAD,IAAQ;AACZ,cAAIa,EAAE,GAAG,EAAT;AACA,cAAIX,CAAC,GAAG,EAAR;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,cAAL,CAAoBC,MAAxC,EAAgDF,CAAC,EAAjD,EAAoD;AAClD,gBAAIH,IAAI,CAACI,cAAL,CAAoBD,CAApB,EAAuBG,MAAvB,IAAiC,SAArC,EAA+C;AAC7CJ,cAAAA,CAAC,GAAGxB,cAAc,CAACsB,IAAI,CAACI,cAAL,CAAoBD,CAApB,EAAuBI,UAAxB,CAAlB;AACAM,cAAAA,EAAE,CAACL,IAAH,CAAQN,CAAR;AACD;AACF;;AACDO,UAAAA,OAAO,CAACC,GAAR,CAAYG,EAAZ,EACChB,IADD,CACOc,CAAD,IAAK;AACT,gBAAIC,CAAC,GAAG,EAAR;;AACA,iBAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,CAAC,CAACN,MAAtB,EAA8BF,CAAC,EAA/B,EAAmC;AACjC,kBAAGQ,CAAC,CAACR,CAAD,CAAD,CAAKd,IAAL,IAAa,MAAhB,EAAuB;AACrBuB,gBAAAA,CAAC,CAACJ,IAAF,CAAOG,CAAC,CAACR,CAAD,CAAR;AACD;AACF;;AACDnB,YAAAA,QAAQ,CAAC4B,CAAD,CAAR;AACAlB,YAAAA,WAAW,CAAC,IAAD,CAAX;AACD,WAVD;AAWD,SArBD;AAsBA;;AAEF,WAAK,eAAL;AACAJ,QAAAA,OAAO,CAAC,SAAD,CAAP;AACEV,QAAAA,WAAW,CAACgB,MAAM,CAACG,MAAR,CAAX,CACCF,IADD,CACOG,IAAD,IAAQ;AACZ,cAAIc,EAAE,GAAG,EAAT;AACA,cAAIZ,CAAC,GAAG,EAAR;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,cAAL,CAAoBC,MAAxC,EAAgDF,CAAC,EAAjD,EAAoD;AAClD,gBAAIH,IAAI,CAACI,cAAL,CAAoBD,CAApB,EAAuBG,MAAvB,IAAiC,WAArC,EAAiD;AAC/CJ,cAAAA,CAAC,GAAGxB,cAAc,CAACsB,IAAI,CAACI,cAAL,CAAoBD,CAApB,EAAuBI,UAAxB,CAAlB;AACAO,cAAAA,EAAE,CAACN,IAAH,CAAQN,CAAR;AACD;AACF;;AACDO,UAAAA,OAAO,CAACC,GAAR,CAAYI,EAAZ,EACCjB,IADD,CACOc,CAAD,IAAK;AACT,gBAAIC,CAAC,GAAG,EAAR;;AACA,iBAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,CAAC,CAACN,MAAtB,EAA8BF,CAAC,EAA/B,EAAmC;AACjC,kBAAGQ,CAAC,CAACR,CAAD,CAAD,CAAKd,IAAL,IAAa,MAAhB,EAAuB;AACrBuB,gBAAAA,CAAC,CAACJ,IAAF,CAAOG,CAAC,CAACR,CAAD,CAAR;AACD;AACF;;AACDnB,YAAAA,QAAQ,CAAC4B,CAAD,CAAR;AACAlB,YAAAA,WAAW,CAAC,IAAD,CAAX;AACD,WAVD;AAWD,SArBD;AAsBA;;AAEF,WAAK,eAAL;AACAJ,QAAAA,OAAO,CAAC,SAAD,CAAP;AACEV,QAAAA,WAAW,CAACgB,MAAM,CAACG,MAAR,CAAX,CACCF,IADD,CACOG,IAAD,IAAQ;AACZ,cAAIe,EAAE,GAAG,EAAT;AACA,cAAIb,CAAC,GAAG,EAAR;;AACA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,cAAL,CAAoBC,MAAxC,EAAgDF,CAAC,EAAjD,EAAoD;AAClD,gBAAIH,IAAI,CAACI,cAAL,CAAoBD,CAApB,EAAuBG,MAAvB,IAAiC,SAArC,EAA+C;AAC7CJ,cAAAA,CAAC,GAAGxB,cAAc,CAACsB,IAAI,CAACI,cAAL,CAAoBD,CAApB,EAAuBI,UAAxB,CAAlB;AACAQ,cAAAA,EAAE,CAACP,IAAH,CAAQN,CAAR;AACD;AACF;;AACDO,UAAAA,OAAO,CAACC,GAAR,CAAYK,EAAZ,EACClB,IADD,CACOc,CAAD,IAAK;AACT,gBAAIC,CAAC,GAAG,EAAR;;AACA,iBAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGQ,CAAC,CAACN,MAAtB,EAA8BF,CAAC,EAA/B,EAAmC;AACjC,kBAAGQ,CAAC,CAACR,CAAD,CAAD,CAAKd,IAAL,IAAa,MAAhB,EAAuB;AACrBuB,gBAAAA,CAAC,CAACJ,IAAF,CAAOG,CAAC,CAACR,CAAD,CAAR;AACD;AACF;;AACDnB,YAAAA,QAAQ,CAAC4B,CAAD,CAAR;AACAlB,YAAAA,WAAW,CAAC,IAAD,CAAX;AACD,WAVD;AAWD,SArBD;AAsBA;;AAEF;AACE;AArIJ;AAuID,GA1IQ,EA0IN,CAACE,MAAD,CA1IM,CAAT;;AA4IA,MAAIA,MAAM,CAACP,IAAP,IAAa,UAAjB,EAA4B;AAC1BM,IAAAA,OAAO,gBAAG,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEN,IAAnB;AAAyB,MAAA,KAAK,EAAEF;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAV;AACD,GAFD,MAEM,IAAIS,MAAM,CAACP,IAAP,IAAa,UAAjB,EAA6B;AACjCM,IAAAA,OAAO,gBAAG,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEN,IAAnB;AAAyB,MAAA,KAAK,EAAEJ;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAV;AACD,GAFK,MAEA;AACJU,IAAAA,OAAO,gBAAG,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEN,IAAnB;AAAyB,MAAA,KAAK,EAAEN;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAV;AACD;;AAGD,MAAGQ,KAAH,EAAS;AACP,wBAAO;AAAA,4BAAaA,KAAK,CAACyB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAG,CAACvB,QAAJ,EAAa;AAClB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GANM,MAMA,IAAGA,QAAH,EAAY;AACjB,wBACE;AAAA,gBACGE;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;AACF,CA/KD;;GAAMd,oB;UASSN,S;;;KATTM,oB;AAiLN,eAAeA,oBAAf","sourcesContent":["import s from './catalog.module.css';\r\nimport CatalogPage from './catalog.jsx';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getAllBooks, getAllFilms, getFictionById } from './../../DataBase/Fictions.js'\r\nimport { getAllUsers, getUserById } from './../../DataBase/Users.js'\r\n\r\n\r\nconst CatalogPageContainer = (props) =>{\r\n  const [elems, setElems] = useState([]);\r\n  const [allFilms, setAllFilms] = useState([]);\r\n  const [allBooks, setAllBooks] = useState([]);\r\n  const [type, setType] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  let catalog = ''\r\n  let params = useParams()\r\n\r\n  useEffect(()=>{\r\n    setIsLoaded(false)\r\n    setElems([])\r\n    switch (params.type) {\r\n      case 'allBooks':\r\n        setType('fiction')\r\n        getAllBooks()\r\n        .then((result)=>{\r\n            setIsLoaded(true);\r\n            setAllBooks(result)\r\n        })\r\n        break;\r\n\r\n      case 'allFilms':\r\n        setType('fiction')\r\n          getAllFilms()\r\n          .then((result)=>{\r\n              setIsLoaded(true);\r\n              setAllFilms(result)\r\n          })\r\n          break;\r\n\r\n      case 'allUsers':\r\n      setType('user')\r\n        getAllUsers()\r\n        .then((result)=>{\r\n          setIsLoaded(true);\r\n          setElems(result)\r\n        })\r\n        break;\r\n\r\n      case 'read_books':\r\n      setType('fiction')\r\n        getUserById(params.userID)\r\n        .then((user)=>{\r\n          let rb = []\r\n          let f = ''\r\n          for (let i = 0; i < user.markedFictions.length; i++){\r\n            if (user.markedFictions[i].status == 'completed'){\r\n              f = getFictionById(user.markedFictions[i].fiction_id)\r\n              rb.push(f)\r\n            }\r\n          }\r\n          Promise.all(rb)\r\n          .then((d)=>{\r\n            let k = []\r\n            for (let i = 0; i < d.length; i++) {\r\n              if(d[i].type == 'book'){\r\n                k.push(d[i])\r\n              }\r\n            }\r\n            setElems(k)\r\n            setIsLoaded(true)\r\n          })\r\n        })\r\n        break;\r\n\r\n      case 'planned_books':\r\n      setType('fiction')\r\n        getUserById(params.userID)\r\n        .then((user)=>{\r\n          let pb = []\r\n          let f = ''\r\n          for (let i = 0; i < user.markedFictions.length; i++){\r\n            if (user.markedFictions[i].status == 'planned'){\r\n              f = getFictionById(user.markedFictions[i].fiction_id)\r\n              pb.push(f)\r\n            }\r\n          }\r\n          Promise.all(pb)\r\n          .then((d)=>{\r\n            let k = []\r\n            for (let i = 0; i < d.length; i++) {\r\n              if(d[i].type == 'book'){\r\n                k.push(d[i])\r\n              }\r\n            }\r\n            setElems(k)\r\n            setIsLoaded(true)\r\n          })\r\n        })\r\n        break;\r\n\r\n      case 'watched_films':\r\n      setType('fiction')\r\n        getUserById(params.userID)\r\n        .then((user)=>{\r\n          let wf = []\r\n          let f = ''\r\n          for (let i = 0; i < user.markedFictions.length; i++){\r\n            if (user.markedFictions[i].status == 'completed'){\r\n              f = getFictionById(user.markedFictions[i].fiction_id)\r\n              wf.push(f)\r\n            }\r\n          }\r\n          Promise.all(wf)\r\n          .then((d)=>{\r\n            let k = []\r\n            for (let i = 0; i < d.length; i++) {\r\n              if(d[i].type == 'film'){\r\n                k.push(d[i])\r\n              }\r\n            }\r\n            setElems(k)\r\n            setIsLoaded(true)\r\n          })\r\n        })\r\n        break;\r\n\r\n      case 'planned_films':\r\n      setType('fiction')\r\n        getUserById(params.userID)\r\n        .then((user)=>{\r\n          let pf = []\r\n          let f = ''\r\n          for (let i = 0; i < user.markedFictions.length; i++){\r\n            if (user.markedFictions[i].status == 'planned'){\r\n              f = getFictionById(user.markedFictions[i].fiction_id)\r\n              pf.push(f)\r\n            }\r\n          }\r\n          Promise.all(pf)\r\n          .then((d)=>{\r\n            let k = []\r\n            for (let i = 0; i < d.length; i++) {\r\n              if(d[i].type == 'film'){\r\n                k.push(d[i])\r\n              }\r\n            }\r\n            setElems(k)\r\n            setIsLoaded(true)\r\n          })\r\n        })\r\n        break;\r\n\r\n      default:\r\n        return\r\n    }\r\n  }, [params])\r\n\r\n  if (params.type=='allBooks'){\r\n    catalog = <CatalogPage type={type} elems={allBooks} />\r\n  }else if (params.type=='allFilms') {\r\n    catalog = <CatalogPage type={type} elems={allFilms} />\r\n  } else{\r\n    catalog = <CatalogPage type={type} elems={elems} />\r\n  }\r\n\r\n\r\n  if(error){\r\n    return <div>Error: {error.message}</div>\r\n  } else if(!isLoaded){\r\n    return (\r\n      <div>\r\n        Loading...\r\n      </div>\r\n      );\r\n  } else if(isLoaded){\r\n    return (\r\n      <div>\r\n        {catalog}\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default CatalogPageContainer;\r\n"]},"metadata":{},"sourceType":"module"}