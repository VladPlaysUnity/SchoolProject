{"ast":null,"code":"const ADD_COMMENT = 'ADD_COMMENT';\nconst CHANGE_LIKES_AND_DISLIKES = 'CHANGE_LIKES_AND_DISLIKES';\nlet intialState = {\n  comments: [{\n    staticInfo: {\n      id: 1,\n      content: 't1',\n      place: 'Tokyo Revengers',\n      author: 'user1'\n    },\n    dynamicInfo: {\n      dislikes: 0,\n      likes: 0\n    }\n  }, {\n    staticInfo: {\n      id: 2,\n      content: 't2',\n      place: 'Tokyo Revengers',\n      author: 'user3'\n    },\n    dynamicInfo: {\n      dislikes: 0,\n      likes: 0\n    }\n  }, {\n    staticInfo: {\n      id: 3,\n      content: 't3',\n      place: 'It',\n      author: 'user1'\n    },\n    dynamicInfo: {\n      dislikes: 0,\n      likes: 0\n    }\n  }, {\n    staticInfo: {\n      id: 4,\n      content: 't4',\n      place: 'Tokyo Revengers',\n      author: 'user2'\n    },\n    dynamicInfo: {\n      dislikes: 0,\n      likes: 0\n    }\n  }]\n};\n\nconst commentsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_COMMENT:\n      {\n        let newComment = {\n          staticInfo: {\n            id: 1,\n            content: 't1',\n            place: 'Tokyo Revengers',\n            author: 'user1'\n          },\n          dynamicInfo: {\n            dislikes: 0,\n            likes: 0\n          }\n        };\n        let stateCopy = { ...state\n        };\n        stateCopy.comments = [...state.comments];\n        stateCopy.comments.push(newComment);\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default commentsReducer;","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/webproject/src/redux/reducers/commentsR.js"],"names":["ADD_COMMENT","CHANGE_LIKES_AND_DISLIKES","intialState","comments","staticInfo","id","content","place","author","dynamicInfo","dislikes","likes","commentsReducer","state","action","type","newComment","stateCopy","push"],"mappings":"AAAA,MAAMA,WAAW,GAAG,aAApB;AACA,MAAMC,yBAAyB,GAAG,2BAAlC;AAEA,IAAIC,WAAW,GAAG;AAACC,EAAAA,QAAQ,EAAE,CAAC;AAACC,IAAAA,UAAU,EAAE;AAACC,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,OAAO,EAAC,IAAf;AAAqBC,MAAAA,KAAK,EAAC,iBAA3B;AAA8CC,MAAAA,MAAM,EAAC;AAArD,KAAb;AAA4EC,IAAAA,WAAW,EAAC;AAACC,MAAAA,QAAQ,EAAE,CAAX;AAAcC,MAAAA,KAAK,EAAE;AAArB;AAAxF,GAAD,EACC;AAACP,IAAAA,UAAU,EAAE;AAACC,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,OAAO,EAAC,IAAf;AAAqBC,MAAAA,KAAK,EAAC,iBAA3B;AAA8CC,MAAAA,MAAM,EAAC;AAArD,KAAb;AAA4EC,IAAAA,WAAW,EAAC;AAACC,MAAAA,QAAQ,EAAE,CAAX;AAAcC,MAAAA,KAAK,EAAE;AAArB;AAAxF,GADD,EAEC;AAACP,IAAAA,UAAU,EAAE;AAACC,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,OAAO,EAAC,IAAf;AAAqBC,MAAAA,KAAK,EAAC,IAA3B;AAAiCC,MAAAA,MAAM,EAAC;AAAxC,KAAb;AAA+DC,IAAAA,WAAW,EAAC;AAACC,MAAAA,QAAQ,EAAE,CAAX;AAAcC,MAAAA,KAAK,EAAE;AAArB;AAA3E,GAFD,EAGC;AAACP,IAAAA,UAAU,EAAE;AAACC,MAAAA,EAAE,EAAC,CAAJ;AAAOC,MAAAA,OAAO,EAAC,IAAf;AAAqBC,MAAAA,KAAK,EAAC,iBAA3B;AAA8CC,MAAAA,MAAM,EAAC;AAArD,KAAb;AAA4EC,IAAAA,WAAW,EAAC;AAACC,MAAAA,QAAQ,EAAE,CAAX;AAAcC,MAAAA,KAAK,EAAE;AAArB;AAAxF,GAHD;AAAX,CAAlB;;AAKA,MAAMC,eAAe,GAAG,YAAiC;AAAA,MAAhCC,KAAgC,uEAAxBX,WAAwB;AAAA,MAAXY,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,WAAL;AAAkB;AAChB,YAAIgB,UAAU,GAAG;AAACZ,UAAAA,UAAU,EAAE;AAACC,YAAAA,EAAE,EAAC,CAAJ;AAAOC,YAAAA,OAAO,EAAC,IAAf;AAAqBC,YAAAA,KAAK,EAAC,iBAA3B;AAA8CC,YAAAA,MAAM,EAAC;AAArD,WAAb;AAA4EC,UAAAA,WAAW,EAAC;AAACC,YAAAA,QAAQ,EAAE,CAAX;AAAcC,YAAAA,KAAK,EAAE;AAArB;AAAxF,SAAjB;AAEA,YAAIM,SAAS,GAAG,EAAC,GAAGJ;AAAJ,SAAhB;AAEAI,QAAAA,SAAS,CAACd,QAAV,GAAqB,CAAC,GAAGU,KAAK,CAACV,QAAV,CAArB;AACAc,QAAAA,SAAS,CAACd,QAAV,CAAmBe,IAAnB,CAAwBF,UAAxB;AACA,eAAOC,SAAP;AACD;;AAED;AACE,aAAOJ,KAAP;AAZJ;AAcD,CAfD;;AAiBA,eAAeD,eAAf","sourcesContent":["const ADD_COMMENT = 'ADD_COMMENT';\r\nconst CHANGE_LIKES_AND_DISLIKES = 'CHANGE_LIKES_AND_DISLIKES';\r\n\r\nlet intialState = {comments: [{staticInfo: {id:1, content:'t1', place:'Tokyo Revengers', author:'user1'}, dynamicInfo:{dislikes: 0, likes: 0,}},\r\n                              {staticInfo: {id:2, content:'t2', place:'Tokyo Revengers', author:'user3'}, dynamicInfo:{dislikes: 0, likes: 0,}},\r\n                              {staticInfo: {id:3, content:'t3', place:'It', author:'user1'}, dynamicInfo:{dislikes: 0, likes: 0,}},\r\n                              {staticInfo: {id:4, content:'t4', place:'Tokyo Revengers', author:'user2'}, dynamicInfo:{dislikes: 0, likes: 0,}}]};\r\n\r\nconst commentsReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_COMMENT: {\r\n      let newComment = {staticInfo: {id:1, content:'t1', place:'Tokyo Revengers', author:'user1'}, dynamicInfo:{dislikes: 0, likes: 0,}};\r\n\r\n      let stateCopy = {...state}\r\n\r\n      stateCopy.comments = [...state.comments]\r\n      stateCopy.comments.push(newComment);\r\n      return stateCopy;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default commentsReducer;\r\n"]},"metadata":{},"sourceType":"module"}