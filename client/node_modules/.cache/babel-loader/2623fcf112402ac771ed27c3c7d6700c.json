{"ast":null,"code":"import { addUser, getAllUsers } from './../../DataBase/Users.js';\nimport { setLoggedUserId } from './../../LocalInfo/localInfo.js';\nconst LOG_IN = 'LOG-IN';\nconst SIGN_UP = 'SIGN-UP';\nlet initialState = [];\n\nconst registrationReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN:\n      {\n        let users = getAllUsers();\n\n        for (var i = 0; i < users.length; i++) {\n          if (users[i].usersInfo.name == action.username && users[i].usersInfo.password == action.password) {\n            console.log(setLoggedUserId(users[i].id));\n            return state;\n          }\n        }\n\n        return state;\n      }\n\n    case SIGN_UP:\n      {\n        let users = getAllUsers();\n\n        for (var i = 0; i < users.length; i++) {\n          if (users[i].usersInfo.email == action.email) {\n            return state;\n          }\n        }\n\n        console.log(setLoggedUserId(addUser(action.name, action.password, action.email)));\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default registrationReducer;\nexport const tryLogIn = (username, password) => ({\n  type: LOG_IN,\n  username: username,\n  password: password\n});\nexport const trySignUp = (username, password, email) => ({\n  type: SIGN_UP,\n  username: username,\n  password: password,\n  email: email\n});","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/webproject/src/redux/reducers/registrationReducer.js"],"names":["addUser","getAllUsers","setLoggedUserId","LOG_IN","SIGN_UP","initialState","registrationReducer","state","action","type","users","i","length","usersInfo","name","username","password","console","log","id","email","tryLogIn","trySignUp"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,WAAjB,QAAmC,2BAAnC;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AAEA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,OAAO,GAAG,SAAhB;AAEA,IAAIC,YAAY,GAAG,EAAnB;;AAEA,MAAMC,mBAAmB,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,MAAL;AAAY;AACV,YAAIO,KAAK,GAAGT,WAAW,EAAvB;;AACA,aAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,cAAID,KAAK,CAACC,CAAD,CAAL,CAASE,SAAT,CAAmBC,IAAnB,IAA2BN,MAAM,CAACO,QAAlC,IAA8CL,KAAK,CAACC,CAAD,CAAL,CAASE,SAAT,CAAmBG,QAAnB,IAA+BR,MAAM,CAACQ,QAAxF,EAAiG;AAC/FC,YAAAA,OAAO,CAACC,GAAR,CAAYhB,eAAe,CAACQ,KAAK,CAACC,CAAD,CAAL,CAASQ,EAAV,CAA3B;AACA,mBAAOZ,KAAP;AACD;AACF;;AACD,eAAOA,KAAP;AACD;;AACD,SAAKH,OAAL;AAAa;AACX,YAAIM,KAAK,GAAGT,WAAW,EAAvB;;AACA,aAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,cAAID,KAAK,CAACC,CAAD,CAAL,CAASE,SAAT,CAAmBO,KAAnB,IAA4BZ,MAAM,CAACY,KAAvC,EAA6C;AAC3C,mBAAOb,KAAP;AACD;AACF;;AACDU,QAAAA,OAAO,CAACC,GAAR,CAAYhB,eAAe,CAACF,OAAO,CAACQ,MAAM,CAACM,IAAR,EAAcN,MAAM,CAACQ,QAArB,EAA+BR,MAAM,CAACY,KAAtC,CAAR,CAA3B;AACA,eAAOb,KAAP;AACD;;AAED;AACE,aAAOA,KAAP;AAvBJ;AAyBD,CA1BD;;AA4BA,eAAeD,mBAAf;AAEA,OAAO,MAAMe,QAAQ,GAAG,CAACN,QAAD,EAAWC,QAAX,MACtB;AAACP,EAAAA,IAAI,EAAEN,MAAP;AAAeY,EAAAA,QAAQ,EAACA,QAAxB;AAAkCC,EAAAA,QAAQ,EAACA;AAA3C,CADsB,CAAjB;AAEP,OAAO,MAAMM,SAAS,GAAG,CAACP,QAAD,EAAWC,QAAX,EAAqBI,KAArB,MACvB;AAACX,EAAAA,IAAI,EAAEL,OAAP;AAAgBW,EAAAA,QAAQ,EAACA,QAAzB;AAAmCC,EAAAA,QAAQ,EAACA,QAA5C;AAAsDI,EAAAA,KAAK,EAACA;AAA5D,CADuB,CAAlB","sourcesContent":["import {addUser, getAllUsers} from './../../DataBase/Users.js'\r\nimport {setLoggedUserId} from './../../LocalInfo/localInfo.js'\r\n\r\nconst LOG_IN = 'LOG-IN';\r\nconst SIGN_UP = 'SIGN-UP';\r\n\r\nlet initialState = []\r\n\r\nconst registrationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN:{\r\n      let users = getAllUsers()\r\n      for (var i = 0; i < users.length; i++) {\r\n        if (users[i].usersInfo.name == action.username && users[i].usersInfo.password == action.password){\r\n          console.log(setLoggedUserId(users[i].id))\r\n          return state\r\n        }\r\n      }\r\n      return state\r\n    }\r\n    case SIGN_UP:{\r\n      let users = getAllUsers()\r\n      for (var i = 0; i < users.length; i++) {\r\n        if (users[i].usersInfo.email == action.email){\r\n          return state\r\n        }\r\n      }\r\n      console.log(setLoggedUserId(addUser(action.name, action.password, action.email)))\r\n      return state\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default registrationReducer;\r\n\r\nexport const tryLogIn = (username, password) => (\r\n  {type: LOG_IN, username:username, password:password});\r\nexport const trySignUp = (username, password, email) => (\r\n  {type: SIGN_UP, username:username, password:password, email:email});\r\n"]},"metadata":{},"sourceType":"module"}