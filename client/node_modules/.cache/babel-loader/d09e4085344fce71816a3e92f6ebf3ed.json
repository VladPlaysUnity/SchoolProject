{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Litsey_10th_grade\\\\Informatics\\\\Fictionlib\\\\SchoolProject\\\\client\\\\src\\\\components\\\\Catalog\\\\catalogPageContainer.jsx\",\n    _s2 = $RefreshSig$();\n\nimport s from './catalog.module.css';\nimport CatalogPage from './catalog.jsx';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getAllBooks, getAllFilms, getFictionById } from './../../DataBase/Fictions.js';\nimport { getAllUsers, getUserById } from './../../DataBase/Users.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CatalogPageContainer = props => {\n  _s2();\n\n  const [elems, setElems] = useState([]);\n  const [type, setType] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  let params = useParams();\n  useEffect(() => {\n    var _s = $RefreshSig$();\n\n    setIsLoaded(false);\n    setElems([]);\n\n    switch (params.type) {\n      case 'allBooks':\n        setType('book');\n        getAllBooks().then(result => {\n          if (params.type == 'allBooks') {\n            setIsLoaded(true);\n            setElems(result);\n          }\n        });\n        break;\n\n      case 'allFilms':\n        setType('film');\n\n        _s(getAllFilms().then(_s(result => {\n          _s();\n\n          if (useParams().type == 'allBooks') {\n            setIsLoaded(true);\n            setElems(result);\n          }\n        }, \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n          return [useParams];\n        })), \"zmUErVVHtqqM6DIDQ9M8H17P2nM=\", false, function () {\n          return [useParams];\n        });\n\n        break;\n\n      case 'allUsers':\n        setType('user');\n        getAllUsers().then(result => {\n          setIsLoaded(true);\n          setElems(result);\n        });\n        break;\n\n      case 'read_books':\n        setType('book');\n        getUserById(params.userID).then(user => {\n          let rb = [];\n          let f = '';\n\n          for (let i = 0; i < user.markedFictions.length; i++) {\n            if (user.markedFictions[i].type == 'book' && user.markedFictions[i].status == 'completed') {\n              f = getFictionById(user.markedFictions[i]).then(fic => {\n                rb.push(fic);\n              });\n            }\n          }\n\n          Promise.all(rb).then(d => {\n            setElems(d);\n            setIsLoaded(true);\n          });\n        });\n        break;\n\n      case 'planned_books':\n        setType('book');\n        getUserById(params.userID).then(user => {\n          let pb = [];\n          let f = '';\n\n          for (let i = 0; i < user.markedFictions.length; i++) {\n            if (user.markedFictions[i].type == 'book' && user.markedFictions[i].status == 'planned') {\n              f = getFictionById(user.markedFictions[i]).then(fic => {\n                pb.push(fic);\n              });\n            }\n          }\n\n          Promise.all(pb).then(d => {\n            setElems(d);\n            setIsLoaded(true);\n          });\n        });\n        break;\n\n      case 'watched_films':\n        setType('film');\n        getUserById(params.userID).then(user => {\n          let wf = [];\n          let f = '';\n\n          for (let i = 0; i < user.markedFictions.length; i++) {\n            if (user.markedFictions[i].type == 'film' && user.markedFictions[i].status == 'completed') {\n              f = getFictionById(user.markedFictions[i]).then(fic => {\n                wf.push(fic);\n              });\n            }\n          }\n\n          Promise.all(wf).then(d => {\n            setElems(d);\n            setIsLoaded(true);\n          });\n        });\n        break;\n\n      case 'planned_films':\n        setType('film');\n        getUserById(params.userID).then(user => {\n          let pf = [];\n          let f = '';\n\n          for (let i = 0; i < user.markedFictions.length; i++) {\n            if (user.markedFictions[i].type == 'film' && user.markedFictions[i].status == 'planned') {\n              f = getFictionById(user.markedFictions[i]).then(fic => {\n                pf.push(fic);\n              });\n            }\n          }\n\n          Promise.all(pf).then(d => {\n            setElems(d);\n            setIsLoaded(true);\n          });\n        });\n        break;\n\n      default:\n        setElems([]);\n    }\n  }, [params]);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  } else if (isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CatalogPage, {\n        type: type,\n        elems: elems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s2(CatalogPageContainer, \"IbAl2VoBIHUPJOAqgMpbHROfXq4=\", false, function () {\n  return [useParams];\n});\n\n_c = CatalogPageContainer;\nexport default CatalogPageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CatalogPageContainer\");","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/SchoolProject/client/src/components/Catalog/catalogPageContainer.jsx"],"names":["s","CatalogPage","useEffect","useState","useParams","getAllBooks","getAllFilms","getFictionById","getAllUsers","getUserById","CatalogPageContainer","props","elems","setElems","type","setType","error","setError","isLoaded","setIsLoaded","params","then","result","userID","user","rb","f","i","markedFictions","length","status","fic","push","Promise","all","d","pb","wf","pf","message"],"mappings":"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","sourcesContent":["import s from './catalog.module.css';\r\nimport CatalogPage from './catalog.jsx';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { getAllBooks, getAllFilms, getFictionById } from './../../DataBase/Fictions.js'\r\nimport { getAllUsers, getUserById } from './../../DataBase/Users.js'\r\n\r\n\r\nconst CatalogPageContainer = (props) =>{\r\n  const [elems, setElems] = useState([]);\r\n  const [type, setType] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  let params = useParams()\r\n\r\n  useEffect(()=>{\r\n    setIsLoaded(false)\r\n    setElems([])\r\n    switch (params.type) {\r\n      case 'allBooks':\r\n        setType('book')\r\n        getAllBooks()\r\n        .then((result)=>{\r\n          if (params.type == 'allBooks'){\r\n            setIsLoaded(true);\r\n            setElems(result)\r\n          }\r\n        })\r\n        break;\r\n\r\n      case 'allFilms':\r\n        setType('film')\r\n          getAllFilms()\r\n          .then((result)=>{\r\n            if (useParams().type == 'allBooks'){\r\n              setIsLoaded(true);\r\n              setElems(result)\r\n            }\r\n          })\r\n          break;\r\n\r\n      case 'allUsers':\r\n      setType('user')\r\n        getAllUsers()\r\n        .then((result)=>{\r\n          setIsLoaded(true);\r\n          setElems(result)\r\n        })\r\n        break;\r\n\r\n      case 'read_books':\r\n      setType('book')\r\n        getUserById(params.userID)\r\n        .then((user)=>{\r\n          let rb = []\r\n          let f = ''\r\n          for (let i = 0; i < user.markedFictions.length; i++){\r\n            if ((user.markedFictions[i].type == 'book')&&(user.markedFictions[i].status == 'completed')){\r\n              f = getFictionById(user.markedFictions[i])\r\n              .then((fic)=>{\r\n                rb.push(fic)\r\n              })\r\n            }\r\n          }\r\n          Promise.all(rb)\r\n          .then((d)=>{\r\n            setElems(d)\r\n            setIsLoaded(true)\r\n          })\r\n        })\r\n        break;\r\n\r\n      case 'planned_books':\r\n      setType('book')\r\n        getUserById(params.userID)\r\n        .then((user)=>{\r\n          let pb = []\r\n          let f = ''\r\n          for (let i = 0; i < user.markedFictions.length; i++){\r\n            if ((user.markedFictions[i].type == 'book')&&(user.markedFictions[i].status == 'planned')){\r\n              f = getFictionById(user.markedFictions[i])\r\n              .then((fic)=>{\r\n                pb.push(fic)\r\n              })\r\n            }\r\n          }\r\n          Promise.all(pb)\r\n          .then((d)=>{\r\n            setElems(d)\r\n            setIsLoaded(true)\r\n          })\r\n        })\r\n        break;\r\n\r\n      case 'watched_films':\r\n      setType('film')\r\n        getUserById(params.userID)\r\n        .then((user)=>{\r\n          let wf = []\r\n          let f = ''\r\n          for (let i = 0; i < user.markedFictions.length; i++){\r\n            if ((user.markedFictions[i].type == 'film')&&(user.markedFictions[i].status == 'completed')){\r\n              f = getFictionById(user.markedFictions[i])\r\n              .then((fic)=>{\r\n                wf.push(fic)\r\n              })\r\n            }\r\n          }\r\n          Promise.all(wf)\r\n          .then((d)=>{\r\n            setElems(d)\r\n            setIsLoaded(true)\r\n          })\r\n        })\r\n        break;\r\n\r\n      case 'planned_films':\r\n      setType('film')\r\n        getUserById(params.userID)\r\n        .then((user)=>{\r\n          let pf = []\r\n          let f = ''\r\n          for (let i = 0; i < user.markedFictions.length; i++){\r\n            if ((user.markedFictions[i].type == 'film')&&(user.markedFictions[i].status == 'planned')){\r\n              f = getFictionById(user.markedFictions[i])\r\n              .then((fic)=>{\r\n                pf.push(fic)\r\n              })\r\n            }\r\n          }\r\n          Promise.all(pf)\r\n          .then((d)=>{\r\n            setElems(d)\r\n            setIsLoaded(true)\r\n          })\r\n        })\r\n        break;\r\n\r\n      default:\r\n        setElems([])\r\n    }\r\n  }, [params])\r\n\r\n\r\n  if(error){\r\n    return <div>Error: {error.message}</div>\r\n  } else if(!isLoaded){\r\n    return (\r\n      <div>\r\n        Loading...\r\n      </div>\r\n      );\r\n  } else if(isLoaded){\r\n    return (\r\n      <div>\r\n        <CatalogPage type={type} elems={elems} />\r\n      </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default CatalogPageContainer;\r\n"]},"metadata":{},"sourceType":"module"}