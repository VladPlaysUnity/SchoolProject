{"ast":null,"code":"const LOG_IN = 'LOG_IN';\nconst SIGN_UP = 'SIGN-UP;';\nlet intialState = {\n  status: '-',\n  loggedUser: '',\n  users: [{\n    name: 'John',\n    email: 'eee@gmail.com',\n    password: 'lol'\n  }, {\n    name: 'Paul',\n    email: 'aaa@gmail.com',\n    password: '12389'\n  }]\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN:\n      {\n        for (let i = 0; i < state.users.length; i++) {\n          if (state.users[i].name == action.username && state.users[i].password == action.password) {\n            let stateCopy = { ...state\n            };\n            stateCopy.loggedUser = state.users[i];\n            stateCopy.status = '+';\n            return stateCopy;\n          }\n        }\n\n        return state;\n      }\n\n    case SIGN_UP:\n      {\n        for (let i = 0; i < state.users.length; i++) {\n          if (state.users[i].name == action.username && state.users[i].password == action.password) {\n            let stateCopy = { ...state\n            };\n            stateCopy.status = '+';\n            return stateCopy;\n          }\n        }\n\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default usersReducer;\nexport const tryLogIn = (username, password) => ({\n  type: LOG_IN,\n  username: username,\n  password: password\n});\nexport const trySignUp = (username, password, email) => ({\n  type: SIGN_UP,\n  username: username,\n  password: password,\n  email: email\n});","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/webproject/src/redux/reducers/usersR.js"],"names":["LOG_IN","SIGN_UP","intialState","status","loggedUser","users","name","email","password","usersReducer","state","action","type","i","length","username","stateCopy","tryLogIn","trySignUp"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,OAAO,GAAG,UAAhB;AAEA,IAAIC,WAAW,GAAG;AAACC,EAAAA,MAAM,EAAC,GAAR;AAAaC,EAAAA,UAAU,EAAC,EAAxB;AAA4BC,EAAAA,KAAK,EAAC,CAAC;AAACC,IAAAA,IAAI,EAAC,MAAN;AAAcC,IAAAA,KAAK,EAAC,eAApB;AAAqCC,IAAAA,QAAQ,EAAC;AAA9C,GAAD,EAAuD;AAACF,IAAAA,IAAI,EAAC,MAAN;AAAcC,IAAAA,KAAK,EAAC,eAApB;AAAqCC,IAAAA,QAAQ,EAAC;AAA9C,GAAvD;AAAlC,CAAlB;;AAEA,MAAMC,YAAY,GAAG,YAAiC;AAAA,MAAhCC,KAAgC,uEAAxBR,WAAwB;AAAA,MAAXS,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,MAAL;AAAY;AACV,aAAK,IAAIa,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACH,KAAK,CAACL,KAAN,CAAYS,MAA5B,EAAmCD,CAAC,EAApC,EAAuC;AACrC,cAAKH,KAAK,CAACL,KAAN,CAAYQ,CAAZ,EAAeP,IAAf,IAAuBK,MAAM,CAACI,QAA/B,IAA6CL,KAAK,CAACL,KAAN,CAAYQ,CAAZ,EAAeL,QAAf,IAA2BG,MAAM,CAACH,QAAnF,EAA6F;AAC3F,gBAAIQ,SAAS,GAAG,EAAC,GAAGN;AAAJ,aAAhB;AACAM,YAAAA,SAAS,CAACZ,UAAV,GAAuBM,KAAK,CAACL,KAAN,CAAYQ,CAAZ,CAAvB;AACAG,YAAAA,SAAS,CAACb,MAAV,GAAmB,GAAnB;AACA,mBAAOa,SAAP;AACD;AACF;;AAED,eAAON,KAAP;AACD;;AACD,SAAKT,OAAL;AAAa;AACX,aAAK,IAAIY,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACH,KAAK,CAACL,KAAN,CAAYS,MAA5B,EAAmCD,CAAC,EAApC,EAAuC;AACrC,cAAKH,KAAK,CAACL,KAAN,CAAYQ,CAAZ,EAAeP,IAAf,IAAuBK,MAAM,CAACI,QAA/B,IAA6CL,KAAK,CAACL,KAAN,CAAYQ,CAAZ,EAAeL,QAAf,IAA2BG,MAAM,CAACH,QAAnF,EAA6F;AAC3F,gBAAIQ,SAAS,GAAG,EAAC,GAAGN;AAAJ,aAAhB;AACAM,YAAAA,SAAS,CAACb,MAAV,GAAmB,GAAnB;AACA,mBAAOa,SAAP;AACD;AACF;;AACD,eAAON,KAAP;AACD;;AAED;AACE,aAAOA,KAAP;AAzBJ;AA2BD,CA5BD;;AA8BA,eAAeD,YAAf;AAEA,OAAO,MAAMQ,QAAQ,GAAG,CAACF,QAAD,EAAWP,QAAX,MACtB;AAACI,EAAAA,IAAI,EAAEZ,MAAP;AAAee,EAAAA,QAAQ,EAACA,QAAxB;AAAkCP,EAAAA,QAAQ,EAACA;AAA3C,CADsB,CAAjB;AAEP,OAAO,MAAMU,SAAS,GAAG,CAACH,QAAD,EAAWP,QAAX,EAAqBD,KAArB,MACvB;AAACK,EAAAA,IAAI,EAAEX,OAAP;AAAgBc,EAAAA,QAAQ,EAACA,QAAzB;AAAmCP,EAAAA,QAAQ,EAACA,QAA5C;AAAsDD,EAAAA,KAAK,EAACA;AAA5D,CADuB,CAAlB","sourcesContent":["const LOG_IN = 'LOG_IN';\r\nconst SIGN_UP = 'SIGN-UP;'\r\n\r\nlet intialState = {status:'-', loggedUser:'', users:[{name:'John', email:'eee@gmail.com', password:'lol'}, {name:'Paul', email:'aaa@gmail.com', password:'12389'}]};\r\n\r\nconst usersReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN:{\r\n      for (let i=0; i<state.users.length;i++){\r\n        if ((state.users[i].name == action.username) && (state.users[i].password == action.password)){\r\n          let stateCopy = {...state}\r\n          stateCopy.loggedUser = state.users[i]\r\n          stateCopy.status = '+';\r\n          return stateCopy;\r\n        }\r\n      }\r\n\r\n      return state;\r\n    }\r\n    case SIGN_UP:{\r\n      for (let i=0; i<state.users.length;i++){\r\n        if ((state.users[i].name == action.username) && (state.users[i].password == action.password)){\r\n          let stateCopy = {...state}\r\n          stateCopy.status = '+';\r\n          return stateCopy;\r\n        }\r\n      }\r\n      return state;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersReducer;\r\n\r\nexport const tryLogIn = (username, password) => (\r\n  {type: LOG_IN, username:username, password:password});\r\nexport const trySignUp = (username, password, email) => (\r\n  {type: SIGN_UP, username:username, password:password, email:email});\r\n"]},"metadata":{},"sourceType":"module"}