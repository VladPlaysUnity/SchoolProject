{"ast":null,"code":"function Fiction(id, fictionInfo, type, overallRating) {\n  this.id = id;\n  this.info = fictionInfo;\n  this.type = type;\n  this.overallRating = overallRating;\n}\n\n_c = Fiction;\nlet fiction0 = new Fiction(0, {\n  coverPhoto: require('./../images/overgeared.jpg'),\n  name: 'Overgeared',\n  author: 'idk',\n  genre: 'lightnovel',\n  releaseDate: '12.04.2015',\n  description: 'description'\n}, 'book', [{\n  user: 1,\n  rating: 8\n}]);\nlet fiction1 = new Fiction(1, {\n  coverPhoto: require('./../images/solo-leveling.jpg'),\n  name: 'Solo-Leveling',\n  author: 'idk',\n  genre: 'lightnovel',\n  releaseDate: '3.10.2013',\n  description: 'description'\n}, 'book', [{\n  user: 2,\n  rating: 9\n}]);\nlet fiction2 = new Fiction(2, {\n  coverPhoto: require('./../images/it_film.jpg'),\n  name: 'It',\n  director: 'idk',\n  genre: 'horror',\n  releaseDate: '3.10.2013',\n  description: 'description'\n}, 'film', []);\nlet fiction3 = new Fiction(3, {\n  coverPhoto: require('./../images/it_book.jpg'),\n  name: 'It',\n  author: 'idk',\n  genre: 'horror',\n  releaseDate: '3.10.2013',\n  description: 'description'\n}, 'book', [{\n  user: 0,\n  rating: 7\n}]);\nlet fiction4 = new Fiction(4, {\n  coverPhoto: require('./../images/ready_player_one.jpeg'),\n  name: 'Ready Player One',\n  author: 'idk',\n  genre: 'sci-fi',\n  releaseDate: '3.10.2013',\n  description: 'description'\n}, 'film', [{\n  user: 1,\n  rating: 9\n}]);\nlet dbFictions = {\n  fictions: [fiction0, fiction1, fiction2, fiction3, fiction4]\n};\nexport const getFictionById = fiction_id => {\n  //returns fiction whose id was mentioned\n  for (let i = 0; i < dbFictions.fictions.length; i++) {\n    if (dbFictions.fictions[i].id == fiction_id) {\n      return dbFictions.fictions[i];\n    }\n  }\n};\n\nasync function getAllFictions() {\n  //returns list of all fictions\n  const response = await fetch(`http://localhost:5000/fiction/getAllFictions`);\n\n  if (!response.ok) {\n    const message = `An error occurred: ${response.statusText}`;\n    window.alert(message);\n    return;\n  }\n\n  return await response.json();\n}\n\nasync function getAllFilms() {\n  //returns list of all films\n  const response = await fetch(`http://localhost:5000/fiction/getAllFilms`);\n\n  if (!response.ok) {\n    const message = `An error occurred: ${response.statusText}`;\n    window.alert(message);\n    return;\n  }\n\n  return await response.json();\n}\n\nasync function getAllBooks() {\n  //returns list of all books\n  const response = await fetch(`http://localhost:5000/fiction/getAllBooks`);\n\n  if (!response.ok) {\n    const message = `An error occurred: ${response.statusText}`;\n    window.alert(message);\n    return;\n  }\n\n  return await response.json();\n}\n\nexport const getRatingOfFictionFromUser = (fiction_id, user_id) => {\n  //returns rating of mentioned fiction from mentioned user\n  for (let i = 0; i < dbFictions.fictions.length; i++) {\n    if (dbFictions.fictions[i].id == fiction_id) {\n      for (let j = 0; j < dbFictions.fictions[i].overallRating.length; j++) {\n        if (dbFictions.fictions[i].overallRating[j].user == user_id) {\n          return dbFictions.fictions[i].overallRating[j].rating;\n        }\n      }\n\n      return 0;\n    }\n  }\n};\nexport const getOverallRatingOfFiction = fiction_id => {\n  //return overall rating of fiction based on ratings of users in overallRating list\n  let overallRating = 0;\n\n  for (let i = 0; i < dbFictions.fictions.length; i++) {\n    if (dbFictions.fictions[i].id == fiction_id) {\n      for (let j = 0; j < dbFictions.fictions[i].overallRating.length; j++) {\n        overallRating += parseInt(dbFictions.fictions[i].overallRating[j].rating, 10);\n      }\n\n      overallRating = (overallRating / dbFictions.fictions[i].overallRating.length).toFixed(1);\n      return overallRating;\n    }\n  }\n};\nexport const changeUsersRatingOfFiction = (fiction_id, user_id, rating) => {\n  // changes mentioned user's rating of fiction in overallRating list of mentioned fiction\n  for (var i = 0; i < dbFictions.fictions.length; i++) {\n    if (dbFictions.fictions[i].id == fiction_id) {\n      for (var j = 0; j < dbFictions.fictions[i].overallRating.length; j++) {\n        if (dbFictions.fictions[i].overallRating[j].user == user_id) {\n          if (rating == '') {\n            dbFictions.fictions[i].overallRating.splice(j, 1);\n            return;\n          } else {\n            dbFictions.fictions[i].overallRating[j].rating = rating;\n            return;\n          }\n        }\n      }\n\n      dbFictions.fictions[i].overallRating.push({\n        user: user_id,\n        rating: rating\n      });\n      return;\n    }\n  }\n};\nmodule.exports.getAllFictions = getAllFictions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Fiction\");","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/SchoolProject/client/src/DataBase/Fictions.js"],"names":["Fiction","id","fictionInfo","type","overallRating","info","fiction0","coverPhoto","require","name","author","genre","releaseDate","description","user","rating","fiction1","fiction2","director","fiction3","fiction4","dbFictions","fictions","getFictionById","fiction_id","i","length","getAllFictions","response","fetch","ok","message","statusText","window","alert","json","getAllFilms","getAllBooks","getRatingOfFictionFromUser","user_id","j","getOverallRatingOfFiction","parseInt","toFixed","changeUsersRatingOfFiction","splice","push","module","exports"],"mappings":"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","sourcesContent":["function Fiction(id, fictionInfo, type, overallRating) {\r\n  this.id = id;\r\n  this.info = fictionInfo;\r\n  this.type = type;\r\n  this.overallRating = overallRating;\r\n}\r\n\r\nlet fiction0 = new Fiction(0, {coverPhoto:require('./../images/overgeared.jpg'), name:'Overgeared', author:'idk', genre:'lightnovel', releaseDate:'12.04.2015', description:'description'}, 'book', [{user:1,rating:8}])\r\nlet fiction1 = new Fiction(1, {coverPhoto:require('./../images/solo-leveling.jpg'), name:'Solo-Leveling', author:'idk', genre:'lightnovel', releaseDate:'3.10.2013', description:'description'}, 'book', [{user:2,rating:9}])\r\nlet fiction2 = new Fiction(2, {coverPhoto:require('./../images/it_film.jpg'), name:'It', director:'idk', genre:'horror', releaseDate:'3.10.2013', description:'description'}, 'film', [])\r\nlet fiction3 = new Fiction(3, {coverPhoto:require('./../images/it_book.jpg'), name:'It', author:'idk', genre:'horror', releaseDate:'3.10.2013', description:'description'}, 'book', [{user:0,rating:7}])\r\nlet fiction4 = new Fiction(4, {coverPhoto:require('./../images/ready_player_one.jpeg'), name:'Ready Player One', author:'idk', genre:'sci-fi', releaseDate:'3.10.2013', description:'description'}, 'film', [{user:1,rating:9}])\r\n\r\n\r\nlet dbFictions = {fictions:[fiction0, fiction1, fiction2, fiction3, fiction4]}\r\n\r\n\r\nexport const getFictionById = (fiction_id)=>{\r\n  //returns fiction whose id was mentioned\r\n  for (let i = 0; i <dbFictions.fictions.length; i++) {\r\n    if(dbFictions.fictions[i].id == fiction_id){\r\n      return dbFictions.fictions[i]\r\n    }\r\n  }\r\n}\r\n\r\nasync function getAllFictions (){\r\n  //returns list of all fictions\r\n  const response = await fetch(`http://localhost:5000/fiction/getAllFictions`);\r\n\r\n  if (!response.ok) {\r\n     const message = `An error occurred: ${response.statusText}`;\r\n      window.alert(message);\r\n      return;\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nasync function getAllFilms (){\r\n  //returns list of all films\r\n  const response = await fetch(`http://localhost:5000/fiction/getAllFilms`);\r\n\r\n  if (!response.ok) {\r\n     const message = `An error occurred: ${response.statusText}`;\r\n      window.alert(message);\r\n      return;\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nasync function getAllBooks (){\r\n  //returns list of all books\r\n  const response = await fetch(`http://localhost:5000/fiction/getAllBooks`);\r\n\r\n  if (!response.ok) {\r\n     const message = `An error occurred: ${response.statusText}`;\r\n      window.alert(message);\r\n      return;\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nexport const getRatingOfFictionFromUser=(fiction_id, user_id)=>{\r\n  //returns rating of mentioned fiction from mentioned user\r\n  for (let i = 0; i <dbFictions.fictions.length; i++) {\r\n    if(dbFictions.fictions[i].id == fiction_id){\r\n      for (let j = 0; j < dbFictions.fictions[i].overallRating.length; j++) {\r\n        if (dbFictions.fictions[i].overallRating[j].user == user_id) {\r\n          return dbFictions.fictions[i].overallRating[j].rating\r\n        }\r\n      }\r\n      return 0\r\n    }\r\n  }\r\n}\r\n\r\nexport const getOverallRatingOfFiction = (fiction_id)=>{\r\n  //return overall rating of fiction based on ratings of users in overallRating list\r\n  let overallRating = 0\r\n  for (let i = 0; i <dbFictions.fictions.length; i++) {\r\n    if(dbFictions.fictions[i].id == fiction_id){\r\n      for (let j = 0; j < dbFictions.fictions[i].overallRating.length; j++) {\r\n        overallRating += parseInt(dbFictions.fictions[i].overallRating[j].rating, 10)\r\n      }\r\n      overallRating = (overallRating/dbFictions.fictions[i].overallRating.length).toFixed(1)\r\n      return overallRating\r\n    }\r\n  }\r\n}\r\n\r\nexport const changeUsersRatingOfFiction = (fiction_id, user_id, rating) =>{\r\n  // changes mentioned user's rating of fiction in overallRating list of mentioned fiction\r\n  for (var i = 0; i <dbFictions.fictions.length; i++) {\r\n    if(dbFictions.fictions[i].id == fiction_id){\r\n      for (var j = 0; j < dbFictions.fictions[i].overallRating.length; j++) {\r\n        if (dbFictions.fictions[i].overallRating[j].user == user_id){\r\n          if (rating == ''){\r\n            dbFictions.fictions[i].overallRating.splice(j, 1)\r\n            return\r\n          } else {\r\n            dbFictions.fictions[i].overallRating[j].rating = rating\r\n            return\r\n          }\r\n        }\r\n      }\r\n      dbFictions.fictions[i].overallRating.push({user: user_id, rating:rating})\r\n      return\r\n    }\r\n  }\r\n}\r\n\r\n\r\nmodule.exports.getAllFictions = getAllFictions;\r\n"]},"metadata":{},"sourceType":"module"}