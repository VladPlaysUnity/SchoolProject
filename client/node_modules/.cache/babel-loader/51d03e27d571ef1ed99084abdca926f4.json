{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Litsey_10th_grade\\\\Informatics\\\\Fictionlib\\\\webproject\\\\src\\\\components\\\\ProfilePage\\\\profilePagesContainer.jsx\";\nimport ProfilePage from './profile.jsx';\nimport { getAllUsers, getUsersFriends, getUserById } from './../../DataBase/Users.js';\nimport { getFictionById } from './../../DataBase/Fictions.js';\nimport { getUsersComments } from './../../DataBase/Comments.js';\nimport { getLoggedUserId, getLoggedInStatus } from './../../LocalInfo/localInfo.js';\nimport { Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfilePagesContainer = props => {\n  let userLinks = getAllUsers().map(user => {\n    let link = '/profile/' + user.id;\n    let type = 'nobodyIsLoggedIn';\n\n    if (getLoggedInStatus()) {\n      if (user.id == getLoggedUserId()) {\n        type = 'loggedUsersProfile';\n      } else {\n        type = 'notLoggedUsersProfile';\n      }\n    }\n\n    let planned_films = [];\n    let watched_films = [];\n    let planned_books = [];\n    let read_books = [];\n\n    for (let i = 0; i < user.markedFiction; i++) {\n      if (user.markedFiction[i].status == 'completed') {\n        let f = getFictionById(user.markedFiction[i].fiction_id);\n\n        if (f.type == 'book') {\n          read_books.push(f);\n        } else if (f.type == 'film') {\n          watched_films.push(f);\n        }\n      } else if (user.markedFiction[i].status == 'planned') {\n        let f = getFictionById(user.markedFiction[i].fiction_id);\n\n        if (f.type == 'book') {\n          planned_books.push(f);\n        } else if (f.type == 'film') {\n          planned_films.push(f);\n        }\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: link,\n        element: /*#__PURE__*/_jsxDEV(ProfilePage, {\n          dispatch: props.dispatch,\n          fictions_info: fictions_info,\n          info: user.usersInfo,\n          friends: getUsersFriends(user.id),\n          comments: getUsersComments(user.id),\n          type: type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: link + '/planned_films',\n        element: /*#__PURE__*/_jsxDEV(CatalogPage, {\n          elems: planned_films\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: userLinks\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProfilePagesContainer;\nexport default ProfilePagesContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePagesContainer\");","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/webproject/src/components/ProfilePage/profilePagesContainer.jsx"],"names":["ProfilePage","getAllUsers","getUsersFriends","getUserById","getFictionById","getUsersComments","getLoggedUserId","getLoggedInStatus","Routes","Route","ProfilePagesContainer","props","userLinks","map","user","link","id","type","planned_films","watched_films","planned_books","read_books","i","markedFiction","status","f","fiction_id","push","dispatch","fictions_info","usersInfo"],"mappings":"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","sourcesContent":["import ProfilePage from './profile.jsx';\r\nimport {getAllUsers, getUsersFriends, getUserById} from './../../DataBase/Users.js'\r\nimport {getFictionById} from './../../DataBase/Fictions.js'\r\nimport {getUsersComments} from './../../DataBase/Comments.js'\r\nimport {getLoggedUserId, getLoggedInStatus} from './../../LocalInfo/localInfo.js'\r\nimport {Routes, Route} from \"react-router-dom\";\r\n\r\nconst ProfilePagesContainer = (props) =>{\r\n\r\n\r\n  let userLinks = getAllUsers().map((user)=>{\r\n    let link = '/profile/' + user.id;\r\n    let type = 'nobodyIsLoggedIn'\r\n    if (getLoggedInStatus()){\r\n      if (user.id == getLoggedUserId()) {\r\n        type = 'loggedUsersProfile';\r\n      } else{\r\n        type = 'notLoggedUsersProfile';\r\n      }\r\n    }\r\n\r\n    let planned_films = []\r\n    let watched_films = []\r\n    let planned_books = []\r\n    let read_books = []\r\n    for (let i = 0; i < user.markedFiction; i++){\r\n      if (user.markedFiction[i].status == 'completed'){\r\n        let f = getFictionById(user.markedFiction[i].fiction_id)\r\n        if (f.type == 'book'){\r\n          read_books.push(f)\r\n        } else if (f.type == 'film') {\r\n          watched_films.push(f)\r\n        }\r\n      } else if (user.markedFiction[i].status == 'planned') {\r\n        let f = getFictionById(user.markedFiction[i].fiction_id)\r\n        if (f.type == 'book'){\r\n          planned_books.push(f)\r\n        } else if (f.type == 'film') {\r\n          planned_films.push(f)\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    return (<div><Route path={link} element={<ProfilePage dispatch={props.dispatch}\r\n                              fictions_info={fictions_info} info={user.usersInfo}\r\n                              friends={getUsersFriends(user.id)}\r\n                              comments={getUsersComments(user.id)} type={type}/>}/>\r\n            <Route path={link+'/planned_films'}\r\n                   element={<CatalogPage elems={planned_films}/>}/>\r\n            </div>)\r\n  })\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Routes>\r\n      {userLinks}\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default ProfilePagesContainer;\r\n"]},"metadata":{},"sourceType":"module"}