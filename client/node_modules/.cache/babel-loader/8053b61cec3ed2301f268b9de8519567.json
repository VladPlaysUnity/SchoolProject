{"ast":null,"code":"const LOG_IN = 'LOG_IN';\nconst SIGN_UP = 'SIGN-UP;';\n\nlet User = usersInfo => {\n  this.usersInfo = usersInfo;\n};\n\n_c = User;\nlet intialState = {\n  status: '-',\n  users: [User({\n    name: 'John',\n    email: 'eee@gmail.com',\n    password: '12345'\n  }), User({\n    name: 'Paul',\n    email: 'aaa@gmail.com',\n    password: '12389'\n  })]\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action) {\n    case LOG_IN:\n      {\n        let stateCopy = { ...state\n        };\n        return stateCopy;\n      }\n\n    case SIGN_UP:\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.newPostText = action.newText;\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default usersReducer;\nexport const tryLogIn = (username, password) => ({\n  type: LOG_IN,\n  username: username,\n  password: password\n});\nexport const trySignUp = (username, password, email) => ({\n  type: SIGN_UP,\n  username: username,\n  password: password,\n  email: email\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/webproject/src/redux/reducers/usersR.js"],"names":["LOG_IN","SIGN_UP","User","usersInfo","intialState","status","users","name","email","password","usersReducer","state","action","stateCopy","newPostText","newText","tryLogIn","username","type","trySignUp"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,OAAO,GAAG,UAAhB;;AAEA,IAAIC,IAAI,GAAIC,SAAD,IAAa;AACtB,OAAKA,SAAL,GAAiBA,SAAjB;AACD,CAFD;;KAAID,I;AAIJ,IAAIE,WAAW,GAAG;AAACC,EAAAA,MAAM,EAAC,GAAR;AAAYC,EAAAA,KAAK,EAAC,CAACJ,IAAI,CAAC;AAACK,IAAAA,IAAI,EAAC,MAAN;AAAcC,IAAAA,KAAK,EAAC,eAApB;AAAqCC,IAAAA,QAAQ,EAAC;AAA9C,GAAD,CAAL,EAA+DP,IAAI,CAAC;AAACK,IAAAA,IAAI,EAAC,MAAN;AAAcC,IAAAA,KAAK,EAAC,eAApB;AAAqCC,IAAAA,QAAQ,EAAC;AAA9C,GAAD,CAAnE;AAAlB,CAAlB;;AAEA,MAAMC,YAAY,GAAG,YAAiC;AAAA,MAAhCC,KAAgC,uEAAxBP,WAAwB;AAAA,MAAXQ,MAAW;;AACpD,UAAQA,MAAR;AACE,SAAKZ,MAAL;AAAY;AACV,YAAIa,SAAS,GAAG,EAAC,GAAGF;AAAJ,SAAhB;AACA,eAAOE,SAAP;AACD;;AACD,SAAKZ,OAAL;AAAa;AACX,YAAIY,SAAS,GAAG,EAAC,GAAGF;AAAJ,SAAhB;AACAE,QAAAA,SAAS,CAACC,WAAV,GAAwBF,MAAM,CAACG,OAA/B;AACA,eAAOF,SAAP;AACD;;AAED;AACE,aAAOF,KAAP;AAZJ;AAcD,CAfD;;AAiBA,eAAeD,YAAf;AAEA,OAAO,MAAMM,QAAQ,GAAG,CAACC,QAAD,EAAWR,QAAX,MACtB;AAACS,EAAAA,IAAI,EAAElB,MAAP;AAAeiB,EAAAA,QAAQ,EAACA,QAAxB;AAAkCR,EAAAA,QAAQ,EAACA;AAA3C,CADsB,CAAjB;AAEP,OAAO,MAAMU,SAAS,GAAG,CAACF,QAAD,EAAWR,QAAX,EAAqBD,KAArB,MACvB;AAACU,EAAAA,IAAI,EAAEjB,OAAP;AAAgBgB,EAAAA,QAAQ,EAACA,QAAzB;AAAmCR,EAAAA,QAAQ,EAACA,QAA5C;AAAsDD,EAAAA,KAAK,EAACA;AAA5D,CADuB,CAAlB","sourcesContent":["const LOG_IN = 'LOG_IN';\r\nconst SIGN_UP = 'SIGN-UP;'\r\n\r\nlet User = (usersInfo)=>{\r\n  this.usersInfo = usersInfo\r\n}\r\n\r\nlet intialState = {status:'-',users:[User({name:'John', email:'eee@gmail.com', password:'12345'}), User({name:'Paul', email:'aaa@gmail.com', password:'12389'})]};\r\n\r\nconst usersReducer = (state = intialState, action) => {\r\n  switch (action) {\r\n    case LOG_IN:{\r\n      let stateCopy = {...state}\r\n      return stateCopy;\r\n    }\r\n    case SIGN_UP:{\r\n      let stateCopy = {...state}\r\n      stateCopy.newPostText = action.newText;\r\n      return stateCopy;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersReducer;\r\n\r\nexport const tryLogIn = (username, password) => (\r\n  {type: LOG_IN, username:username, password:password});\r\nexport const trySignUp = (username, password, email) => (\r\n  {type: SIGN_UP, username:username, password:password, email:email});\r\n"]},"metadata":{},"sourceType":"module"}