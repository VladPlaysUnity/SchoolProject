{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Litsey_10th_grade\\\\Informatics\\\\Fictionlib\\\\SchoolProject\\\\client\\\\src\\\\components\\\\CommentsComponent\\\\Comment\\\\comment.jsx\",\n    _s = $RefreshSig$();\n\nimport s from './comment.module.css';\nimport { getFictionById } from './../../../DataBase/Fictions.js';\nimport { getUserById } from './../../../DataBase/Users.js';\nimport { getStatusOfCommentFromUser } from './../../../DataBase/Comments.js';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentBlock = props => {\n  _s();\n\n  const [author, setAuthor] = useState('');\n  const [place, setPlace] = useState('');\n  const [status, setStatus] = useState(0);\n  const [lND, setLND] = useState('');\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    let fic = getFictionById(parseInt(props.comment.staticInfo.place)).then(f => f.info.name);\n    let aut = getUserById(parseInt(props.comment.staticInfo.author)).then(u => u.usersInfo.name);\n    let stat = props.loggedIn ? getStatusOfCommentFromUser(props.comment.iD, props.loggedUser) : 0;\n    Promise.all([fic, aut, stat]).then(res => {\n      setPlace(res[0]);\n      setAuthor(res[1]);\n      setStatus(res[2]);\n\n      if (props.loggedIn) {\n        let lb = '';\n        let db = '';\n        console.log(status);\n\n        if (status == \"like\") {\n          db = s.b2;\n          lb = s.b2 + \" \" + s.green;\n        } else if (status == \"dislike\") {\n          lb = s.b2;\n          db = s.b2 + \" \" + s.red;\n        } else {\n          lb = s.b2;\n          db = s.b2;\n        }\n\n        setLND( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.likesAndDislikes,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: lb,\n            onClick: like,\n            children: \"Like!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: db,\n            onClick: dislike,\n            children: \"Dislike!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 16\n        }, this));\n      } else {\n        setLND( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.likesAndDislikes,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this));\n      }\n\n      setIsLoaded(true);\n    });\n  }, [props.comment]);\n  let rating = parseInt(props.comment.dynamicInfo.likes.length) - parseInt(props.comment.dynamicInfo.dislikes.length);\n\n  let like = () => {\n    props.like_or_dislike(props.comment.iD, 'like');\n\n    if (status == 'like') {\n      setStatus('0');\n    } else if (status == 'dislike') {\n      setStatus('like');\n    } else {\n      setStatus('like');\n    }\n  };\n\n  let dislike = () => {\n    props.like_or_dislike(props.comment.iD, 'dislike');\n    setStatus('dislike');\n\n    if (status == '0') {\n      setStatus('0');\n    } else if (status == 'like') {\n      setStatus('dislike');\n    } else {\n      setStatus('dislike');\n    }\n  };\n\n  if (isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.commentBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.names,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.user,\n          children: author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.placeName,\n          children: place\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.commentText,\n        children: props.comment.staticInfo.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), lND]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s(CommentBlock, \"vvCz82Die8IgZNKzUk7Tyzj2zLI=\");\n\n_c = CommentBlock;\nexport default CommentBlock;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentBlock\");","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/SchoolProject/client/src/components/CommentsComponent/Comment/comment.jsx"],"names":["s","getFictionById","getUserById","getStatusOfCommentFromUser","useEffect","useState","CommentBlock","props","author","setAuthor","place","setPlace","status","setStatus","lND","setLND","isLoaded","setIsLoaded","fic","parseInt","comment","staticInfo","then","f","info","name","aut","u","usersInfo","stat","loggedIn","iD","loggedUser","Promise","all","res","lb","db","console","log","b2","green","red","likesAndDislikes","like","rating","dislike","dynamicInfo","likes","length","dislikes","like_or_dislike","commentBlock","names","user","placeName","commentText","content"],"mappings":"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","sourcesContent":["import s from './comment.module.css'\r\nimport {getFictionById} from './../../../DataBase/Fictions.js'\r\nimport {getUserById} from './../../../DataBase/Users.js'\r\nimport {getStatusOfCommentFromUser} from './../../../DataBase/Comments.js'\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst CommentBlock = (props)=>{\r\n  const [author, setAuthor] = useState('')\r\n  const [place, setPlace] = useState('')\r\n  const [status, setStatus] = useState(0)\r\n  const [lND, setLND] = useState('')\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n  useEffect(()=>{\r\n    let fic = getFictionById(parseInt(props.comment.staticInfo.place))\r\n    .then((f)=>f.info.name)\r\n    let aut = getUserById(parseInt(props.comment.staticInfo.author))\r\n    .then((u)=>u.usersInfo.name)\r\n    let stat = props.loggedIn? getStatusOfCommentFromUser(props.comment.iD, props.loggedUser):0\r\n    Promise.all([fic, aut, stat])\r\n    .then((res)=>{\r\n      setPlace(res[0])\r\n      setAuthor(res[1])\r\n      setStatus(res[2])\r\n      if (props.loggedIn){\r\n\r\n        let lb = ''\r\n        let db = ''\r\n        console.log(status);\r\n        if (status==\"like\"){\r\n          db = s.b2\r\n          lb = s.b2 + \" \" + s.green\r\n        } else if (status==\"dislike\") {\r\n          lb = s.b2\r\n          db = s.b2 + \" \" + s.red\r\n        } else{\r\n          lb = s.b2\r\n          db = s.b2\r\n        }\r\n\r\n        setLND(<div className={s.likesAndDislikes}>\r\n                        <button className={lb} onClick={like}>Like!</button>\r\n                        <div>{rating}</div>\r\n                        <button className={db} onClick={dislike}>Dislike!</button>\r\n                      </div>)\r\n      } else{\r\n        setLND( <div className={s.likesAndDislikes}>\r\n                        <div></div>\r\n                        <div>{rating}</div>\r\n                        <div></div>\r\n                      </div>)\r\n      }\r\n      setIsLoaded(true)\r\n    })\r\n  }, [props.comment])\r\n\r\n  let rating = parseInt(props.comment.dynamicInfo.likes.length) - parseInt(props.comment.dynamicInfo.dislikes.length)\r\n\r\n  let like = () =>{\r\n    props.like_or_dislike(props.comment.iD, 'like')\r\n    if (status == 'like'){\r\n      setStatus('0')\r\n    }else if (status == 'dislike') {\r\n      setStatus('like')\r\n    } else{\r\n      setStatus('like')\r\n    }\r\n\r\n  }\r\n  let dislike = () =>{\r\n    props.like_or_dislike(props.comment.iD, 'dislike')\r\n    setStatus('dislike')\r\n    if (status == '0'){\r\n      setStatus('0')\r\n    }else if (status == 'like') {\r\n      setStatus('dislike')\r\n    } else{\r\n      setStatus('dislike')\r\n    }\r\n  }\r\n\r\n  if(isLoaded){\r\n    return (\r\n      <div className={s.commentBlock}>\r\n        <div className={s.names}>\r\n          <div className={s.user}>{author}</div>\r\n          <div className={s.placeName} >{place}</div>\r\n        </div>\r\n        <div className={s.commentText}>{props.comment.staticInfo.content}</div>\r\n        {lND}\r\n      </div>\r\n    )\r\n  } else{\r\n    return <div>Loading</div>\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default CommentBlock;\r\n"]},"metadata":{},"sourceType":"module"}