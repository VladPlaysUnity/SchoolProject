{"ast":null,"code":"const LOG_IN = 'LOG_IN';\nconst SIGN_UP = 'SIGN-UP;';\nlet intialState = {\n  status: '-',\n  users: [{\n    name: 'John',\n    email: 'eee@gmail.com',\n    password: 'lol'\n  }, {\n    name: 'Paul',\n    email: 'aaa@gmail.com',\n    password: '12389'\n  }]\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN:\n      {\n        for (let i = 0; i < state.users.length; i++) {\n          if (state.users[i].name == action.username && state.users[i].password == action.password) {\n            let stateCopy = { ...state\n            };\n            stateCopy.status = '+';\n            console.log(stateCopy.status);\n            return stateCopy;\n          }\n        }\n\n        console.log(state.users[0].name);\n        console.log(action.username);\n        console.log(state.users[0].password);\n        console.log(action.password);\n        console.log(state.status);\n        return state;\n      }\n\n    case SIGN_UP:\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.status = '+';\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default usersReducer;\nexport const tryLogIn = (username, password) => ({\n  type: LOG_IN,\n  username: username,\n  password: password\n});\nexport const trySignUp = (username, password, email) => ({\n  type: SIGN_UP,\n  username: username,\n  password: password,\n  email: email\n});","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/webproject/src/redux/reducers/usersR.js"],"names":["LOG_IN","SIGN_UP","intialState","status","users","name","email","password","usersReducer","state","action","type","i","length","username","stateCopy","console","log","tryLogIn","trySignUp"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,OAAO,GAAG,UAAhB;AAEA,IAAIC,WAAW,GAAG;AAACC,EAAAA,MAAM,EAAC,GAAR;AAAYC,EAAAA,KAAK,EAAC,CAAC;AAACC,IAAAA,IAAI,EAAC,MAAN;AAAcC,IAAAA,KAAK,EAAC,eAApB;AAAqCC,IAAAA,QAAQ,EAAC;AAA9C,GAAD,EAAuD;AAACF,IAAAA,IAAI,EAAC,MAAN;AAAcC,IAAAA,KAAK,EAAC,eAApB;AAAqCC,IAAAA,QAAQ,EAAC;AAA9C,GAAvD;AAAlB,CAAlB;;AAEA,MAAMC,YAAY,GAAG,YAAiC;AAAA,MAAhCC,KAAgC,uEAAxBP,WAAwB;AAAA,MAAXQ,MAAW;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,MAAL;AAAY;AACV,aAAK,IAAIY,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACH,KAAK,CAACL,KAAN,CAAYS,MAA5B,EAAmCD,CAAC,EAApC,EAAuC;AACrC,cAAKH,KAAK,CAACL,KAAN,CAAYQ,CAAZ,EAAeP,IAAf,IAAuBK,MAAM,CAACI,QAA/B,IAA6CL,KAAK,CAACL,KAAN,CAAYQ,CAAZ,EAAeL,QAAf,IAA2BG,MAAM,CAACH,QAAnF,EAA6F;AAC3F,gBAAIQ,SAAS,GAAG,EAAC,GAAGN;AAAJ,aAAhB;AACAM,YAAAA,SAAS,CAACZ,MAAV,GAAmB,GAAnB;AACAa,YAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACZ,MAAtB;AACA,mBAAOY,SAAP;AACD;AACF;;AACDC,QAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACL,KAAN,CAAY,CAAZ,EAAeC,IAA3B;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACI,QAAnB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACL,KAAN,CAAY,CAAZ,EAAeG,QAA3B;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACH,QAAnB;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACN,MAAlB;AACA,eAAOM,KAAP;AACD;;AACD,SAAKR,OAAL;AAAa;AACX,YAAIc,SAAS,GAAG,EAAC,GAAGN;AAAJ,SAAhB;AACAM,QAAAA,SAAS,CAACZ,MAAV,GAAmB,GAAnB;AACA,eAAOY,SAAP;AACD;;AAED;AACE,aAAON,KAAP;AAxBJ;AA0BD,CA3BD;;AA6BA,eAAeD,YAAf;AAEA,OAAO,MAAMU,QAAQ,GAAG,CAACJ,QAAD,EAAWP,QAAX,MACtB;AAACI,EAAAA,IAAI,EAAEX,MAAP;AAAec,EAAAA,QAAQ,EAACA,QAAxB;AAAkCP,EAAAA,QAAQ,EAACA;AAA3C,CADsB,CAAjB;AAEP,OAAO,MAAMY,SAAS,GAAG,CAACL,QAAD,EAAWP,QAAX,EAAqBD,KAArB,MACvB;AAACK,EAAAA,IAAI,EAAEV,OAAP;AAAgBa,EAAAA,QAAQ,EAACA,QAAzB;AAAmCP,EAAAA,QAAQ,EAACA,QAA5C;AAAsDD,EAAAA,KAAK,EAACA;AAA5D,CADuB,CAAlB","sourcesContent":["const LOG_IN = 'LOG_IN';\r\nconst SIGN_UP = 'SIGN-UP;'\r\n\r\nlet intialState = {status:'-',users:[{name:'John', email:'eee@gmail.com', password:'lol'}, {name:'Paul', email:'aaa@gmail.com', password:'12389'}]};\r\n\r\nconst usersReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN:{\r\n      for (let i=0; i<state.users.length;i++){\r\n        if ((state.users[i].name == action.username) && (state.users[i].password == action.password)){\r\n          let stateCopy = {...state}\r\n          stateCopy.status = '+';\r\n          console.log(stateCopy.status);\r\n          return stateCopy;\r\n        }\r\n      }\r\n      console.log(state.users[0].name);\r\n      console.log(action.username);\r\n      console.log(state.users[0].password );\r\n      console.log(action.password);\r\n      console.log(state.status);\r\n      return state;\r\n    }\r\n    case SIGN_UP:{\r\n      let stateCopy = {...state}\r\n      stateCopy.status = '+';\r\n      return stateCopy;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersReducer;\r\n\r\nexport const tryLogIn = (username, password) => (\r\n  {type: LOG_IN, username:username, password:password});\r\nexport const trySignUp = (username, password, email) => (\r\n  {type: SIGN_UP, username:username, password:password, email:email});\r\n"]},"metadata":{},"sourceType":"module"}