{"ast":null,"code":"const ADD_COMMENT = 'ADD_COMMENT';\nconst CHANGE_LIKES_AND_DISLIKES = 'CHANGE_LIKES_AND_DISLIKES';\nlet intialState = {\n  comments: [{\n    id: 1,\n    staticInfo: {\n      content: 't1',\n      place: 'Tokyo Revengers',\n      author: 'user1'\n    },\n    dynamicInfo: {\n      dislikes: 0,\n      likes: 0\n    }\n  }, {\n    id: 2,\n    staticInfo: {\n      content: 't2',\n      place: 'Tokyo Revengers',\n      author: 'user3'\n    },\n    dynamicInfo: {\n      dislikes: 0,\n      likes: 0\n    }\n  }, {\n    id: 3,\n    staticInfo: {\n      content: 't3',\n      place: 'It',\n      author: 'user1'\n    },\n    dynamicInfo: {\n      dislikes: 0,\n      likes: 0\n    }\n  }, {\n    id: 4,\n    staticInfo: {\n      content: 't4',\n      place: 'Tokyo Revengers',\n      author: 'user2'\n    },\n    dynamicInfo: {\n      dislikes: 0,\n      likes: 0\n    }\n  }]\n};\n\nconst commentsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_COMMENT:\n      {\n        let newComment = {\n          id: 1,\n          staticInfo: {\n            content: action.info.content,\n            place: action.info.place,\n            author: action.info.author\n          },\n          dynamicInfo: {\n            dislikes: 0,\n            likes: 0\n          }\n        };\n        state.comments.push(newComment);\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addCommentActionCreator = (place, content, author) => ({\n  type: ADD_COMMENT,\n  info: {\n    place: place,\n    content: content,\n    author: author\n  }\n});\nexport default commentsReducer;","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/webproject/src/redux/reducers/commentsR.js"],"names":["ADD_COMMENT","CHANGE_LIKES_AND_DISLIKES","intialState","comments","id","staticInfo","content","place","author","dynamicInfo","dislikes","likes","commentsReducer","state","action","type","newComment","info","push","addCommentActionCreator"],"mappings":"AAAA,MAAMA,WAAW,GAAG,aAApB;AACA,MAAMC,yBAAyB,GAAG,2BAAlC;AAEA,IAAIC,WAAW,GAAG;AAACC,EAAAA,QAAQ,EAAE,CAAC;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,UAAU,EAAE;AAACC,MAAAA,OAAO,EAAC,IAAT;AAAeC,MAAAA,KAAK,EAAC,iBAArB;AAAwCC,MAAAA,MAAM,EAAC;AAA/C,KAAnB;AAA4EC,IAAAA,WAAW,EAAC;AAACC,MAAAA,QAAQ,EAAE,CAAX;AAAcC,MAAAA,KAAK,EAAE;AAArB;AAAxF,GAAD,EACC;AAACP,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,UAAU,EAAE;AAACC,MAAAA,OAAO,EAAC,IAAT;AAAeC,MAAAA,KAAK,EAAC,iBAArB;AAAwCC,MAAAA,MAAM,EAAC;AAA/C,KAAnB;AAA4EC,IAAAA,WAAW,EAAC;AAACC,MAAAA,QAAQ,EAAE,CAAX;AAAcC,MAAAA,KAAK,EAAE;AAArB;AAAxF,GADD,EAEC;AAACP,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,UAAU,EAAE;AAACC,MAAAA,OAAO,EAAC,IAAT;AAAeC,MAAAA,KAAK,EAAC,IAArB;AAA2BC,MAAAA,MAAM,EAAC;AAAlC,KAAnB;AAA+DC,IAAAA,WAAW,EAAC;AAACC,MAAAA,QAAQ,EAAE,CAAX;AAAcC,MAAAA,KAAK,EAAE;AAArB;AAA3E,GAFD,EAGC;AAACP,IAAAA,EAAE,EAAC,CAAJ;AAAOC,IAAAA,UAAU,EAAE;AAACC,MAAAA,OAAO,EAAC,IAAT;AAAeC,MAAAA,KAAK,EAAC,iBAArB;AAAwCC,MAAAA,MAAM,EAAC;AAA/C,KAAnB;AAA4EC,IAAAA,WAAW,EAAC;AAACC,MAAAA,QAAQ,EAAE,CAAX;AAAcC,MAAAA,KAAK,EAAE;AAArB;AAAxF,GAHD;AAAX,CAAlB;;AAKA,MAAMC,eAAe,GAAG,YAAiC;AAAA,MAAhCC,KAAgC,uEAAxBX,WAAwB;AAAA,MAAXY,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKf,WAAL;AAAkB;AAChB,YAAIgB,UAAU,GAAG;AAACZ,UAAAA,EAAE,EAAC,CAAJ;AAAOC,UAAAA,UAAU,EAAE;AAACC,YAAAA,OAAO,EAACQ,MAAM,CAACG,IAAP,CAAYX,OAArB;AAA8BC,YAAAA,KAAK,EAACO,MAAM,CAACG,IAAP,CAAYV,KAAhD;AAAuDC,YAAAA,MAAM,EAACM,MAAM,CAACG,IAAP,CAAYT;AAA1E,WAAnB;AAAsGC,UAAAA,WAAW,EAAC;AAACC,YAAAA,QAAQ,EAAE,CAAX;AAAcC,YAAAA,KAAK,EAAE;AAArB;AAAlH,SAAjB;AACAE,QAAAA,KAAK,CAACV,QAAN,CAAee,IAAf,CAAoBF,UAApB;AACA,eAAOH,KAAP;AACD;;AAED;AACE,aAAOA,KAAP;AARJ;AAUD,CAXD;;AAcA,OAAO,MAAMM,uBAAuB,GAAG,CAACZ,KAAD,EAAQD,OAAR,EAAiBE,MAAjB,MAA6B;AAACO,EAAAA,IAAI,EAAEf,WAAP;AAAoBiB,EAAAA,IAAI,EAAC;AAACV,IAAAA,KAAK,EAAEA,KAAR;AAAeD,IAAAA,OAAO,EAAEA,OAAxB;AAAiCE,IAAAA,MAAM,EAAEA;AAAzC;AAAzB,CAA7B,CAAhC;AACP,eAAeI,eAAf","sourcesContent":["const ADD_COMMENT = 'ADD_COMMENT';\r\nconst CHANGE_LIKES_AND_DISLIKES = 'CHANGE_LIKES_AND_DISLIKES';\r\n\r\nlet intialState = {comments: [{id:1, staticInfo: {content:'t1', place:'Tokyo Revengers', author:'user1'}, dynamicInfo:{dislikes: 0, likes: 0,}},\r\n                              {id:2, staticInfo: {content:'t2', place:'Tokyo Revengers', author:'user3'}, dynamicInfo:{dislikes: 0, likes: 0,}},\r\n                              {id:3, staticInfo: {content:'t3', place:'It', author:'user1'}, dynamicInfo:{dislikes: 0, likes: 0,}},\r\n                              {id:4, staticInfo: {content:'t4', place:'Tokyo Revengers', author:'user2'}, dynamicInfo:{dislikes: 0, likes: 0,}}]};\r\n\r\nconst commentsReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_COMMENT: {\r\n      let newComment = {id:1, staticInfo: {content:action.info.content, place:action.info.place, author:action.info.author}, dynamicInfo:{dislikes: 0, likes: 0,}};\r\n      state.comments.push(newComment);\r\n      return state;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const addCommentActionCreator = (place, content, author) => ({type: ADD_COMMENT, info:{place: place, content: content, author: author}});\r\nexport default commentsReducer;\r\n"]},"metadata":{},"sourceType":"module"}