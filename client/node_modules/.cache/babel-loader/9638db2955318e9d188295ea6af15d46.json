{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Litsey_10th_grade\\\\Informatics\\\\Fictionlib\\\\SchoolProject\\\\client\\\\src\\\\components\\\\ChosenFiction\\\\chosenFictionContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { getFictionById, getAllFictions, getRatingOfFictionFromUser, getOverallRatingOfFiction } from './../../DataBase/Fictions.js';\nimport { getUsersFollowedPeople, getFictionAtUser } from './../../DataBase/Users.js';\nimport { getFictionsComments } from './../../DataBase/Comments.js';\nimport { getLoggedInStatus } from './../../LocalInfo/localInfo.js';\nimport { changeUsersRatingOfFictionActionCreator, changeUsersStatusOfFictionActionCreator, addCommentActionCreator } from './../../redux/reducers/chosenFictionReducer.js';\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport ChosenFiction from './chosenFiction.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChosenFictionContainer = props => {\n  _s();\n\n  const [fiction, setFiction] = useState([]);\n  const [userRating, setUserRating] = useState(0);\n  const [fictionAtFollowed, setFictionAtFollowed] = useState([]);\n  const [userStatus, setUserStatus] = useState('not completed');\n  const [overallRating, setOverallRating] = useState(0);\n  const params = useParams();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    let fP = getFictionById(params.iD);\n    let oRP = getOverallRatingOfFiction(params.iD);\n    let rP = '';\n    let uS = '';\n    let followedPeoplePromises = '';\n\n    if (getLoggedInStatus()) {\n      rP = getRatingOfFictionFromUser(params.iD, props.loggedUser);\n      uS = getFictionAtUser(props.loggedUser, params.iD);\n      followedPeoplePromises = getUsersFollowedPeople(props.loggedUser).then(followedPeople => {\n        let k = '';\n        let miniPromises = [];\n\n        for (let i = 0; i < followedPeople.length; i++) {\n          k = getFictionAtUser(followedPeople[i].iD).then(status => {\n            let d = {\n              iD: followedPeople[i].iD,\n              name: followedPeople[i].usersInfo.name,\n              status: status\n            };\n            return d;\n          });\n          miniPromises.push(k);\n        }\n\n        return Promise.all(miniPromises);\n      });\n    }\n\n    if (getLoggedInStatus()) {\n      Promise.all([fP, rP, oRP, uS, followedPeoplePromises]).then(result => {\n        setFiction(result[0]);\n        setOverallRating(result[2]);\n        setUserRating(result[1]);\n        setUserStatus(result[3]);\n        setFictionAtFollowed(result[4]);\n        setIsLoaded(true);\n      });\n    } else {\n      Promise.all([fP, oRP]).then(result => {\n        setFiction(result[0]);\n        setOverallRating(result[1]);\n        setIsLoaded(true);\n      });\n    }\n  }, [props.loggedUser, params.iD]);\n  let view = '';\n\n  if (getLoggedInStatus()) {\n    view = 'loggedInUsersView';\n  } else {\n    view = 'notLoggedInUsersView';\n  }\n\n  let changeUsersRatingOfFiction = rating => {\n    props.dispatch(changeUsersRatingOfFictionActionCreator(params.iD, props.loggedUser, rating));\n    setUserRating(rating);\n  };\n\n  let changeUsersStatusOfFiction = status => {\n    props.dispatch(changeUsersStatusOfFictionActionCreator(props.loggedUser, params.iD, status));\n    setUserStatus(status);\n  }; //let friendsOfUser = getUsersFriends(props.loggedUser)\n  //for (var i = 0; i < friendsOfUser.length; i++) {\n  //  fictionAtFriends.push({iD:friendsOfUser[i].iD, name:friendsOfUser[i].usersInfo.name, status:getFictionAtUser(fiction.iD, friendsOfUser[i].iD)})\n  //}\n\n\n  let addComment = content => {//props.dispatch(addCommentActionCreator(props.loggedUser,fiction.iD, content))\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }, this);\n  } else if (isLoaded) {\n    if (!fiction) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Fiction not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ChosenFiction, {\n        fiction: fiction,\n        usersStatus: userStatus,\n        usersRating: userRating,\n        overallRating: overallRating,\n        comments: [],\n        fictionAtFollowed: fictionAtFollowed,\n        addComment: addComment,\n        changeUsersRatingOfFiction: changeUsersRatingOfFiction,\n        changeUsersStatusOfFiction: changeUsersStatusOfFiction,\n        view: view,\n        dispatch: props.dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(ChosenFictionContainer, \"eOv69WRmoEWDs67RAkad70OzgiQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = ChosenFictionContainer;\nexport default ChosenFictionContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChosenFictionContainer\");","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/SchoolProject/client/src/components/ChosenFiction/chosenFictionContainer.jsx"],"names":["getFictionById","getAllFictions","getRatingOfFictionFromUser","getOverallRatingOfFiction","getUsersFollowedPeople","getFictionAtUser","getFictionsComments","getLoggedInStatus","changeUsersRatingOfFictionActionCreator","changeUsersStatusOfFictionActionCreator","addCommentActionCreator","useParams","useNavigate","useState","useEffect","ChosenFiction","ChosenFictionContainer","props","fiction","setFiction","userRating","setUserRating","fictionAtFollowed","setFictionAtFollowed","userStatus","setUserStatus","overallRating","setOverallRating","params","error","setError","isLoaded","setIsLoaded","navigate","fP","iD","oRP","rP","uS","followedPeoplePromises","loggedUser","then","followedPeople","k","miniPromises","i","length","status","d","name","usersInfo","push","Promise","all","result","view","changeUsersRatingOfFiction","rating","dispatch","changeUsersStatusOfFiction","addComment","content","message"],"mappings":"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","sourcesContent":["import { getFictionById, getAllFictions, getRatingOfFictionFromUser, getOverallRatingOfFiction } from './../../DataBase/Fictions.js'\r\nimport { getUsersFollowedPeople, getFictionAtUser } from './../../DataBase/Users.js'\r\nimport { getFictionsComments } from './../../DataBase/Comments.js'\r\nimport { getLoggedInStatus } from './../../LocalInfo/localInfo.js'\r\nimport { changeUsersRatingOfFictionActionCreator, changeUsersStatusOfFictionActionCreator, addCommentActionCreator } from './../../redux/reducers/chosenFictionReducer.js'\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useState, useEffect } from 'react';\r\nimport ChosenFiction from './chosenFiction.jsx'\r\n\r\nconst ChosenFictionContainer = (props) =>{\r\n  const [fiction, setFiction] = useState([]);\r\n  const [userRating, setUserRating] = useState(0)\r\n  const [fictionAtFollowed, setFictionAtFollowed] = useState([])\r\n  const [userStatus, setUserStatus] = useState('not completed')\r\n  const [overallRating, setOverallRating] = useState(0)\r\n  const params = useParams();\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n useEffect(() => {\r\n   let fP = getFictionById(params.iD)\r\n   let oRP = getOverallRatingOfFiction(params.iD)\r\n   let rP = ''\r\n   let uS = ''\r\n   let followedPeoplePromises = ''\r\n   if (getLoggedInStatus()){\r\n     rP = getRatingOfFictionFromUser(params.iD, props.loggedUser)\r\n     uS = getFictionAtUser(props.loggedUser, params.iD)\r\n     followedPeoplePromises = getUsersFollowedPeople(props.loggedUser)\r\n     .then((followedPeople)=>{\r\n       let k = ''\r\n       let miniPromises = []\r\n       for (let i = 0; i < followedPeople.length; i++) {\r\n         k = getFictionAtUser(followedPeople[i].iD)\r\n         .then((status)=>{\r\n           let d = {iD:followedPeople[i].iD, name:followedPeople[i].usersInfo.name, status:status}\r\n           return d\r\n         })\r\n         miniPromises.push(k)\r\n       }\r\n        return Promise.all(miniPromises)\r\n     })\r\n   }\r\n\r\n\r\n\r\n   if (getLoggedInStatus()){\r\n     Promise.all([fP, rP, oRP, uS, followedPeoplePromises])\r\n     .then((result)=>{\r\n       setFiction(result[0])\r\n       setOverallRating(result[2])\r\n       setUserRating(result[1])\r\n       setUserStatus(result[3])\r\n       setFictionAtFollowed(result[4])\r\n       setIsLoaded(true)\r\n     })\r\n   } else{\r\n     Promise.all([fP, oRP])\r\n     .then((result)=>{\r\n       setFiction(result[0])\r\n       setOverallRating(result[1])\r\n       setIsLoaded(true)\r\n     })}\r\n }, [props.loggedUser,params.iD]);\r\n\r\n let view = ''\r\n if (getLoggedInStatus()){\r\n   view = 'loggedInUsersView';\r\n }else{\r\n   view = 'notLoggedInUsersView';\r\n }\r\n\r\n let changeUsersRatingOfFiction = (rating) =>{\r\n   props.dispatch(changeUsersRatingOfFictionActionCreator(params.iD, props.loggedUser, rating))\r\n   setUserRating(rating)\r\n }\r\n let changeUsersStatusOfFiction = (status) =>{\r\n   props.dispatch(changeUsersStatusOfFictionActionCreator(props.loggedUser, params.iD, status))\r\n   setUserStatus(status)\r\n }\r\n\r\n //let friendsOfUser = getUsersFriends(props.loggedUser)\r\n //for (var i = 0; i < friendsOfUser.length; i++) {\r\n //  fictionAtFriends.push({iD:friendsOfUser[i].iD, name:friendsOfUser[i].usersInfo.name, status:getFictionAtUser(fiction.iD, friendsOfUser[i].iD)})\r\n //}\r\n\r\n let addComment = (content) =>{\r\n   //props.dispatch(addCommentActionCreator(props.loggedUser,fiction.iD, content))\r\n }\r\n\r\n\r\n  if (error){\r\n    return <div>Error: {error.message}</div>\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>\r\n  } else if (isLoaded) {\r\n    if(!fiction){\r\n      return <div>Fiction not found</div>\r\n    }\r\n    return(\r\n      <div>\r\n      <ChosenFiction fiction={fiction}\r\n                usersStatus={userStatus}\r\n                usersRating={userRating}\r\n                overallRating={overallRating}\r\n                comments={[]}\r\n                fictionAtFollowed={fictionAtFollowed} addComment={addComment}\r\n                changeUsersRatingOfFiction={changeUsersRatingOfFiction}\r\n                changeUsersStatusOfFiction={changeUsersStatusOfFiction}\r\n                view={view} dispatch={props.dispatch}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChosenFictionContainer;\r\n"]},"metadata":{},"sourceType":"module"}