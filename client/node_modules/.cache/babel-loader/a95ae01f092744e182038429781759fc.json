{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Litsey_10th_grade\\\\Informatics\\\\Fictionlib\\\\SchoolProject\\\\client\\\\src\\\\components\\\\CommentsComponent\\\\commentsContainer.jsx\";\nimport s from './commentsContainer.module.css';\nimport { changeLikeOrDislikeOfCommentActionCreator } from './../../redux/reducers/profileReducer.js';\nimport { getLoggedInStatus, getLoggedUserId } from './../../LocalInfo/localInfo.js';\nimport { getUsersComments, getStatusOfCommentFromUser } from './../../DataBase/Comments.js';\nimport { getFictionById } from './../../DataBase/Fictions.js';\nimport { getUserById } from './../../DataBase/Users.js';\nimport CommentBlock from './Comment/comment.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentsContainer = props => {\n  let comments = [];\n  let promises = [];\n\n  if (getLoggedInStatus()) {\n    comments = props.comments.map(comment => {\n      promises.push(getStatusOfCommentFromUser(getLoggedUserId(), comment.iD));\n      promises.push(getUserById(parseInt(comment.author)).then(user => user.usersInfo.name));\n      promises.push(getFictionById(parseInt(comment.place)).then(fiction => fiction.info.name));\n      Promise.all(promises).then(data => {\n        return /*#__PURE__*/_jsxDEV(CommentBlock, {\n          comment: comment,\n          status: promises[0],\n          author: promises[1],\n          place: promises[2],\n          loggedIn: getLoggedInStatus(),\n          like_or_dislike: props.like_or_dislike\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 16\n        }, this);\n      });\n    });\n  } else {\n    comments = props.comments.map(comment => {\n      promises.push(getUserById(comment.author).then(user => user.usersInfo.name));\n      promises.push(getFictionById(comment.place).then(fiction => fiction.info.name));\n      Promise.all(promises).then(data => {\n        return /*#__PURE__*/_jsxDEV(CommentBlock, {\n          comment: comment,\n          status: 'none',\n          author: promises[1],\n          place: promises[2],\n          loggedIn: getLoggedInStatus(),\n          like_or_dislike: props.like_or_dislike\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 16\n        }, this);\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.comments,\n    children: comments\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CommentsContainer;\nexport default CommentsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsContainer\");","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/SchoolProject/client/src/components/CommentsComponent/commentsContainer.jsx"],"names":["s","changeLikeOrDislikeOfCommentActionCreator","getLoggedInStatus","getLoggedUserId","getUsersComments","getStatusOfCommentFromUser","getFictionById","getUserById","CommentBlock","CommentsContainer","props","comments","promises","map","comment","push","iD","parseInt","author","then","user","usersInfo","name","place","fiction","info","Promise","all","data","like_or_dislike"],"mappings":"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","sourcesContent":["import s from './commentsContainer.module.css'\r\nimport {changeLikeOrDislikeOfCommentActionCreator} from './../../redux/reducers/profileReducer.js'\r\nimport {getLoggedInStatus, getLoggedUserId} from './../../LocalInfo/localInfo.js'\r\nimport {getUsersComments, getStatusOfCommentFromUser} from './../../DataBase/Comments.js'\r\nimport {getFictionById} from './../../DataBase/Fictions.js'\r\nimport {getUserById} from './../../DataBase/Users.js'\r\nimport CommentBlock from './Comment/comment.jsx'\r\n\r\nconst CommentsContainer= (props)=>{\r\n\r\n  let comments = []\r\n  let promises = []\r\n  if (getLoggedInStatus()){\r\n    comments = props.comments.map((comment) =>{\r\n      promises.push(getStatusOfCommentFromUser(getLoggedUserId(), comment.iD))\r\n      promises.push(getUserById(parseInt(comment.author)).then((user)=>user.usersInfo.name))\r\n      promises.push(getFictionById(parseInt(comment.place)).then((fiction)=>fiction.info.name))\r\n      Promise.all(promises)\r\n      .then((data)=>{\r\n        return <CommentBlock comment={comment} status={promises[0]} author={promises[1]} place={promises[2]} loggedIn={getLoggedInStatus()} like_or_dislike={props.like_or_dislike}/>\r\n      })\r\n  })} else{\r\n    comments = props.comments.map((comment) =>{\r\n      promises.push(getUserById(comment.author).then((user)=>user.usersInfo.name))\r\n      promises.push(getFictionById(comment.place).then((fiction)=>fiction.info.name))\r\n      Promise.all(promises)\r\n      .then((data)=>{\r\n        return <CommentBlock comment={comment} status={'none'} author={promises[1]} place={promises[2]} loggedIn={getLoggedInStatus()} like_or_dislike={props.like_or_dislike}/>\r\n      })\r\n  })}\r\n\r\n\r\n  return (\r\n    <div className={s.comments}>\r\n      {comments}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentsContainer;\r\n"]},"metadata":{},"sourceType":"module"}