{"ast":null,"code":"const ADD_COMMENT = 'ADD_COMMENT';\nconst CHANGE_LIKES_AND_DISLIKES = 'CHANGE_LIKES_AND_DISLIKES';\nlet intialState = {\n  comments: []\n};\n\nconst commentsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_COMMENT:\n      {\n        let newComment = {\n          id: state.comments[state.comments.length - 1].id + 1,\n          staticInfo: {\n            content: action.info.content,\n            place: action.info.place,\n            author: action.info.author\n          },\n          dynamicInfo: {\n            dislikes: 0,\n            likes: 0\n          }\n        };\n        let stateCopy = { ...state\n        };\n        stateCopy.comments = [...state.comments];\n        stateCopy.comments.push(newComment);\n        return stateCopy;\n      }\n      ;\n\n    case CHANGE_LIKES_AND_DISLIKES:\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.comments = [...state.comments];\n\n        if (action.like_or_dislike == 'like') {\n          for (let i = 0; i < state.comments.length; i++) {\n            if (stateCopy.comments[i].id == action.id) {\n              stateCopy.comments[i].dynamicInfo.likes += 1;\n            }\n          }\n        } else if (action.like_or_dislike == 'dislike') {\n          for (let i = 0; i < state.comments.length; i++) {\n            if (stateCopy.comments[i].id == action.id) {\n              stateCopy.comments[i].dynamicInfo.dislikes += 1;\n            }\n          }\n        }\n\n        return stateCopy;\n      }\n      ;\n\n    default:\n      return state;\n  }\n};\n\nexport const addCommentActionCreator = (place, content, author) => ({\n  type: ADD_COMMENT,\n  info: {\n    place: place,\n    content: content,\n    author: author\n  }\n});\nexport const changeLikesAndDislikesActionCreator = (id, like_or_dislike) => ({\n  type: CHANGE_LIKES_AND_DISLIKES,\n  id: id,\n  like_or_dislike: like_or_dislike\n});\nexport default commentsReducer;","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/webproject/src/redux/reducers/commentsR.js"],"names":["ADD_COMMENT","CHANGE_LIKES_AND_DISLIKES","intialState","comments","commentsReducer","state","action","type","newComment","id","length","staticInfo","content","info","place","author","dynamicInfo","dislikes","likes","stateCopy","push","like_or_dislike","i","addCommentActionCreator","changeLikesAndDislikesActionCreator"],"mappings":"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","sourcesContent":["const ADD_COMMENT = 'ADD_COMMENT';\r\nconst CHANGE_LIKES_AND_DISLIKES = 'CHANGE_LIKES_AND_DISLIKES';\r\n\r\nlet intialState = {comments:[]};\r\n\r\nconst commentsReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_COMMENT: {\r\n      let newComment = {id:state.comments[state.comments.length-1].id+1, staticInfo: {content:action.info.content, place:action.info.place, author:action.info.author}, dynamicInfo:{dislikes: 0, likes: 0,}};\r\n      let stateCopy = {...state};\r\n      stateCopy.comments = [...state.comments];\r\n      stateCopy.comments.push(newComment);\r\n      return stateCopy;\r\n    };\r\n    case CHANGE_LIKES_AND_DISLIKES: {\r\n      let stateCopy = {...state};\r\n      stateCopy.comments = [...state.comments];\r\n      if (action.like_or_dislike=='like'){\r\n        for (let i=0;i<state.comments.length; i++){\r\n            if (stateCopy.comments[i].id == action.id){\r\n              stateCopy.comments[i].dynamicInfo.likes += 1\r\n            }\r\n        }\r\n      }else if (action.like_or_dislike=='dislike') {\r\n        for (let i=0;i<state.comments.length; i++){\r\n            if (stateCopy.comments[i].id == action.id){\r\n              stateCopy.comments[i].dynamicInfo.dislikes += 1\r\n            }\r\n        }\r\n      }\r\n      return stateCopy;\r\n    };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const addCommentActionCreator = (place, content, author) => ({type: ADD_COMMENT, info:{place: place, content: content, author: author}});\r\nexport const changeLikesAndDislikesActionCreator = (id, like_or_dislike) => ({type: CHANGE_LIKES_AND_DISLIKES, id:id, like_or_dislike:like_or_dislike})\r\nexport default commentsReducer;\r\n"]},"metadata":{},"sourceType":"module"}