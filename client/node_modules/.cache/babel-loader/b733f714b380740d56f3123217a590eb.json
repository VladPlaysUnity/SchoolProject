{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Litsey_10th_grade\\\\Informatics\\\\Fictionlib\\\\webproject\\\\src\\\\components\\\\ProfilePage\\\\profilePagesContainer.jsx\";\nimport ProfilePage from './profile.jsx';\nimport { getAllUsers, getUsersFriends, getUserById } from './../../DataBase/Users.js';\nimport { getUsersComments } from './../../DataBase/Comments.js';\nimport { getLoggedUserId, getLoggedInStatus } from './../../LocalInfo/localInfo.js';\nimport { Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfilePagesContainer = props => {\n  let userLinks = getAllUsers().map(user => {\n    let link = '/profile/' + user.id;\n    let type = 'nobodyIsLoggedIn';\n\n    if (getLoggedInStatus()) {\n      if (user.id == getLoggedUserId()) {\n        type = 'loggedUsersProfile';\n      } else {\n        type = 'notLoggedUsersProfile';\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(Route, {\n      path: link,\n      element: /*#__PURE__*/_jsxDEV(ProfilePage, {\n        dispatch: props.dispatch,\n        info: user.usersInfo,\n        friends: getUsersFriends(user.id),\n        comments: getUsersComments(user.id),\n        type: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  });\n  let loggedUser = getUserById(getLoggedUserId());\n  let planned_films = [];\n  let watched_films = [];\n  let planned_books = [];\n  let read_books = [];\n\n  for (let i = 0; i < loggedUser.markedFiction; i++) {\n    if (loggedUser.markedFiction[i].status == 'completed') {\n      f = getFictionById(loggedUser.markedFiction[i].fiction_id);\n\n      if (f.type == 'book') {\n        planned_books.push({\n          id: f.id,\n          info: f.info\n        });\n      } else if (f.type == 'film') {\n        planned_films.push({\n          id: f.id,\n          info: f.info\n        });\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: userLinks\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProfilePagesContainer;\nexport default ProfilePagesContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePagesContainer\");","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/webproject/src/components/ProfilePage/profilePagesContainer.jsx"],"names":["ProfilePage","getAllUsers","getUsersFriends","getUserById","getUsersComments","getLoggedUserId","getLoggedInStatus","Routes","Route","ProfilePagesContainer","props","userLinks","map","user","link","id","type","dispatch","usersInfo","loggedUser","planned_films","watched_films","planned_books","read_books","i","markedFiction","status","f","getFictionById","fiction_id","push","info"],"mappings":";AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,WAAtC,QAAwD,2BAAxD;AACA,SAAQC,gBAAR,QAA+B,8BAA/B;AACA,SAAQC,eAAR,EAAyBC,iBAAzB,QAAiD,gCAAjD;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,kBAA5B;;;AAEA,MAAMC,qBAAqB,GAAIC,KAAD,IAAU;AACtC,MAAIC,SAAS,GAAGV,WAAW,GAAGW,GAAd,CAAmBC,IAAD,IAAQ;AACxC,QAAIC,IAAI,GAAG,cAAcD,IAAI,CAACE,EAA9B;AACA,QAAIC,IAAI,GAAG,kBAAX;;AACA,QAAIV,iBAAiB,EAArB,EAAwB;AACtB,UAAIO,IAAI,CAACE,EAAL,IAAWV,eAAe,EAA9B,EAAkC;AAChCW,QAAAA,IAAI,GAAG,oBAAP;AACD,OAFD,MAEM;AACJA,QAAAA,IAAI,GAAG,uBAAP;AACD;AACF;;AACD,wBAAQ,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEF,IAAb;AAAmB,MAAA,OAAO,eAAE,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAEJ,KAAK,CAACO,QAA7B;AAAuC,QAAA,IAAI,EAAEJ,IAAI,CAACK,SAAlD;AAA6D,QAAA,OAAO,EAAEhB,eAAe,CAACW,IAAI,CAACE,EAAN,CAArF;AAAgG,QAAA,QAAQ,EAAEX,gBAAgB,CAACS,IAAI,CAACE,EAAN,CAA1H;AAAqI,QAAA,IAAI,EAAEC;AAA3I;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,YAAR;AACD,GAXe,CAAhB;AAaA,MAAIG,UAAU,GAAGhB,WAAW,CAACE,eAAe,EAAhB,CAA5B;AACA,MAAIe,aAAa,GAAG,EAApB;AACA,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,UAAU,GAAG,EAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,UAAU,CAACM,aAA/B,EAA8CD,CAAC,EAA/C,EAAkD;AAChD,QAAIL,UAAU,CAACM,aAAX,CAAyBD,CAAzB,EAA4BE,MAA5B,IAAsC,WAA1C,EAAsD;AACpDC,MAAAA,CAAC,GAAGC,cAAc,CAACT,UAAU,CAACM,aAAX,CAAyBD,CAAzB,EAA4BK,UAA7B,CAAlB;;AACA,UAAIF,CAAC,CAACX,IAAF,IAAU,MAAd,EAAqB;AACnBM,QAAAA,aAAa,CAACQ,IAAd,CAAmB;AAACf,UAAAA,EAAE,EAACY,CAAC,CAACZ,EAAN;AAAUgB,UAAAA,IAAI,EAACJ,CAAC,CAACI;AAAjB,SAAnB;AACD,OAFD,MAEO,IAAIJ,CAAC,CAACX,IAAF,IAAU,MAAd,EAAsB;AAC3BI,QAAAA,aAAa,CAACU,IAAd,CAAmB;AAACf,UAAAA,EAAE,EAACY,CAAC,CAACZ,EAAN;AAAUgB,UAAAA,IAAI,EAACJ,CAAC,CAACI;AAAjB,SAAnB;AACD;AACF;AACF;;AAGD,sBACE,QAAC,MAAD;AAAA,cACGpB;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CApCD;;KAAMF,qB;AAsCN,eAAeA,qBAAf","sourcesContent":["import ProfilePage from './profile.jsx';\r\nimport {getAllUsers, getUsersFriends, getUserById} from './../../DataBase/Users.js'\r\nimport {getUsersComments} from './../../DataBase/Comments.js'\r\nimport {getLoggedUserId, getLoggedInStatus} from './../../LocalInfo/localInfo.js'\r\nimport {Routes, Route} from \"react-router-dom\";\r\n\r\nconst ProfilePagesContainer = (props) =>{\r\n  let userLinks = getAllUsers().map((user)=>{\r\n    let link = '/profile/' + user.id;\r\n    let type = 'nobodyIsLoggedIn'\r\n    if (getLoggedInStatus()){\r\n      if (user.id == getLoggedUserId()) {\r\n        type = 'loggedUsersProfile';\r\n      } else{\r\n        type = 'notLoggedUsersProfile';\r\n      }\r\n    }\r\n    return (<Route path={link} element={<ProfilePage dispatch={props.dispatch} info={user.usersInfo} friends={getUsersFriends(user.id)} comments={getUsersComments(user.id)} type={type}/>}/>)\r\n  })\r\n\r\n  let loggedUser = getUserById(getLoggedUserId())\r\n  let planned_films = []\r\n  let watched_films = []\r\n  let planned_books = []\r\n  let read_books = []\r\n  for (let i = 0; i < loggedUser.markedFiction; i++){\r\n    if (loggedUser.markedFiction[i].status == 'completed'){\r\n      f = getFictionById(loggedUser.markedFiction[i].fiction_id)\r\n      if (f.type == 'book'){\r\n        planned_books.push({id:f.id, info:f.info})\r\n      } else if (f.type == 'film') {\r\n        planned_films.push({id:f.id, info:f.info})\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <Routes>\r\n      {userLinks}\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default ProfilePagesContainer;\r\n"]},"metadata":{},"sourceType":"module"}