{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Litsey_10th_grade\\\\Informatics\\\\Fictionlib\\\\SchoolProject\\\\client\\\\src\\\\components\\\\ChosenFiction\\\\chosenFictionContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { getFictionById, getAllFictions, getRatingOfFictionFromUser, getOverallRatingOfFiction } from './../../DataBase/Fictions.js';\nimport { getUsersFriends, getFictionAtUser } from './../../DataBase/Users.js';\nimport { getFictionsComments } from './../../DataBase/Comments.js';\nimport { getLoggedInStatus, getLoggedUserId } from './../../LocalInfo/localInfo.js';\nimport { changeUsersRatingOfFictionActionCreator, changeUsersStatusOfFictionActionCreator, addCommentActionCreator } from './../../redux/reducers/chosenFictionReducer.js';\nimport { Routes, Route, useParams, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport ChosenFiction from './chosenFiction.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChosenFictionContainer = props => {\n  _s();\n\n  const [fiction, setFiction] = useState([]);\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    getFictionById(params.iD);\n    return;\n  }, [params.iD, navigate]);\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  } else if (isLoaded) {\n    if (fiction == null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Fiction not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ChosenFiction, {\n        fiction: fiction,\n        loggedIn: getLoggedInStatus(),\n        usersStatus: \"not completed\",\n        usersRating: 5,\n        overallRating: 6,\n        comments: [],\n        fictionAtFriends: fictionAtFriends,\n        addComment: addComment,\n        changeUsersRatingOfFiction: changeUsersRatingOfFiction,\n        changeUsersStatusOfFiction: changeUsersStatusOfFiction,\n        view: view,\n        dispatch: props.dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: iD\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChosenFictionContainer, \"rRltLVGQlElP/K1cEyW11EU7h7E=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = ChosenFictionContainer;\nexport default ChosenFictionContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChosenFictionContainer\");","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/SchoolProject/client/src/components/ChosenFiction/chosenFictionContainer.jsx"],"names":["getFictionById","getAllFictions","getRatingOfFictionFromUser","getOverallRatingOfFiction","getUsersFriends","getFictionAtUser","getFictionsComments","getLoggedInStatus","getLoggedUserId","changeUsersRatingOfFictionActionCreator","changeUsersStatusOfFictionActionCreator","addCommentActionCreator","Routes","Route","useParams","useNavigate","useState","useEffect","ChosenFiction","ChosenFictionContainer","props","fiction","setFiction","params","navigate","iD","error","message","isLoaded","fictionAtFriends","addComment","changeUsersRatingOfFiction","changeUsersStatusOfFiction","view","dispatch"],"mappings":";;;AAAA,SAAQA,cAAR,EAAwBC,cAAxB,EAAwCC,0BAAxC,EAAoEC,yBAApE,QAAoG,8BAApG;AACA,SAAQC,eAAR,EAAyBC,gBAAzB,QAAgD,2BAAhD;AACA,SAAQC,mBAAR,QAAkC,8BAAlC;AACA,SAAQC,iBAAR,EAA2BC,eAA3B,QAAiD,gCAAjD;AACA,SAAQC,uCAAR,EAAiDC,uCAAjD,EAA0FC,uBAA1F,QAAwH,gDAAxH;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,SAAvB,EAAkCC,WAAlC,QAAoD,kBAApD;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,aAAP,MAA0B,qBAA1B;;;AAEA,MAAMC,sBAAsB,GAAIC,KAAD,IAAU;AAAA;;AACvC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACD,QAAMO,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACdjB,IAAAA,cAAc,CAACuB,MAAM,CAACE,EAAR,CAAd;AAEA;AACD,GAJQ,EAIN,CAACF,MAAM,CAACE,EAAR,EAAYD,QAAZ,CAJM,CAAT;;AAOC,MAAIE,KAAJ,EAAU;AACR,wBAAO;AAAA,4BAAaA,KAAK,CAACC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO,IAAI,CAACC,QAAL,EAAe;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFM,MAEA,IAAIA,QAAJ,EAAc;AACnB,QAAGP,OAAO,IAAI,IAAd,EAAmB;AACjB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,wBACE;AAAA,6BACA,QAAC,aAAD;AAAe,QAAA,OAAO,EAAEA,OAAxB;AAAiC,QAAA,QAAQ,EAAEd,iBAAiB,EAA5D;AACU,QAAA,WAAW,EAAC,eADtB;AAEU,QAAA,WAAW,EAAE,CAFvB;AAGU,QAAA,aAAa,EAAE,CAHzB;AAIU,QAAA,QAAQ,EAAE,EAJpB;AAKU,QAAA,gBAAgB,EAAEsB,gBAL5B;AAK8C,QAAA,UAAU,EAAEC,UAL1D;AAMU,QAAA,0BAA0B,EAAEC,0BANtC;AAOU,QAAA,0BAA0B,EAAEC,0BAPtC;AAQU,QAAA,IAAI,EAAEC,IARhB;AAQsB,QAAA,QAAQ,EAAEb,KAAK,CAACc;AARtC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF;AAaD;;AACD,sBACE;AAAA,cACGT;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvCD;;GAAMN,sB;UAEUL,S,EACEC,W;;;KAHZI,sB;AAyCN,eAAeA,sBAAf","sourcesContent":["import {getFictionById, getAllFictions, getRatingOfFictionFromUser, getOverallRatingOfFiction} from './../../DataBase/Fictions.js'\r\nimport {getUsersFriends, getFictionAtUser} from './../../DataBase/Users.js'\r\nimport {getFictionsComments} from './../../DataBase/Comments.js'\r\nimport {getLoggedInStatus, getLoggedUserId} from './../../LocalInfo/localInfo.js'\r\nimport {changeUsersRatingOfFictionActionCreator, changeUsersStatusOfFictionActionCreator, addCommentActionCreator} from './../../redux/reducers/chosenFictionReducer.js'\r\nimport {Routes, Route, useParams, useNavigate} from \"react-router-dom\";\r\nimport {useState, useEffect} from 'react';\r\nimport ChosenFiction from './chosenFiction.jsx'\r\n\r\nconst ChosenFictionContainer = (props) =>{\r\n  const [fiction, setFiction] = useState([]);\r\n const params = useParams();\r\n const navigate = useNavigate();\r\n\r\n useEffect(() => {\r\n   getFictionById(params.iD);\r\n\r\n   return;\r\n }, [params.iD, navigate]);\r\n\r\n\r\n  if (error){\r\n    return <div>Error: {error.message}</div>\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>\r\n  } else if (isLoaded) {\r\n    if(fiction == null){\r\n      return <div>Fiction not found</div>\r\n    }\r\n    return(\r\n      <div>\r\n      <ChosenFiction fiction={fiction} loggedIn={getLoggedInStatus()}\r\n                usersStatus='not completed'\r\n                usersRating={5}\r\n                overallRating={6}\r\n                comments={[]}\r\n                fictionAtFriends={fictionAtFriends} addComment={addComment}\r\n                changeUsersRatingOfFiction={changeUsersRatingOfFiction}\r\n                changeUsersStatusOfFiction={changeUsersStatusOfFiction}\r\n                view={view} dispatch={props.dispatch}/>\r\n      </div>\r\n    )\r\n  }\r\n  return(\r\n    <div>\r\n      {iD}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChosenFictionContainer;\r\n"]},"metadata":{},"sourceType":"module"}