{"ast":null,"code":"const ADD_COMMENT = 'ADD_COMMENT';\nconst CHANGE_LIKES_AND_DISLIKES = 'CHANGE_LIKES_AND_DISLIKES';\nimport { changeDynamicInfoOfComment, getCommentsFromDataBase, addComment } from './../../DataBase/Comments.js';\nlet intialState = {\n  comments: getCommentsFromDataBase()\n};\n\nconst commentsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_COMMENT:\n      {\n        let newComment = {\n          id: state.comments[state.comments.length - 1].id + 1,\n          staticInfo: {\n            content: action.info.content,\n            place: action.info.place,\n            author: action.info.author_id\n          },\n          dynamicInfo: {\n            dislikes: 0,\n            likes: 0\n          }\n        };\n        state.comments = addComment(newComment);\n        return state;\n      }\n      ;\n\n    case CHANGE_LIKES_AND_DISLIKES:\n      {\n        state.comments = changeDynamicInfoOfComment(action.id, action.like_or_dislike);\n        return state;\n      }\n      ;\n\n    default:\n      return state;\n  }\n};\n\nexport const addCommentActionCreator = (place, content, author_id) => ({\n  type: ADD_COMMENT,\n  info: {\n    place: place,\n    content: content,\n    author_id: author_id\n  }\n});\nexport const changeLikesAndDislikesActionCreator = (id, like_or_dislike) => ({\n  type: CHANGE_LIKES_AND_DISLIKES,\n  id: id,\n  like_or_dislike: like_or_dislike\n});\nexport default commentsReducer;","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/webproject/src/redux/reducers/commentsR.js"],"names":["ADD_COMMENT","CHANGE_LIKES_AND_DISLIKES","changeDynamicInfoOfComment","getCommentsFromDataBase","addComment","intialState","comments","commentsReducer","state","action","type","newComment","id","length","staticInfo","content","info","place","author","author_id","dynamicInfo","dislikes","likes","like_or_dislike","addCommentActionCreator","changeLikesAndDislikesActionCreator"],"mappings":"AAAA,MAAMA,WAAW,GAAG,aAApB;AACA,MAAMC,yBAAyB,GAAG,2BAAlC;AACA,SAAQC,0BAAR,EAAoCC,uBAApC,EAA6DC,UAA7D,QAA8E,8BAA9E;AAEA,IAAIC,WAAW,GAAG;AAACC,EAAAA,QAAQ,EAACH,uBAAuB;AAAjC,CAAlB;;AAEA,MAAMI,eAAe,GAAG,YAAiC;AAAA,MAAhCC,KAAgC,uEAAxBH,WAAwB;AAAA,MAAXI,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAL;AAAkB;AAChB,YAAIW,UAAU,GAAG;AAACC,UAAAA,EAAE,EAACJ,KAAK,CAACF,QAAN,CAAeE,KAAK,CAACF,QAAN,CAAeO,MAAf,GAAsB,CAArC,EAAwCD,EAAxC,GAA2C,CAA/C;AAAkDE,UAAAA,UAAU,EAAE;AAACC,YAAAA,OAAO,EAACN,MAAM,CAACO,IAAP,CAAYD,OAArB;AAA8BE,YAAAA,KAAK,EAACR,MAAM,CAACO,IAAP,CAAYC,KAAhD;AAAuDC,YAAAA,MAAM,EAACT,MAAM,CAACO,IAAP,CAAYG;AAA1E,WAA9D;AAAoJC,UAAAA,WAAW,EAAC;AAACC,YAAAA,QAAQ,EAAE,CAAX;AAAcC,YAAAA,KAAK,EAAE;AAArB;AAAhK,SAAjB;AACAd,QAAAA,KAAK,CAACF,QAAN,GAAiBF,UAAU,CAACO,UAAD,CAA3B;AACA,eAAOH,KAAP;AACD;AAAA;;AACD,SAAKP,yBAAL;AAAgC;AAC9BO,QAAAA,KAAK,CAACF,QAAN,GAAiBJ,0BAA0B,CAACO,MAAM,CAACG,EAAR,EAAYH,MAAM,CAACc,eAAnB,CAA3C;AACA,eAAOf,KAAP;AACD;AAAA;;AACD;AACE,aAAOA,KAAP;AAXJ;AAaD,CAdD;;AAiBA,OAAO,MAAMgB,uBAAuB,GAAG,CAACP,KAAD,EAAQF,OAAR,EAAiBI,SAAjB,MAAgC;AAACT,EAAAA,IAAI,EAAEV,WAAP;AAAoBgB,EAAAA,IAAI,EAAC;AAACC,IAAAA,KAAK,EAAEA,KAAR;AAAeF,IAAAA,OAAO,EAAEA,OAAxB;AAAiCI,IAAAA,SAAS,EAAEA;AAA5C;AAAzB,CAAhC,CAAhC;AACP,OAAO,MAAMM,mCAAmC,GAAG,CAACb,EAAD,EAAKW,eAAL,MAA0B;AAACb,EAAAA,IAAI,EAAET,yBAAP;AAAkCW,EAAAA,EAAE,EAACA,EAArC;AAAyCW,EAAAA,eAAe,EAACA;AAAzD,CAA1B,CAA5C;AACP,eAAehB,eAAf","sourcesContent":["const ADD_COMMENT = 'ADD_COMMENT';\r\nconst CHANGE_LIKES_AND_DISLIKES = 'CHANGE_LIKES_AND_DISLIKES';\r\nimport {changeDynamicInfoOfComment, getCommentsFromDataBase, addComment} from './../../DataBase/Comments.js';\r\n\r\nlet intialState = {comments:getCommentsFromDataBase()};\r\n\r\nconst commentsReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_COMMENT: {\r\n      let newComment = {id:state.comments[state.comments.length-1].id+1, staticInfo: {content:action.info.content, place:action.info.place, author:action.info.author_id}, dynamicInfo:{dislikes: 0, likes: 0,}};\r\n      state.comments = addComment(newComment);\r\n      return state;\r\n    };\r\n    case CHANGE_LIKES_AND_DISLIKES: {\r\n      state.comments = changeDynamicInfoOfComment(action.id, action.like_or_dislike)\r\n      return state;\r\n    };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const addCommentActionCreator = (place, content, author_id) => ({type: ADD_COMMENT, info:{place: place, content: content, author_id: author_id}});\r\nexport const changeLikesAndDislikesActionCreator = (id, like_or_dislike) => ({type: CHANGE_LIKES_AND_DISLIKES, id:id, like_or_dislike:like_or_dislike})\r\nexport default commentsReducer;\r\n"]},"metadata":{},"sourceType":"module"}