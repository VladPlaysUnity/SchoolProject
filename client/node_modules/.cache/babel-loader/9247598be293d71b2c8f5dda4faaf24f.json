{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Litsey_10th_grade\\\\Informatics\\\\Fictionlib\\\\SchoolProject\\\\client\\\\src\\\\components\\\\RegistrationPage\\\\registrationPageContainer.jsx\";\nimport RegistrationPage from './registrationPage.jsx';\nimport { useNavigate } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport { tryLogIn, trySignUp } from './../../redux/reducers/registrationReducer';\nimport { getLoggedUserId, setLoggedUserId, getLoggedInStatus } from './../../LocalInfo/localInfo.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegistrationPageContainer = props => {\n  async function tryLog() {\n    const respons = await fetch(`http://localhost:5000/user/checkIfUsersDataIsRight/${action.username}/${action.password}`);\n\n    if (!respons.ok) {\n      const message = `An error occurred at registpage: ${respons.statusText}`;\n      window.alert(message);\n      return;\n    }\n\n    setLoggedUserId(await respons.json());\n    console.log(getLoggedUserId());\n    return state;\n  }\n\n  async function logInFunc(username, password) {\n    tryLog(username, password);\n  }\n\n  async function signUpFunc(name, pass, email) {\n    props.dispatch(trySignUp(name, pass, email));\n  }\n\n  return /*#__PURE__*/_jsxDEV(RegistrationPage, {\n    tryLogIn: logInFunc,\n    trySignUp: signUpFunc\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c = RegistrationPageContainer;\nexport default RegistrationPageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationPageContainer\");","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/SchoolProject/client/src/components/RegistrationPage/registrationPageContainer.jsx"],"names":["RegistrationPage","useNavigate","useEffect","tryLogIn","trySignUp","getLoggedUserId","setLoggedUserId","getLoggedInStatus","RegistrationPageContainer","props","tryLog","respons","fetch","action","username","password","ok","message","statusText","window","alert","json","console","log","state","logInFunc","signUpFunc","name","pass","email","dispatch"],"mappings":";AAAA,OAAOA,gBAAP,MAA6B,wBAA7B;AAEA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,4CAApC;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,iBAA3C,QAAoE,gCAApE;;;AAEA,MAAMC,yBAAyB,GAAIC,KAAD,IAAU;AAE1C,iBAAeC,MAAf,GAAuB;AACrB,UAAMC,OAAO,GAAG,MAAMC,KAAK,CAAE,sDAAqDC,MAAM,CAACC,QAAS,IAAGD,MAAM,CAACE,QAAS,EAA1F,CAA3B;;AAEA,QAAI,CAACJ,OAAO,CAACK,EAAb,EAAiB;AACd,YAAMC,OAAO,GAAI,oCAAmCN,OAAO,CAACO,UAAW,EAAvE;AACCC,MAAAA,MAAM,CAACC,KAAP,CAAaH,OAAb;AACA;AACH;;AAEDX,IAAAA,eAAe,CAAC,MAAMK,OAAO,CAACU,IAAR,EAAP,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYlB,eAAe,EAA3B;AACA,WAAOmB,KAAP;AACD;;AAED,iBAAeC,SAAf,CAA0BX,QAA1B,EAAoCC,QAApC,EAA6C;AAC3CL,IAAAA,MAAM,CAACI,QAAD,EAAWC,QAAX,CAAN;AACD;;AACD,iBAAeW,UAAf,CAA2BC,IAA3B,EAAiCC,IAAjC,EAAuCC,KAAvC,EAA6C;AAC3CpB,IAAAA,KAAK,CAACqB,QAAN,CAAe1B,SAAS,CAACuB,IAAD,EAAOC,IAAP,EAAaC,KAAb,CAAxB;AACD;;AACD,sBACE,QAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEJ,SAA5B;AAAuC,IAAA,SAAS,EAAEC;AAAlD;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAzBD;;KAAMlB,yB;AA2BN,eAAeA,yBAAf","sourcesContent":["import RegistrationPage from './registrationPage.jsx'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useEffect } from 'react'\r\n\r\nimport { tryLogIn, trySignUp } from './../../redux/reducers/registrationReducer';\r\nimport { getLoggedUserId, setLoggedUserId, getLoggedInStatus } from './../../LocalInfo/localInfo.js'\r\n\r\nconst RegistrationPageContainer = (props) =>{\r\n\r\n  async function tryLog(){\r\n    const respons = await fetch(`http://localhost:5000/user/checkIfUsersDataIsRight/${action.username}/${action.password}`);\r\n\r\n    if (!respons.ok) {\r\n       const message = `An error occurred at registpage: ${respons.statusText}`;\r\n        window.alert(message);\r\n        return;\r\n    }\r\n\r\n    setLoggedUserId(await respons.json())\r\n    console.log(getLoggedUserId());\r\n    return state\r\n  }\r\n\r\n  async function logInFunc (username, password){\r\n    tryLog(username, password)\r\n  }\r\n  async function signUpFunc (name, pass, email){\r\n    props.dispatch(trySignUp(name, pass, email))\r\n  }\r\n  return(\r\n    <RegistrationPage tryLogIn={logInFunc} trySignUp={signUpFunc}/>\r\n  )\r\n}\r\n\r\nexport default RegistrationPageContainer;\r\n"]},"metadata":{},"sourceType":"module"}