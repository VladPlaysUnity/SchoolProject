{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Litsey_10th_grade\\\\Informatics\\\\Fictionlib\\\\SchoolProject\\\\client\\\\src\\\\components\\\\ProfilePage\\\\profilePageContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport ProfilePage from './profile.jsx';\nimport { getAllUsers, getUsersFollowedPeople, getUserById, isFollowed, followUser, unfollowUser } from './../../DataBase/Users.js';\nimport { getFictionById } from './../../DataBase/Fictions.js';\nimport { getUsersComments, likeOrDislike } from './../../DataBase/Comments.js';\nimport './../../LocalInfo/localInfo.js';\nimport { addUserAsFriendActionCreator, removeUserFromFriendlistActionCreator } from './../../redux/reducers/profileReducer.js';\nimport CatalogPage from './../Catalog/catalog.jsx';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfilePageContainer = props => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [editMode, setEditMode] = useState(false);\n  const [view, setView] = useState('nobodyIsLoggedIn');\n  const [followedPeople, setFollowedPeople] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [isUserFollowed, setIsUserFollowed] = useState(false);\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const params = useParams();\n  useEffect(() => {\n    getUserById(params.iD).then(res => {\n      if (typeof props.loggedUser == 'number') {\n        if (parseInt(params.iD) == props.loggedUser) {\n          setView('loggedUsersProfile');\n          setUser(res);\n          setIsLoaded(true);\n        } else {\n          setView('notLoggedUsersProfile');\n          isFollowed(props.loggedUser, params.iD).then(iF => {\n            setUser(res);\n            setIsUserFollowed(iF);\n            setIsLoaded(true);\n          });\n        }\n      } else {\n        setUser(res);\n        setIsLoaded(true);\n      }\n    }, error => {\n      setError(error);\n    });\n    getUsersFollowedPeople(params.iD).then(people => {\n      console.log(people);\n      setFollowedPeople(people);\n    }, error => {\n      setError(error);\n    });\n    getUsersComments(params.iD).then(comments => {\n      setComments(comments.reverse());\n    }, error => {\n      setError(error);\n    });\n  }, [props.loggedUser, params.iD, isUserFollowed, editMode]);\n\n  let like_or_dislike = (comment_id, like_or_dislike) => {\n    likeOrDislike(comment_id, props.loggedUser, like_or_dislike).then(a => {\n      getUsersComments(params.iD).then(comments => {\n        setComments(comments.reverse());\n      }, error => {\n        setError(error);\n      });\n    });\n  };\n\n  let follow = target_id => {\n    followUser(props.loggedUser, target_id).then(k => {\n      setIsUserFollowed(true);\n    });\n  };\n\n  let unfollow = target_id => {\n    unfollowUser(props.loggedUser, target_id).then(k => {\n      setIsUserFollowed(false);\n    });\n  };\n\n  let toggleEdit = () => {\n    setEditMode(!editMode);\n  };\n\n  async function changeProfilePhoto(photo) {\n    await fetch(`http://localhost:5000/user/changeProfilePhoto/${props.loggedUser}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        photo: photo\n      })\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 12\n    }, this);\n  } else if (isLoaded) {\n    if (!user) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"User not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ProfilePage, {\n        dispatch: props.dispatch,\n        info: user.usersInfo,\n        editMode: editMode,\n        iD: user.iD,\n        togEdit: toggleEdit,\n        changeProfilePhoto: changeProfilePhoto,\n        isFollowed: isUserFollowed,\n        like_or_dislike: like_or_dislike,\n        followedPeople: followedPeople,\n        followUser: follow,\n        unfollowUser: unfollow,\n        comments: comments,\n        view: view\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(ProfilePageContainer, \"2mso7MyO/NAb9IkoiYK8M71QZqg=\", false, function () {\n  return [useParams];\n});\n\n_c = ProfilePageContainer;\nexport default ProfilePageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePageContainer\");","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/SchoolProject/client/src/components/ProfilePage/profilePageContainer.jsx"],"names":["ProfilePage","getAllUsers","getUsersFollowedPeople","getUserById","isFollowed","followUser","unfollowUser","getFictionById","getUsersComments","likeOrDislike","addUserAsFriendActionCreator","removeUserFromFriendlistActionCreator","CatalogPage","useEffect","useState","useParams","ProfilePageContainer","props","user","setUser","editMode","setEditMode","view","setView","followedPeople","setFollowedPeople","comments","setComments","isUserFollowed","setIsUserFollowed","error","setError","isLoaded","setIsLoaded","params","iD","then","res","loggedUser","parseInt","iF","people","console","log","reverse","like_or_dislike","comment_id","a","follow","target_id","k","unfollow","toggleEdit","changeProfilePhoto","photo","fetch","method","headers","body","JSON","stringify","catch","window","alert","message","dispatch","usersInfo"],"mappings":"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","sourcesContent":["import ProfilePage from './profile.jsx';\r\nimport { getAllUsers, getUsersFollowedPeople, getUserById, isFollowed, followUser, unfollowUser } from './../../DataBase/Users.js'\r\nimport { getFictionById } from './../../DataBase/Fictions.js'\r\nimport { getUsersComments, likeOrDislike } from './../../DataBase/Comments.js'\r\nimport {} from './../../LocalInfo/localInfo.js'\r\nimport { addUserAsFriendActionCreator, removeUserFromFriendlistActionCreator } from './../../redux/reducers/profileReducer.js'\r\nimport CatalogPage from './../Catalog/catalog.jsx'\r\nimport { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ProfilePageContainer = (props) =>{\r\n  const [user, setUser] = useState({})\r\n  const [editMode, setEditMode] = useState(false)\r\n  const [view, setView] = useState('nobodyIsLoggedIn')\r\n  const [followedPeople, setFollowedPeople] = useState([])\r\n  const [comments, setComments] = useState([])\r\n  const [isUserFollowed, setIsUserFollowed] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  const params = useParams();\r\n\r\n  useEffect(()=>{\r\n    getUserById(params.iD)\r\n    .then((res)=>{\r\n      if (typeof props.loggedUser == 'number'){\r\n        if (parseInt(params.iD) == props.loggedUser) {\r\n          setView('loggedUsersProfile')\r\n          setUser(res)\r\n          setIsLoaded(true)\r\n        } else{\r\n          setView('notLoggedUsersProfile')\r\n          isFollowed(props.loggedUser, params.iD)\r\n          .then((iF)=>{\r\n            setUser(res)\r\n            setIsUserFollowed(iF)\r\n            setIsLoaded(true)\r\n          })\r\n        }\r\n      } else{\r\n        setUser(res)\r\n        setIsLoaded(true)\r\n      }\r\n    }, (error)=>{\r\n      setError(error)\r\n    })\r\n\r\n    getUsersFollowedPeople(params.iD)\r\n    .then((people)=>{\r\n      console.log(people);\r\n      setFollowedPeople(people)\r\n    }, (error)=>{\r\n      setError(error)\r\n    })\r\n\r\n    getUsersComments(params.iD)\r\n    .then((comments)=>{\r\n      setComments(comments.reverse())\r\n    }, (error)=>{\r\n      setError(error)\r\n    })\r\n\r\n  }, [props.loggedUser, params.iD, isUserFollowed, editMode])\r\n\r\n  let like_or_dislike = (comment_id, like_or_dislike)=>{\r\n    likeOrDislike(comment_id, props.loggedUser, like_or_dislike)\r\n    .then((a)=>{\r\n      getUsersComments(params.iD)\r\n      .then((comments)=>{\r\n        setComments(comments.reverse())\r\n      }, (error)=>{\r\n        setError(error)\r\n      })\r\n    })\r\n  }\r\n\r\n  let follow = (target_id) =>{\r\n    followUser(props.loggedUser, target_id)\r\n    .then((k)=>{\r\n      setIsUserFollowed(true)\r\n    })\r\n  }\r\n  let unfollow = (target_id) =>{\r\n    unfollowUser(props.loggedUser, target_id)\r\n    .then((k)=>{\r\n      setIsUserFollowed(false)\r\n    })\r\n  }\r\n  let toggleEdit = ()=>{\r\n    setEditMode(!editMode)\r\n  }\r\n\r\n\r\n  async function changeProfilePhoto(photo) {\r\n    await fetch(`http://localhost:5000/user/changeProfilePhoto/${props.loggedUser}`, {\r\n     method: \"POST\",\r\n     headers: {\r\n       \"Content-Type\": \"application/json\",\r\n     },\r\n     body: JSON.stringify({photo:photo}),\r\n   })\r\n   .catch(error => {\r\n     window.alert(error);\r\n     return;\r\n   });\r\n  }\r\n\r\n\r\n  if (error){\r\n    return <div>Error: {error.message}</div>\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>\r\n  } else if (isLoaded) {\r\n    if(!user){\r\n      return <div>User not found</div>\r\n    }\r\n    return(\r\n      <div>\r\n      <ProfilePage dispatch={props.dispatch}\r\n      info={user.usersInfo} editMode={editMode}\r\n      iD={user.iD} togEdit={toggleEdit} changeProfilePhoto={changeProfilePhoto}\r\n      isFollowed={isUserFollowed} like_or_dislike={like_or_dislike}\r\n      followedPeople={followedPeople}\r\n      followUser={follow} unfollowUser={unfollow}\r\n      comments={comments} view={view}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProfilePageContainer;\r\n"]},"metadata":{},"sourceType":"module"}