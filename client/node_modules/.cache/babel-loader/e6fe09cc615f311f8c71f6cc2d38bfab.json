{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Litsey_10th_grade\\\\Informatics\\\\Fictionlib\\\\SchoolProject\\\\client\\\\src\\\\components\\\\ChosenFiction\\\\chosenFictionContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { getFictionById, getAllFictions, getRatingOfFictionFromUser, getOverallRatingOfFiction } from './../../DataBase/Fictions.js';\nimport { getUsersFollowedPeople, getFictionAtUser } from './../../DataBase/Users.js';\nimport { getFictionsComments, likeOrDislike } from './../../DataBase/Comments.js';\nimport { getLoggedInStatus } from './../../LocalInfo/localInfo.js';\nimport { changeUsersRatingOfFictionActionCreator, changeUsersStatusOfFictionActionCreator, addCommentActionCreator } from './../../redux/reducers/chosenFictionReducer.js';\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport ChosenFiction from './chosenFiction.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChosenFictionContainer = props => {\n  _s();\n\n  const [fiction, setFiction] = useState([]);\n  const [userRating, setUserRating] = useState(0);\n  const [fictionAtFollowed, setFictionAtFollowed] = useState([]);\n  const [userStatus, setUserStatus] = useState('not completed');\n  const [overallRating, setOverallRating] = useState(0);\n  const [comments, setComments] = useState([]);\n  const params = useParams();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    let fP = getFictionById(params.iD);\n    let oRP = getOverallRatingOfFiction(params.iD);\n    let commentsPromise = getFictionsComments(params.iD);\n    let rP = '';\n    let uS = '';\n\n    if (getLoggedInStatus()) {\n      rP = getRatingOfFictionFromUser(params.iD, props.loggedUser);\n      uS = getFictionAtUser(props.loggedUser, params.iD);\n    }\n\n    if (getLoggedInStatus()) {\n      Promise.all([fP, rP, oRP, uS, commentsPromise]).then(result => {\n        setFiction(result[0]);\n        setOverallRating(result[2]);\n        setUserRating(result[1]);\n        setUserStatus(result[3]);\n        setComments(result[4].reverse());\n        setIsLoaded(true);\n      });\n    } else {\n      Promise.all([fP, oRP, commentsPromise]).then(result => {\n        setFiction(result[0]);\n        setOverallRating(result[1]);\n        setComments(result[2].reverse());\n        setIsLoaded(true);\n      });\n    }\n  }, [props.loggedUser, params.iD]);\n  let view = '';\n\n  if (getLoggedInStatus()) {\n    view = 'loggedInUsersView';\n  } else {\n    view = 'notLoggedInUsersView';\n  }\n\n  let changeUsersRatingOfFiction = rating => {\n    props.dispatch(changeUsersRatingOfFictionActionCreator(params.iD, props.loggedUser, rating));\n    setUserRating(rating);\n  };\n\n  let changeUsersStatusOfFiction = status => {\n    props.dispatch(changeUsersStatusOfFictionActionCreator(props.loggedUser, params.iD, status));\n    setUserStatus(status);\n  };\n\n  async function addComment(content) {\n    let newComment = {\n      place: params.iD,\n      author: props.loggedUser,\n      content: content\n    };\n    await fetch(\"http://localhost:5000/comment/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newComment)\n    }).then(a => {\n      getFictionsComments(params.iD).then(comments => {\n        setComments(comments.reverse());\n      }, error => {\n        setError(error);\n      });\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n  }\n\n  let like_or_dislike = (comment_id, like_or_dislike) => {\n    likeOrDislike(comment_id, props.loggedUser, like_or_dislike).then(a => {\n      getFictionsComments(params.iD).then(comments => {\n        setComments(comments.reverse());\n      }, error => {\n        setError(error);\n      });\n    });\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 12\n    }, this);\n  } else if (isLoaded) {\n    if (!fiction) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Fiction not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ChosenFiction, {\n        fiction: fiction,\n        usersStatus: userStatus,\n        usersRating: userRating,\n        overallRating: overallRating,\n        comments: comments,\n        like_or_dislike: like_or_dislike,\n        addComment: addComment,\n        userID: props.loggedUser,\n        changeUsersRatingOfFiction: changeUsersRatingOfFiction,\n        changeUsersStatusOfFiction: changeUsersStatusOfFiction,\n        view: view,\n        dispatch: props.dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(ChosenFictionContainer, \"kxsLNvRg6zcxP7ILLTyZI90iC1c=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = ChosenFictionContainer;\nexport default ChosenFictionContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChosenFictionContainer\");","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/SchoolProject/client/src/components/ChosenFiction/chosenFictionContainer.jsx"],"names":["getFictionById","getAllFictions","getRatingOfFictionFromUser","getOverallRatingOfFiction","getUsersFollowedPeople","getFictionAtUser","getFictionsComments","likeOrDislike","getLoggedInStatus","changeUsersRatingOfFictionActionCreator","changeUsersStatusOfFictionActionCreator","addCommentActionCreator","useParams","useNavigate","useState","useEffect","ChosenFiction","ChosenFictionContainer","props","fiction","setFiction","userRating","setUserRating","fictionAtFollowed","setFictionAtFollowed","userStatus","setUserStatus","overallRating","setOverallRating","comments","setComments","params","error","setError","isLoaded","setIsLoaded","navigate","fP","iD","oRP","commentsPromise","rP","uS","loggedUser","Promise","all","then","result","reverse","view","changeUsersRatingOfFiction","rating","dispatch","changeUsersStatusOfFiction","status","addComment","content","newComment","place","author","fetch","method","headers","body","JSON","stringify","a","catch","window","alert","like_or_dislike","comment_id","message"],"mappings":"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","sourcesContent":["import { getFictionById, getAllFictions, getRatingOfFictionFromUser, getOverallRatingOfFiction } from './../../DataBase/Fictions.js'\r\nimport { getUsersFollowedPeople, getFictionAtUser } from './../../DataBase/Users.js'\r\nimport { getFictionsComments, likeOrDislike } from './../../DataBase/Comments.js'\r\nimport { getLoggedInStatus } from './../../LocalInfo/localInfo.js'\r\nimport { changeUsersRatingOfFictionActionCreator, changeUsersStatusOfFictionActionCreator, addCommentActionCreator } from './../../redux/reducers/chosenFictionReducer.js'\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { useState, useEffect } from 'react';\r\nimport ChosenFiction from './chosenFiction.jsx'\r\n\r\nconst ChosenFictionContainer = (props) =>{\r\n  const [fiction, setFiction] = useState([]);\r\n  const [userRating, setUserRating] = useState(0)\r\n  const [fictionAtFollowed, setFictionAtFollowed] = useState([])\r\n  const [userStatus, setUserStatus] = useState('not completed')\r\n  const [overallRating, setOverallRating] = useState(0)\r\n  const [comments, setComments] = useState([])\r\n  const params = useParams();\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n useEffect(() => {\r\n   let fP = getFictionById(params.iD)\r\n   let oRP = getOverallRatingOfFiction(params.iD)\r\n   let commentsPromise = getFictionsComments(params.iD)\r\n   let rP = ''\r\n   let uS = ''\r\n   if (getLoggedInStatus()){\r\n     rP = getRatingOfFictionFromUser(params.iD, props.loggedUser)\r\n     uS = getFictionAtUser(props.loggedUser, params.iD)\r\n   }\r\n\r\n\r\n\r\n   if (getLoggedInStatus()){\r\n     Promise.all([fP, rP, oRP, uS, commentsPromise])\r\n     .then((result)=>{\r\n       setFiction(result[0])\r\n       setOverallRating(result[2])\r\n       setUserRating(result[1])\r\n       setUserStatus(result[3])\r\n       setComments(result[4].reverse())\r\n       setIsLoaded(true)\r\n     })\r\n   } else{\r\n     Promise.all([fP, oRP, commentsPromise])\r\n     .then((result)=>{\r\n       setFiction(result[0])\r\n       setOverallRating(result[1])\r\n       setComments(result[2].reverse())\r\n       setIsLoaded(true)\r\n     })}\r\n }, [props.loggedUser,params.iD]);\r\n\r\n let view = ''\r\n if (getLoggedInStatus()){\r\n   view = 'loggedInUsersView';\r\n }else{\r\n   view = 'notLoggedInUsersView';\r\n }\r\n\r\n let changeUsersRatingOfFiction = (rating) =>{\r\n   props.dispatch(changeUsersRatingOfFictionActionCreator(params.iD, props.loggedUser, rating))\r\n   setUserRating(rating)\r\n }\r\n let changeUsersStatusOfFiction = (status) =>{\r\n   props.dispatch(changeUsersStatusOfFictionActionCreator(props.loggedUser, params.iD, status))\r\n   setUserStatus(status)\r\n }\r\n\r\n async function addComment(content) {\r\n   let newComment = {place:params.iD, author:props.loggedUser, content:content}\r\n   await fetch(\"http://localhost:5000/comment/add\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(newComment),\r\n  })\r\n  .then((a)=>{\r\n    getFictionsComments(params.iD)\r\n    .then((comments)=>{\r\n      setComments(comments.reverse())\r\n    }, (error)=>{\r\n      setError(error)\r\n    })\r\n  })\r\n  .catch(error => {\r\n    window.alert(error);\r\n    return;\r\n  });\r\n }\r\n\r\n let like_or_dislike = (comment_id, like_or_dislike)=>{\r\n   likeOrDislike(comment_id, props.loggedUser, like_or_dislike)\r\n   .then((a)=>{\r\n     getFictionsComments(params.iD)\r\n     .then((comments)=>{\r\n       setComments(comments.reverse())\r\n     }, (error)=>{\r\n       setError(error)\r\n     })\r\n   })\r\n }\r\n\r\n\r\n  if (error){\r\n    return <div>Error: {error.message}</div>\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>\r\n  } else if (isLoaded) {\r\n    if(!fiction){\r\n      return <div>Fiction not found</div>\r\n    }\r\n    return(\r\n      <div>\r\n      <ChosenFiction fiction={fiction}\r\n                usersStatus={userStatus}\r\n                usersRating={userRating}\r\n                overallRating={overallRating}\r\n                comments={comments} like_or_dislike={like_or_dislike}\r\n                addComment={addComment} userID={props.loggedUser}\r\n                changeUsersRatingOfFiction={changeUsersRatingOfFiction}\r\n                changeUsersStatusOfFiction={changeUsersStatusOfFiction}\r\n                view={view} dispatch={props.dispatch}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChosenFictionContainer;\r\n"]},"metadata":{},"sourceType":"module"}