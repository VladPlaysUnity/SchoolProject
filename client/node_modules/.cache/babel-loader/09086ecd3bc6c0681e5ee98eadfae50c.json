{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Litsey_10th_grade\\\\Informatics\\\\Fictionlib\\\\client\\\\src\\\\components\\\\CommentsComponent\\\\commentsContainer.jsx\";\nimport s from './commentsContainer.module.css';\nimport { changeLikeOrDislikeOfCommentActionCreator } from './../../redux/reducers/profileReducer.js';\nimport { getLoggedInStatus, getLoggedUserId } from './../../LocalInfo/localInfo.js';\nimport { getUsersComments, getStatusOfCommentFromUser } from './../../DataBase/Comments.js';\nimport CommentBlock from './Comment/comment.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentsContainer = props => {\n  let like_or_dislike = (comment_id, like_or_dislike) => {\n    props.dispatch(changeLikeOrDislikeOfCommentActionCreator(getLoggedUserId(), comment_id, like_or_dislike));\n  };\n\n  let comments = [];\n\n  if (getLoggedInStatus()) {\n    comments = props.comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(CommentBlock, {\n        comment: comment,\n        loggedIn: getLoggedInStatus(),\n        status: getStatusOfCommentFromUser(getLoggedUserId(), comment.id),\n        like_or_dislike: like_or_dislike\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, this);\n    });\n  } else {\n    comments = props.comments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(CommentBlock, {\n        comment: comment,\n        loggedIn: getLoggedInStatus()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.comments,\n    children: comments\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CommentsContainer;\nexport default CommentsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentsContainer\");","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/client/src/components/CommentsComponent/commentsContainer.jsx"],"names":["s","changeLikeOrDislikeOfCommentActionCreator","getLoggedInStatus","getLoggedUserId","getUsersComments","getStatusOfCommentFromUser","CommentBlock","CommentsContainer","props","like_or_dislike","comment_id","dispatch","comments","map","comment","id"],"mappings":";AAAA,OAAOA,CAAP,MAAc,gCAAd;AACA,SAAQC,yCAAR,QAAwD,0CAAxD;AACA,SAAQC,iBAAR,EAA2BC,eAA3B,QAAiD,gCAAjD;AACA,SAAQC,gBAAR,EAA0BC,0BAA1B,QAA2D,8BAA3D;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;;AAEA,MAAMC,iBAAiB,GAAGC,KAAD,IAAS;AAGhC,MAAIC,eAAe,GAAG,CAACC,UAAD,EAAaD,eAAb,KAAgC;AACpDD,IAAAA,KAAK,CAACG,QAAN,CAAeV,yCAAyC,CAACE,eAAe,EAAhB,EAAoBO,UAApB,EAAgCD,eAAhC,CAAxD;AACD,GAFD;;AAKA,MAAIG,QAAQ,GAAG,EAAf;;AACA,MAAIV,iBAAiB,EAArB,EAAwB;AACtBU,IAAAA,QAAQ,GAAGJ,KAAK,CAACI,QAAN,CAAeC,GAAf,CAAoBC,OAAD,IAAY;AACxC,0BAAO,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEA,OAAvB;AAAgC,QAAA,QAAQ,EAAEZ,iBAAiB,EAA3D;AAA+D,QAAA,MAAM,EAAEG,0BAA0B,CAACF,eAAe,EAAhB,EAAoBW,OAAO,CAACC,EAA5B,CAAjG;AAAkI,QAAA,eAAe,EAAEN;AAAnJ;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFY,CAAX;AAEC,GAHH,MAGQ;AACNG,IAAAA,QAAQ,GAAGJ,KAAK,CAACI,QAAN,CAAeC,GAAf,CAAoBC,OAAD,IAAY;AACxC,0BAAO,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEA,OAAvB;AAAgC,QAAA,QAAQ,EAAEZ,iBAAiB;AAA3D;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFY,CAAX;AAEC;;AAGH,sBACE;AAAK,IAAA,SAAS,EAAEF,CAAC,CAACY,QAAlB;AAAA,cACGA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvBD;;KAAML,iB;AAyBN,eAAeA,iBAAf","sourcesContent":["import s from './commentsContainer.module.css'\r\nimport {changeLikeOrDislikeOfCommentActionCreator} from './../../redux/reducers/profileReducer.js'\r\nimport {getLoggedInStatus, getLoggedUserId} from './../../LocalInfo/localInfo.js'\r\nimport {getUsersComments, getStatusOfCommentFromUser} from './../../DataBase/Comments.js'\r\nimport CommentBlock from './Comment/comment.jsx'\r\n\r\nconst CommentsContainer= (props)=>{\r\n\r\n\r\n  let like_or_dislike = (comment_id, like_or_dislike) =>{\r\n    props.dispatch(changeLikeOrDislikeOfCommentActionCreator(getLoggedUserId(), comment_id, like_or_dislike))\r\n  }\r\n\r\n\r\n  let comments = []\r\n  if (getLoggedInStatus()){\r\n    comments = props.comments.map((comment) =>{\r\n      return <CommentBlock comment={comment} loggedIn={getLoggedInStatus()} status={getStatusOfCommentFromUser(getLoggedUserId(), comment.id)} like_or_dislike={like_or_dislike}/>\r\n  })} else{\r\n    comments = props.comments.map((comment) =>{\r\n      return <CommentBlock comment={comment} loggedIn={getLoggedInStatus()} />\r\n  })}\r\n\r\n\r\n  return (\r\n    <div className={s.comments}>\r\n      {comments}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentsContainer;\r\n"]},"metadata":{},"sourceType":"module"}