{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Litsey_10th_grade\\\\Informatics\\\\Fictionlib\\\\SchoolProject\\\\client\\\\src\\\\components\\\\ChosenFiction\\\\chosenFictionsContainer.jsx\";\nimport { getAllFictions, getRatingOfFictionFromUser, getOverallRatingOfFiction } from './../../DataBase/Fictions.js';\nimport { getUsersFriends, getFictionAtUser } from './../../DataBase/Users.js';\nimport { getFictionsComments } from './../../DataBase/Comments.js';\nimport { getLoggedInStatus, getLoggedUserId } from './../../LocalInfo/localInfo.js';\nimport { changeUsersRatingOfFictionActionCreator, changeUsersStatusOfFictionActionCreator, addCommentActionCreator } from './../../redux/reducers/chosenFictionReducer.js';\nimport { Routes, Route } from \"react-router-dom\";\nimport { useEffect } from 'react';\nimport ChosenFiction from './chosenFiction.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChosenFictionsContainer = props => {\n  getAllFictions().then(data => {\n    let fictionLinks = data.map(fiction => {\n      let link = '';\n\n      if (fiction.type == 'book') {\n        link = '/bookCatalog/' + fiction.iD;\n      } else if (fiction.type == 'film') {\n        link = '/filmCatalog/' + fiction.iD;\n      }\n\n      let view = '';\n\n      if (getLoggedInStatus()) {\n        view = 'loggedInUsersView';\n      } else {\n        view = 'notLoggedInUsersView';\n      }\n\n      let changeUsersRatingOfFiction = rating => {\n        props.dispatch(changeUsersRatingOfFictionActionCreator(fiction.iD, getLoggedUserId(), rating));\n      };\n\n      let changeUsersStatusOfFiction = status => {\n        props.dispatch(changeUsersStatusOfFictionActionCreator(getLoggedUserId(), fiction.iD, status));\n      };\n\n      let fictionAtFriends = [];\n      let friendsOfUser = getUsersFriends(getLoggedUserId());\n\n      for (var i = 0; i < friendsOfUser.length; i++) {\n        fictionAtFriends.push({\n          iD: friendsOfUser[i].iD,\n          name: friendsOfUser[i].usersInfo.name,\n          status: getFictionAtUser(fiction.iD, friendsOfUser[i].iD)\n        });\n      }\n\n      let addComment = content => {\n        props.dispatch(addCommentActionCreator(getLoggedUserId(), fiction.iD, content));\n      };\n\n      return /*#__PURE__*/_jsxDEV(ChosenFiction, {\n        fiction: fiction,\n        loggedIn: getLoggedInStatus(),\n        usersStatus: getFictionAtUser(fiction.iD, getLoggedUserId()),\n        usersRating: 5,\n        overallRating: getOverallRatingOfFiction(fiction.iD),\n        comments: getFictionsComments(fiction.iD),\n        fictionAtFriends: fictionAtFriends,\n        addComment: addComment,\n        changeUsersRatingOfFiction: changeUsersRatingOfFiction,\n        changeUsersStatusOfFiction: changeUsersStatusOfFiction,\n        view: view,\n        dispatch: props.dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(Routes, {\n      children: fictionLinks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this);\n  });\n};\n\n_c = ChosenFictionsContainer;\nexport default ChosenFictionsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChosenFictionsContainer\");","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/SchoolProject/client/src/components/ChosenFiction/chosenFictionsContainer.jsx"],"names":["getAllFictions","getRatingOfFictionFromUser","getOverallRatingOfFiction","getUsersFriends","getFictionAtUser","getFictionsComments","getLoggedInStatus","getLoggedUserId","changeUsersRatingOfFictionActionCreator","changeUsersStatusOfFictionActionCreator","addCommentActionCreator","Routes","Route","useEffect","ChosenFiction","ChosenFictionsContainer","props","then","data","fictionLinks","map","fiction","link","type","iD","view","changeUsersRatingOfFiction","rating","dispatch","changeUsersStatusOfFiction","status","fictionAtFriends","friendsOfUser","i","length","push","name","usersInfo","addComment","content"],"mappings":"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","sourcesContent":["import {getAllFictions, getRatingOfFictionFromUser, getOverallRatingOfFiction} from './../../DataBase/Fictions.js'\r\nimport {getUsersFriends, getFictionAtUser} from './../../DataBase/Users.js'\r\nimport {getFictionsComments} from './../../DataBase/Comments.js'\r\nimport {getLoggedInStatus, getLoggedUserId} from './../../LocalInfo/localInfo.js'\r\nimport {changeUsersRatingOfFictionActionCreator, changeUsersStatusOfFictionActionCreator, addCommentActionCreator} from './../../redux/reducers/chosenFictionReducer.js'\r\nimport {Routes, Route} from \"react-router-dom\";\r\nimport {useEffect} from 'react';\r\nimport ChosenFiction from './chosenFiction.jsx'\r\n\r\nconst ChosenFictionsContainer = (props) =>{\r\n  getAllFictions()\r\n  .then((data)=>{\r\n    let fictionLinks = data.map((fiction)=>{\r\n    let link = ''\r\n    if (fiction.type == 'book'){\r\n      link = '/bookCatalog/' + fiction.iD;\r\n    } else if (fiction.type == 'film'){\r\n      link = '/filmCatalog/' + fiction.iD;\r\n    }\r\n\r\n    let view = ''\r\n    if (getLoggedInStatus()){\r\n      view = 'loggedInUsersView';\r\n    }else{\r\n      view = 'notLoggedInUsersView';\r\n    }\r\n\r\n    let changeUsersRatingOfFiction = (rating) =>{\r\n      props.dispatch(changeUsersRatingOfFictionActionCreator(fiction.iD, getLoggedUserId(), rating))\r\n    }\r\n    let changeUsersStatusOfFiction = (status) =>{\r\n      props.dispatch(changeUsersStatusOfFictionActionCreator(getLoggedUserId(), fiction.iD, status))\r\n    }\r\n\r\n\r\n    let fictionAtFriends = []\r\n    let friendsOfUser = getUsersFriends(getLoggedUserId())\r\n    for (var i = 0; i < friendsOfUser.length; i++) {\r\n      fictionAtFriends.push({iD:friendsOfUser[i].iD, name:friendsOfUser[i].usersInfo.name, status:getFictionAtUser(fiction.iD, friendsOfUser[i].iD)})\r\n    }\r\n\r\n    let addComment = (content) =>{\r\n      props.dispatch(addCommentActionCreator(getLoggedUserId(),fiction.iD, content))\r\n    }\r\n\r\n    return (<ChosenFiction fiction={fiction} loggedIn={getLoggedInStatus()}\r\n              usersStatus={getFictionAtUser(fiction.iD, getLoggedUserId())}\r\n              usersRating={5}\r\n              overallRating={getOverallRatingOfFiction(fiction.iD)}\r\n              comments={getFictionsComments(fiction.iD)}\r\n              fictionAtFriends={fictionAtFriends} addComment={addComment}\r\n              changeUsersRatingOfFiction={changeUsersRatingOfFiction}\r\n              changeUsersStatusOfFiction={changeUsersStatusOfFiction}\r\n              view={view} dispatch={props.dispatch}/>)\r\n  })\r\n\r\n  return (\r\n    <Routes>\r\n      {fictionLinks}\r\n    </Routes>\r\n  );\r\n  })\r\n}\r\n\r\nexport default ChosenFictionsContainer;\r\n"]},"metadata":{},"sourceType":"module"}