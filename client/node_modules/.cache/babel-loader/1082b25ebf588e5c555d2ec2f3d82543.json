{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Litsey_10th_grade\\\\Informatics\\\\Fictionlib\\\\webproject\\\\src\\\\components\\\\ChosenFiction\\\\chosenFictionsContainer.jsx\";\nimport { getAllFictions, getRatingOfFictionFromUser, getOverallRatingOfFiction } from './../../DataBase/Fictions.js';\nimport { getUsersFriends, getFictionAtUser } from './../../DataBase/Users.js';\nimport { getFictionsComments } from './../../DataBase/Comments.js';\nimport { getLoggedInStatus, getLoggedUserId } from './../../LocalInfo/localInfo.js';\nimport { Routes, Route } from \"react-router-dom\";\nimport ChosenFiction from './chosenFiction.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChosenFictionsContainer = props => {\n  let fictionLinks = getAllFictions().map(fiction => {\n    let link = '';\n\n    if (fiction.type == 'book') {\n      link = '/bookCatalog/' + fiction.id;\n    } else if (fiction.type == 'film') {\n      link = '/filmCatalog/' + fiction.id;\n    }\n\n    let type = '';\n\n    if (getLoggedInStatus()) {\n      if (fiction.id == getLoggedUserId()) {\n        type = 'loggedInUsersView';\n      } else {\n        type = 'notLoggedInUsersView';\n      }\n    }\n\n    let fictionAtFriends = [];\n    let friendsOfUser = getUsersFriends(getLoggedUserId());\n\n    for (var i = 0; i < friendsOfUser.length; i++) {\n      fictionAtFriends.push({\n        id: friendsOfUser[i].id,\n        name: friendsOfUser[i].usersInfo.name,\n        status: getFictionAtUser(fiction.id, friendsOfUser[i].id)\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(Route, {\n      path: link,\n      element: /*#__PURE__*/_jsxDEV(ChosenFiction, {\n        fiction: fiction,\n        loggedIn: getLoggedInStatus(),\n        usersStatus: getFictionAtUser(fiction.id, getLoggedUserId()),\n        usersRating: getRatingOfFictionFromUser(fiction.id, getLoggedUserId()),\n        overallRating: getOverallRatingOfFiction(fiction.id),\n        comments: getFictionsComments(fiction.id),\n        fictionAtFriends: fictionAtFriends,\n        dispatch: props.dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: fictionLinks\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChosenFictionsContainer;\nexport default ChosenFictionsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChosenFictionsContainer\");","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/webproject/src/components/ChosenFiction/chosenFictionsContainer.jsx"],"names":["getAllFictions","getRatingOfFictionFromUser","getOverallRatingOfFiction","getUsersFriends","getFictionAtUser","getFictionsComments","getLoggedInStatus","getLoggedUserId","Routes","Route","ChosenFiction","ChosenFictionsContainer","props","fictionLinks","map","fiction","link","type","id","fictionAtFriends","friendsOfUser","i","length","push","name","usersInfo","status","dispatch"],"mappings":";AAAA,SAAQA,cAAR,EAAwBC,0BAAxB,EAAoDC,yBAApD,QAAoF,8BAApF;AACA,SAAQC,eAAR,EAAyBC,gBAAzB,QAAgD,2BAAhD;AACA,SAAQC,mBAAR,QAAkC,8BAAlC;AACA,SAAQC,iBAAR,EAA2BC,eAA3B,QAAiD,gCAAjD;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,kBAA5B;AACA,OAAOC,aAAP,MAA0B,qBAA1B;;;AAEA,MAAMC,uBAAuB,GAAIC,KAAD,IAAU;AACxC,MAAIC,YAAY,GAAGb,cAAc,GAAGc,GAAjB,CAAsBC,OAAD,IAAW;AAEjD,QAAIC,IAAI,GAAG,EAAX;;AACA,QAAID,OAAO,CAACE,IAAR,IAAgB,MAApB,EAA2B;AACzBD,MAAAA,IAAI,GAAG,kBAAkBD,OAAO,CAACG,EAAjC;AACD,KAFD,MAEO,IAAIH,OAAO,CAACE,IAAR,IAAgB,MAApB,EAA2B;AAChCD,MAAAA,IAAI,GAAG,kBAAkBD,OAAO,CAACG,EAAjC;AACD;;AAED,QAAID,IAAI,GAAG,EAAX;;AACA,QAAIX,iBAAiB,EAArB,EAAwB;AACtB,UAAIS,OAAO,CAACG,EAAR,IAAcX,eAAe,EAAjC,EAAqC;AACnCU,QAAAA,IAAI,GAAG,mBAAP;AACD,OAFD,MAEM;AACJA,QAAAA,IAAI,GAAG,sBAAP;AACD;AACF;;AAED,QAAIE,gBAAgB,GAAG,EAAvB;AACA,QAAIC,aAAa,GAAGjB,eAAe,CAACI,eAAe,EAAhB,CAAnC;;AACA,SAAK,IAAIc,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,aAAa,CAACE,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7CF,MAAAA,gBAAgB,CAACI,IAAjB,CAAsB;AAACL,QAAAA,EAAE,EAACE,aAAa,CAACC,CAAD,CAAb,CAAiBH,EAArB;AAAyBM,QAAAA,IAAI,EAACJ,aAAa,CAACC,CAAD,CAAb,CAAiBI,SAAjB,CAA2BD,IAAzD;AAA+DE,QAAAA,MAAM,EAACtB,gBAAgB,CAACW,OAAO,CAACG,EAAT,EAAaE,aAAa,CAACC,CAAD,CAAb,CAAiBH,EAA9B;AAAtF,OAAtB;AACD;;AAED,wBAAQ,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEF,IAAb;AACR,MAAA,OAAO,eAAE,QAAC,aAAD;AAAe,QAAA,OAAO,EAAED,OAAxB;AAAiC,QAAA,QAAQ,EAAET,iBAAiB,EAA5D;AACC,QAAA,WAAW,EAAEF,gBAAgB,CAACW,OAAO,CAACG,EAAT,EAAaX,eAAe,EAA5B,CAD9B;AAEC,QAAA,WAAW,EAAEN,0BAA0B,CAACc,OAAO,CAACG,EAAT,EAAaX,eAAe,EAA5B,CAFxC;AAGC,QAAA,aAAa,EAAEL,yBAAyB,CAACa,OAAO,CAACG,EAAT,CAHzC;AAIC,QAAA,QAAQ,EAAEb,mBAAmB,CAACU,OAAO,CAACG,EAAT,CAJ9B;AAKC,QAAA,gBAAgB,EAAEC,gBALnB;AAMC,QAAA,QAAQ,EAAEP,KAAK,CAACe;AANjB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAAR;AAQD,GAhCkB,CAAnB;AAkCA,sBACE,QAAC,MAAD;AAAA,cACGd;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxCD;;KAAMF,uB;AA0CN,eAAeA,uBAAf","sourcesContent":["import {getAllFictions, getRatingOfFictionFromUser, getOverallRatingOfFiction} from './../../DataBase/Fictions.js'\r\nimport {getUsersFriends, getFictionAtUser} from './../../DataBase/Users.js'\r\nimport {getFictionsComments} from './../../DataBase/Comments.js'\r\nimport {getLoggedInStatus, getLoggedUserId} from './../../LocalInfo/localInfo.js'\r\nimport {Routes, Route} from \"react-router-dom\";\r\nimport ChosenFiction from './chosenFiction.jsx'\r\n\r\nconst ChosenFictionsContainer = (props) =>{\r\n  let fictionLinks = getAllFictions().map((fiction)=>{\r\n\r\n    let link = ''\r\n    if (fiction.type == 'book'){\r\n      link = '/bookCatalog/' + fiction.id;\r\n    } else if (fiction.type == 'film'){\r\n      link = '/filmCatalog/' + fiction.id;\r\n    }\r\n\r\n    let type = ''\r\n    if (getLoggedInStatus()){\r\n      if (fiction.id == getLoggedUserId()) {\r\n        type = 'loggedInUsersView';\r\n      } else{\r\n        type = 'notLoggedInUsersView';\r\n      }\r\n    }\r\n\r\n    let fictionAtFriends = []\r\n    let friendsOfUser = getUsersFriends(getLoggedUserId())\r\n    for (var i = 0; i < friendsOfUser.length; i++) {\r\n      fictionAtFriends.push({id:friendsOfUser[i].id, name:friendsOfUser[i].usersInfo.name, status:getFictionAtUser(fiction.id, friendsOfUser[i].id)})\r\n    }\r\n\r\n    return (<Route path={link}\r\n    element={<ChosenFiction fiction={fiction} loggedIn={getLoggedInStatus()}\r\n              usersStatus={getFictionAtUser(fiction.id, getLoggedUserId())}\r\n              usersRating={getRatingOfFictionFromUser(fiction.id, getLoggedUserId())}\r\n              overallRating={getOverallRatingOfFiction(fiction.id)}\r\n              comments={getFictionsComments(fiction.id)}\r\n              fictionAtFriends={fictionAtFriends}\r\n              dispatch={props.dispatch}/>}/>)\r\n  })\r\n\r\n  return (\r\n    <Routes>\r\n      {fictionLinks}\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default ChosenFictionsContainer;\r\n"]},"metadata":{},"sourceType":"module"}