{"ast":null,"code":"import { addUser, getAllUsers } from './../../DataBase/Users.js';\nimport { getLoggedUserId, setLoggedUserId } from './../../LocalInfo/localInfo.js';\nconst LOG_IN = 'LOG-IN';\nconst SIGN_UP = 'SIGN-UP';\nlet initialState = {};\n\nconst registrationReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN:\n      {\n        return state;\n      }\n\n    case SIGN_UP:\n      {\n        async function signUpFunc(name, pass, email) {\n          const newUser = {\n            name: name,\n            password: pass,\n            email: email\n          };\n          await fetch(\"http://localhost:5000/user/add\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newUser)\n          }).then(d => {\n            async function getId() {\n              const response = await fetch(`http://localhost:5000/user/checkIfUsersDataIsRight/${name}/${pass}`);\n\n              if (!response.ok) {\n                const message = `An error occurred at registpage: ${response.statusText}`;\n                window.alert(message);\n                return;\n              }\n\n              return await response.json();\n            }\n\n            getId().then(id => {\n              console.log(setLoggedUserId(id));\n            }).then(f => {\n              return state;\n            });\n          }).catch(error => {\n            window.alert(error);\n            return;\n          });\n        }\n\n        signUpFunc(action.username, action.password, action.email);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default registrationReducer;\nexport const tryLogIn = (username, password) => ({\n  type: LOG_IN,\n  username: username,\n  password: password\n});\nexport const trySignUp = (username, password, email) => ({\n  type: SIGN_UP,\n  username: username,\n  password: password,\n  email: email\n});","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/SchoolProject/client/src/redux/reducers/registrationReducer.js"],"names":["addUser","getAllUsers","getLoggedUserId","setLoggedUserId","LOG_IN","SIGN_UP","initialState","registrationReducer","state","action","type","signUpFunc","name","pass","email","newUser","password","fetch","method","headers","body","JSON","stringify","then","d","getId","response","ok","message","statusText","window","alert","json","id","console","log","f","catch","error","username","tryLogIn","trySignUp"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,WAAjB,QAAmC,2BAAnC;AACA,SAAQC,eAAR,EAAyBC,eAAzB,QAA+C,gCAA/C;AAEA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,OAAO,GAAG,SAAhB;AAEA,IAAIC,YAAY,GAAG,EAAnB;;AAEA,MAAMC,mBAAmB,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,MAAL;AAAY;AACV,eAAOI,KAAP;AACD;;AACD,SAAKH,OAAL;AAAa;AACX,uBAAeM,UAAf,CAA0BC,IAA1B,EAAgCC,IAAhC,EAAsCC,KAAtC,EAA6C;AAE3C,gBAAMC,OAAO,GAAG;AAAEH,YAAAA,IAAI,EAAEA,IAAR;AAAcI,YAAAA,QAAQ,EAAEH,IAAxB;AAA8BC,YAAAA,KAAK,EAACA;AAApC,WAAhB;AACA,gBAAMG,KAAK,CAAC,gCAAD,EAAmC;AAC7CC,YAAAA,MAAM,EAAE,MADqC;AAE7CC,YAAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFoC;AAK7CC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,OAAf;AALuC,WAAnC,CAAL,CAONQ,IAPM,CAOAC,CAAD,IAAK;AACT,2BAAeC,KAAf,GAAsB;AACpB,oBAAMC,QAAQ,GAAG,MAAMT,KAAK,CAAE,sDAAqDL,IAAK,IAAGC,IAAK,EAApE,CAA5B;;AAEA,kBAAI,CAACa,QAAQ,CAACC,EAAd,EAAkB;AACf,sBAAMC,OAAO,GAAI,oCAAmCF,QAAQ,CAACG,UAAW,EAAxE;AACCC,gBAAAA,MAAM,CAACC,KAAP,CAAaH,OAAb;AACA;AACH;;AAED,qBAAO,MAAMF,QAAQ,CAACM,IAAT,EAAb;AACD;;AACDP,YAAAA,KAAK,GAAGF,IAAR,CAAcU,EAAD,IAAM;AACjBC,cAAAA,OAAO,CAACC,GAAR,CAAYhC,eAAe,CAAC8B,EAAD,CAA3B;AACD,aAFD,EAEGV,IAFH,CAESa,CAAD,IAAK;AACX,qBAAO5B,KAAP;AACD,aAJD;AAKD,WAxBM,EAyBN6B,KAzBM,CAyBAC,KAAK,IAAI;AACdR,YAAAA,MAAM,CAACC,KAAP,CAAaO,KAAb;AACA;AACD,WA5BM,CAAN;AA6BD;;AACD3B,QAAAA,UAAU,CAACF,MAAM,CAAC8B,QAAR,EAAkB9B,MAAM,CAACO,QAAzB,EAAmCP,MAAM,CAACK,KAA1C,CAAV;AAED;;AAED;AACE,aAAON,KAAP;AA3CJ;AA6CD,CA9CD;;AAgDA,eAAeD,mBAAf;AAEA,OAAO,MAAMiC,QAAQ,GAAG,CAACD,QAAD,EAAWvB,QAAX,MACtB;AAACN,EAAAA,IAAI,EAAEN,MAAP;AAAemC,EAAAA,QAAQ,EAACA,QAAxB;AAAkCvB,EAAAA,QAAQ,EAACA;AAA3C,CADsB,CAAjB;AAEP,OAAO,MAAMyB,SAAS,GAAG,CAACF,QAAD,EAAWvB,QAAX,EAAqBF,KAArB,MACvB;AAACJ,EAAAA,IAAI,EAAEL,OAAP;AAAgBkC,EAAAA,QAAQ,EAACA,QAAzB;AAAmCvB,EAAAA,QAAQ,EAACA,QAA5C;AAAsDF,EAAAA,KAAK,EAACA;AAA5D,CADuB,CAAlB","sourcesContent":["import {addUser, getAllUsers} from './../../DataBase/Users.js'\r\nimport {getLoggedUserId, setLoggedUserId} from './../../LocalInfo/localInfo.js'\r\n\r\nconst LOG_IN = 'LOG-IN';\r\nconst SIGN_UP = 'SIGN-UP';\r\n\r\nlet initialState = {}\r\n\r\nconst registrationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN:{\r\n      return state\r\n    }\r\n    case SIGN_UP:{\r\n      async function signUpFunc(name, pass, email) {\r\n\r\n        const newUser = { name: name, password: pass, email:email };\r\n        await fetch(\"http://localhost:5000/user/add\", {\r\n         method: \"POST\",\r\n         headers: {\r\n           \"Content-Type\": \"application/json\",\r\n         },\r\n         body: JSON.stringify(newUser),\r\n       })\r\n       .then((d)=>{\r\n         async function getId(){\r\n           const response = await fetch(`http://localhost:5000/user/checkIfUsersDataIsRight/${name}/${pass}`);\r\n\r\n           if (!response.ok) {\r\n              const message = `An error occurred at registpage: ${response.statusText}`;\r\n               window.alert(message);\r\n               return;\r\n           }\r\n\r\n           return await response.json();\r\n         }\r\n         getId().then((id)=>{\r\n           console.log(setLoggedUserId(id));\r\n         }).then((f)=>{\r\n           return state\r\n         })\r\n       })\r\n       .catch(error => {\r\n         window.alert(error);\r\n         return;\r\n       });\r\n      }\r\n      signUpFunc(action.username, action.password, action.email)\r\n\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default registrationReducer;\r\n\r\nexport const tryLogIn = (username, password) => (\r\n  {type: LOG_IN, username:username, password:password});\r\nexport const trySignUp = (username, password, email) => (\r\n  {type: SIGN_UP, username:username, password:password, email:email});\r\n"]},"metadata":{},"sourceType":"module"}