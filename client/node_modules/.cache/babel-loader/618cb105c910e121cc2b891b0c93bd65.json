{"ast":null,"code":"export let dbComments = {\n  comments: [{\n    id: 1,\n    staticInfo: {\n      content: 't1',\n      place: ['book', 3],\n      author: 1\n    },\n    dynamicInfo: {\n      dislikes: 0,\n      likes: 0\n    }\n  }, {\n    id: 2,\n    staticInfo: {\n      content: 't2',\n      place: ['film', 2],\n      author: 3\n    },\n    dynamicInfo: {\n      dislikes: 0,\n      likes: 0\n    }\n  }, {\n    id: 3,\n    staticInfo: {\n      content: 't3',\n      place: ['book', 2],\n      author: 2\n    },\n    dynamicInfo: {\n      dislikes: 0,\n      likes: 0\n    }\n  }, {\n    id: 4,\n    staticInfo: {\n      content: 't4',\n      place: ['book', 1],\n      author: 1\n    },\n    dynamicInfo: {\n      dislikes: 0,\n      likes: 0\n    }\n  }]\n};\nexport const addComment = comment => {\n  dbUsers.comments.push(comment);\n  return getCommentsFromDataBase();\n};\nexport const getCommentsFromDataBase = () => {\n  return dbComments.comments;\n};\nexport const getUserComments = user_id => {\n  let commentsOfUser = [];\n\n  for (let i = 0; i < dbComments.comments.length; i++) {\n    if (user_id == dbComments.comments[i].staticInfo.author_id) {\n      commentsOfUser.push(dbComments.comments[i]);\n    }\n  }\n\n  return commentsOfUser;\n};\nexport const getFictionComments = (type_of_fiction, place_id) => {\n  let commentsOfFiction = [];\n\n  switch (type_of_fiction) {\n    case 'film':\n      for (let i = 0; i < dbComments.comments.length; i++) {\n        if (user_id == dbComments.comments[i].staticInfo.author_id) {\n          commentsOfUser.push(dbComments.comments[i]);\n        }\n      }\n\n      ;\n\n    default:\n  }\n\n  return commentsOfFiction;\n};\nexport const changeDynamicInfoOfComment = (comment_id, like_or_dislike) => {\n  switch (like_or_dislike) {\n    case 'like':\n      for (let i = 0; i < dbComments.comments.length; i++) {\n        if (comment_id == dbComments.comments[i].id) {\n          dbComments.comments[i].dynamicInfo.likes += 1;\n        }\n      }\n\n      ;\n\n    case 'dislike':\n      for (let i = 0; i < dbComments.comments.length; i++) {\n        if (comment_id == dbComments.comments[i].id) {\n          dbComments.comments[i].dynamicInfo.dislikes += 1;\n        }\n      }\n\n      ;\n\n    default:\n  }\n\n  return getCommentsFromDataBase();\n};","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/webproject/src/DataBase/Comments.jsx"],"names":["dbComments","comments","id","staticInfo","content","place","author","dynamicInfo","dislikes","likes","addComment","comment","dbUsers","push","getCommentsFromDataBase","getUserComments","user_id","commentsOfUser","i","length","author_id","getFictionComments","type_of_fiction","place_id","commentsOfFiction","changeDynamicInfoOfComment","comment_id","like_or_dislike"],"mappings":"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","sourcesContent":["export let dbComments = {comments: [{id:1, staticInfo: {content:'t1', place:['book', 3], author:1}, dynamicInfo:{dislikes: 0, likes: 0,}},\r\n                              {id:2, staticInfo: {content:'t2', place:['film', 2], author:3}, dynamicInfo:{dislikes: 0, likes: 0,}},\r\n                              {id:3, staticInfo: {content:'t3', place:['book', 2], author:2}, dynamicInfo:{dislikes: 0, likes: 0,}},\r\n                              {id:4, staticInfo: {content:'t4', place:['book', 1], author:1}, dynamicInfo:{dislikes: 0, likes: 0,}}]}\r\n\r\n\r\nexport const addComment = (comment) =>{\r\n  dbUsers.comments.push(comment);\r\n  return getCommentsFromDataBase()\r\n}\r\n\r\nexport const getCommentsFromDataBase = ()=>{\r\n  return dbComments.comments\r\n}\r\n\r\nexport const getUserComments = (user_id) => {\r\n  let commentsOfUser = []\r\n  for(let i = 0; i<dbComments.comments.length; i++){\r\n    if (user_id == dbComments.comments[i].staticInfo.author_id){\r\n      commentsOfUser.push(dbComments.comments[i])\r\n    }\r\n  }\r\n  return commentsOfUser\r\n}\r\n\r\nexport const getFictionComments = (type_of_fiction, place_id) => {\r\n  let commentsOfFiction = []\r\n  switch (type_of_fiction) {\r\n    case 'film':\r\n      for(let i = 0; i<dbComments.comments.length; i++){\r\n        if (user_id == dbComments.comments[i].staticInfo.author_id){\r\n          commentsOfUser.push(dbComments.comments[i])\r\n        }\r\n      };\r\n\r\n    default:\r\n\r\n  }\r\n\r\n  return commentsOfFiction\r\n}\r\n\r\n\r\nexport const changeDynamicInfoOfComment = (comment_id, like_or_dislike)=>{\r\n  switch (like_or_dislike) {\r\n    case 'like':\r\n      for(let i = 0; i<dbComments.comments.length; i++){\r\n        if (comment_id == dbComments.comments[i].id){\r\n          dbComments.comments[i].dynamicInfo.likes += 1;\r\n        }\r\n      };\r\n    case 'dislike':\r\n      for(let i = 0; i<dbComments.comments.length; i++){\r\n        if (comment_id == dbComments.comments[i].id){\r\n          dbComments.comments[i].dynamicInfo.dislikes += 1;\r\n        }\r\n      };\r\n    default:\r\n\r\n  }\r\n  return getCommentsFromDataBase()\r\n}\r\n"]},"metadata":{},"sourceType":"module"}