{"ast":null,"code":"async function getAllUsers() {\n  //returns list of all fictions\n  const response = await fetch(`http://localhost:5000/user/getAllUsers`);\n\n  if (!response.ok) {\n    const message = `An error occurred at getAllUsers: ${response.statusText}`;\n    window.alert(message);\n    return;\n  }\n\n  return await response.json();\n}\n\nasync function getUserById(user_id) {\n  //returns fiction whose id was mentioned\n  const response = await fetch(`http://localhost:5000/user/getUserById/${user_id}`);\n\n  if (!response.ok) {\n    const message = `An error occurred at getUserById: ${response.statusText}`;\n    window.alert(message);\n    return;\n  }\n\n  return await response.json();\n}\n\nasync function getFictionAtUser(user_id, fiction_id) {\n  //returns fiction whose id was mentioned\n  const response = await fetch(`http://localhost:5000/user/getFictionAtUser/${user_id}/${fiction_id}`);\n\n  if (!response.ok) {\n    const message = `An error occurred at getFictionAtUser: ${response.statusText}`;\n    window.alert(message);\n    return;\n  }\n\n  return await response.json();\n}\n\nasync function getUsersFollowedPeople(user_id) {\n  //returns list of objects(users) which are friends of user\n  const response = await fetch(`http://localhost:5000/user/getUsersFollowedPeople/${user_id}`);\n\n  if (!response.ok) {\n    const message = `An error occurred at getUsersFollowedPeople: ${response.statusText}`;\n    window.alert(message);\n    return;\n  }\n\n  return await response.json();\n}\n\nasync function isFollowed(user1_id, user2_id) {\n  const response = await fetch(`http://localhost:5000/user/isFollowed/${user1_id}/${user2_id}`);\n\n  if (!response.ok) {\n    const message = `An error occurred at isFollowed: ${response.statusText}`;\n    window.alert(message);\n    return;\n  }\n\n  return await response.json();\n}\n\nexport const followUser = (user1_id, user2_id) => {//adds users to user1_id followList\n};\nexport const unfollowUser = (user1_id, user2_id) => {//deletes user from user1_id followList\n};\nexport { getAllUsers, getUserById, getFictionAtUser, getUsersFollowedPeople, isFollowed };","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/SchoolProject/client/src/DataBase/Users.js"],"names":["getAllUsers","response","fetch","ok","message","statusText","window","alert","json","getUserById","user_id","getFictionAtUser","fiction_id","getUsersFollowedPeople","isFollowed","user1_id","user2_id","followUser","unfollowUser"],"mappings":"AAAA,eAAeA,WAAf,GAA6B;AAC3B;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,wCAAF,CAA5B;;AAEA,MAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AACf,UAAMC,OAAO,GAAI,qCAAoCH,QAAQ,CAACI,UAAW,EAAzE;AACCC,IAAAA,MAAM,CAACC,KAAP,CAAaH,OAAb;AACA;AACH;;AAED,SAAO,MAAMH,QAAQ,CAACO,IAAT,EAAb;AACD;;AAED,eAAeC,WAAf,CAA2BC,OAA3B,EAAmC;AACjC;AACA,QAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,0CAAyCQ,OAAQ,EAAnD,CAA5B;;AAEA,MAAI,CAACT,QAAQ,CAACE,EAAd,EAAkB;AACf,UAAMC,OAAO,GAAI,qCAAoCH,QAAQ,CAACI,UAAW,EAAzE;AACCC,IAAAA,MAAM,CAACC,KAAP,CAAaH,OAAb;AACA;AACH;;AAED,SAAO,MAAMH,QAAQ,CAACO,IAAT,EAAb;AACD;;AAED,eAAeG,gBAAf,CAAgCD,OAAhC,EAAyCE,UAAzC,EAAoD;AAClD;AACA,QAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,+CAA8CQ,OAAQ,IAAGE,UAAW,EAAtE,CAA5B;;AAEA,MAAI,CAACX,QAAQ,CAACE,EAAd,EAAkB;AACf,UAAMC,OAAO,GAAI,0CAAyCH,QAAQ,CAACI,UAAW,EAA9E;AACCC,IAAAA,MAAM,CAACC,KAAP,CAAaH,OAAb;AACA;AACH;;AAED,SAAO,MAAMH,QAAQ,CAACO,IAAT,EAAb;AACD;;AAED,eAAeK,sBAAf,CAAsCH,OAAtC,EAA+C;AAC7C;AACA,QAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,qDAAoDQ,OAAQ,EAA9D,CAA5B;;AAEA,MAAI,CAACT,QAAQ,CAACE,EAAd,EAAkB;AACf,UAAMC,OAAO,GAAI,gDAA+CH,QAAQ,CAACI,UAAW,EAApF;AACCC,IAAAA,MAAM,CAACC,KAAP,CAAaH,OAAb;AACA;AACH;;AAED,SAAO,MAAMH,QAAQ,CAACO,IAAT,EAAb;AACD;;AAED,eAAeM,UAAf,CAA2BC,QAA3B,EAAqCC,QAArC,EAA8C;AAC5C,QAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAE,yCAAwCa,QAAS,IAAGC,QAAS,EAA/D,CAA5B;;AAEA,MAAI,CAACf,QAAQ,CAACE,EAAd,EAAkB;AACf,UAAMC,OAAO,GAAI,oCAAmCH,QAAQ,CAACI,UAAW,EAAxE;AACCC,IAAAA,MAAM,CAACC,KAAP,CAAaH,OAAb;AACA;AACH;;AAED,SAAO,MAAMH,QAAQ,CAACO,IAAT,EAAb;AACD;;AAED,OAAO,MAAMS,UAAU,GAAG,CAACF,QAAD,EAAWC,QAAX,KAAuB,CAC/C;AAED,CAHM;AAKP,OAAO,MAAME,YAAY,GAAG,CAACH,QAAD,EAAWC,QAAX,KAAuB,CACjD;AACD,CAFM;AAKP,SAAShB,WAAT,EAAsBS,WAAtB,EAAmCE,gBAAnC,EAAqDE,sBAArD,EAA6EC,UAA7E","sourcesContent":["async function getAllUsers (){\r\n  //returns list of all fictions\r\n  const response = await fetch(`http://localhost:5000/user/getAllUsers`);\r\n\r\n  if (!response.ok) {\r\n     const message = `An error occurred at getAllUsers: ${response.statusText}`;\r\n      window.alert(message);\r\n      return;\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nasync function getUserById(user_id){\r\n  //returns fiction whose id was mentioned\r\n  const response = await fetch(`http://localhost:5000/user/getUserById/${user_id}`);\r\n\r\n  if (!response.ok) {\r\n     const message = `An error occurred at getUserById: ${response.statusText}`;\r\n      window.alert(message);\r\n      return;\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nasync function getFictionAtUser(user_id, fiction_id){\r\n  //returns fiction whose id was mentioned\r\n  const response = await fetch(`http://localhost:5000/user/getFictionAtUser/${user_id}/${fiction_id}`);\r\n\r\n  if (!response.ok) {\r\n     const message = `An error occurred at getFictionAtUser: ${response.statusText}`;\r\n      window.alert(message);\r\n      return;\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nasync function getUsersFollowedPeople(user_id) {\r\n  //returns list of objects(users) which are friends of user\r\n  const response = await fetch(`http://localhost:5000/user/getUsersFollowedPeople/${user_id}`);\r\n\r\n  if (!response.ok) {\r\n     const message = `An error occurred at getUsersFollowedPeople: ${response.statusText}`;\r\n      window.alert(message);\r\n      return;\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nasync function isFollowed (user1_id, user2_id){\r\n  const response = await fetch(`http://localhost:5000/user/isFollowed/${user1_id}/${user2_id}`);\r\n\r\n  if (!response.ok) {\r\n     const message = `An error occurred at isFollowed: ${response.statusText}`;\r\n      window.alert(message);\r\n      return;\r\n  }\r\n\r\n  return await response.json();\r\n}\r\n\r\nexport const followUser = (user1_id, user2_id) =>{\r\n  //adds users to user1_id followList\r\n\r\n}\r\n\r\nexport const unfollowUser = (user1_id, user2_id) =>{\r\n  //deletes user from user1_id followList\r\n}\r\n\r\n\r\nexport { getAllUsers, getUserById, getFictionAtUser, getUsersFollowedPeople, isFollowed }\r\n"]},"metadata":{},"sourceType":"module"}