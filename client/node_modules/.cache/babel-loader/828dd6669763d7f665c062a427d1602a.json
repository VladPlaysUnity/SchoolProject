{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Litsey_10th_grade\\\\Informatics\\\\Fictionlib\\\\SchoolProject\\\\client\\\\src\\\\components\\\\RegistrationPage\\\\registrationPageContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport RegistrationPage from './registrationPage.jsx';\nimport { useNavigate } from 'react-router-dom';\nimport { tryLogIn, trySignUp } from './../../redux/reducers/registrationReducer';\nimport { getLoggedUserId, setLoggedUserId } from './../../LocalInfo/localInfo.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegistrationPageContainer = props => {\n  _s();\n\n  let navigate = useNavigate();\n  let link = '/registration';\n\n  if (typeof getLoggedUserId() == 'number') {\n    link = '/profile/' + getLoggedUserId();\n  }\n\n  async function logInFunc(username, password) {\n    async function getId() {\n      const response = await fetch(`http://localhost:5000/user/checkIfUsersDataIsRight/${username}/${password}`);\n\n      if (!response.ok) {\n        const message = `An error occurred at registpage: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      return await response.json();\n    }\n\n    getId().then(id => {\n      console.log(setLoggedUserId(id));\n      navigate(`/profile/${id}`);\n    });\n  }\n\n  async function signUpFunc(name, pass, email) {\n    const newUser = {\n      name: name,\n      password: pass,\n      email: email\n    };\n    await fetch(\"http://localhost:5000/user/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newUser)\n    }).then(d => {\n      async function getId() {\n        const response = await fetch(`http://localhost:5000/user/checkIfUsersDataIsRight/${name}/${pass}`);\n\n        if (!response.ok) {\n          const message = `An error occurred at registpage: ${response.statusText}`;\n          window.alert(message);\n          return;\n        }\n\n        return await response.json();\n      }\n\n      getId().then(id => {\n        console.log(setLoggedUserId(id));\n        console.log(getLoggedInStatus());\n        navigate(`/profile/${id}`);\n      });\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(RegistrationPage, {\n    tryLogIn: logInFunc,\n    trySignUp: signUpFunc,\n    user_link: link\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegistrationPageContainer, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = RegistrationPageContainer;\nexport default RegistrationPageContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrationPageContainer\");","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/SchoolProject/client/src/components/RegistrationPage/registrationPageContainer.jsx"],"names":["RegistrationPage","useNavigate","tryLogIn","trySignUp","getLoggedUserId","setLoggedUserId","RegistrationPageContainer","props","navigate","link","logInFunc","username","password","getId","response","fetch","ok","message","statusText","window","alert","json","then","id","console","log","signUpFunc","name","pass","email","newUser","method","headers","body","JSON","stringify","d","getLoggedInStatus","catch","error"],"mappings":"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","sourcesContent":["import RegistrationPage from './registrationPage.jsx'\r\n\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport {tryLogIn, trySignUp} from './../../redux/reducers/registrationReducer';\r\nimport { getLoggedUserId, setLoggedUserId } from './../../LocalInfo/localInfo.js'\r\n\r\nconst RegistrationPageContainer = (props) =>{\r\n\r\n  let navigate = useNavigate()\r\n\r\n  let link =  '/registration';\r\n  if (typeof getLoggedUserId() == 'number'){\r\n    link = '/profile/' + getLoggedUserId()\r\n  }\r\n\r\n  async function logInFunc (username, password) {\r\n    async function getId(){\r\n      const response = await fetch(`http://localhost:5000/user/checkIfUsersDataIsRight/${username}/${password}`);\r\n\r\n      if (!response.ok) {\r\n         const message = `An error occurred at registpage: ${response.statusText}`;\r\n          window.alert(message);\r\n          return;\r\n      }\r\n\r\n      return await response.json();\r\n    }\r\n    getId().then((id)=>{\r\n      console.log(setLoggedUserId(id));\r\n      navigate(`/profile/${id}`)\r\n    })\r\n  }\r\n  async function signUpFunc(name, pass, email) {\r\n\r\n    const newUser = { name: name, password: pass, email:email };\r\n    await fetch(\"http://localhost:5000/user/add\", {\r\n     method: \"POST\",\r\n     headers: {\r\n       \"Content-Type\": \"application/json\",\r\n     },\r\n     body: JSON.stringify(newUser),\r\n   })\r\n   .then((d)=>{\r\n     async function getId(){\r\n       const response = await fetch(`http://localhost:5000/user/checkIfUsersDataIsRight/${name}/${pass}`);\r\n\r\n       if (!response.ok) {\r\n          const message = `An error occurred at registpage: ${response.statusText}`;\r\n           window.alert(message);\r\n           return;\r\n       }\r\n\r\n       return await response.json();\r\n     }\r\n     getId().then((id)=>{\r\n       console.log(setLoggedUserId(id));\r\n       console.log(getLoggedInStatus())\r\n       navigate(`/profile/${id}`)\r\n     })\r\n   })\r\n   .catch(error => {\r\n     window.alert(error);\r\n     return;\r\n   });\r\n  }\r\n  return(\r\n    <RegistrationPage tryLogIn={logInFunc} trySignUp={signUpFunc} user_link={link}/>\r\n  )\r\n}\r\n\r\nexport default RegistrationPageContainer\r\n"]},"metadata":{},"sourceType":"module"}