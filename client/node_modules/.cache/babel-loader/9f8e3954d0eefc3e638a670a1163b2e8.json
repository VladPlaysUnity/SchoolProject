{"ast":null,"code":"var _jsxFileName = \"D:\\\\Learning\\\\Litsey_10th_grade\\\\Informatics\\\\Fictionlib\\\\SchoolProject\\\\client\\\\src\\\\components\\\\ChosenFiction\\\\chosenFictionContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { getFictionById, getAllFictions, getRatingOfFictionFromUser, getOverallRatingOfFiction } from './../../DataBase/Fictions.js';\nimport { getUsersFriends, getFictionAtUser } from './../../DataBase/Users.js';\nimport { getFictionsComments } from './../../DataBase/Comments.js';\nimport { getLoggedInStatus, getLoggedUserId } from './../../LocalInfo/localInfo.js';\nimport { changeUsersRatingOfFictionActionCreator, changeUsersStatusOfFictionActionCreator, addCommentActionCreator } from './../../redux/reducers/chosenFictionReducer.js';\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport ChosenFiction from './chosenFiction.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChosenFictionContainer = props => {\n  _s();\n\n  const [fiction, setFiction] = useState([]);\n  const [userRating, setUserRating] = useState(0);\n  const [userStatus, setUserStatus] = useState('not completed');\n  const [overallRating, setOverallRating] = useState(0);\n  const params = useParams();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    let fP = getFictionById(params.iD);\n    let oRP = getOverallRatingOfFiction(params.iD);\n    let rP = '';\n    let uS = '';\n\n    if (getLoggedInStatus()) {\n      rP = getRatingOfFictionFromUser(params.iD, getLoggedUserId());\n      uS = getFictionAtUser(getLoggedUserId(), params.iD);\n    }\n\n    if (getLoggedInStatus()) {\n      Promise.all([fP, rP, oRP, uS]).then(result => {\n        setFiction(result[0]);\n        setOverallRating(result[2]);\n        setUserRating(result[1]);\n        setUserStatus(result[3]);\n      });\n    } else {\n      Promise.all([fP, oRP]).then(result => {\n        setFiction(result[0]);\n        setOverallRating(result[1]);\n      });\n    }\n\n    setIsLoaded(true);\n  }, []);\n  let view = '';\n\n  if (getLoggedInStatus()) {\n    view = 'loggedInUsersView';\n  } else {\n    view = 'notLoggedInUsersView';\n  }\n\n  let changeUsersRatingOfFiction = rating => {\n    props.dispatch(changeUsersRatingOfFictionActionCreator(params.iD, getLoggedUserId(), rating));\n    setUserRating(rating);\n  };\n\n  let changeUsersStatusOfFiction = status => {//props.dispatch(changeUsersStatusOfFictionActionCreator(getLoggedUserId(), iD, status))\n  };\n\n  let fictionAtFriends = []; //let friendsOfUser = getUsersFriends(getLoggedUserId())\n  //for (var i = 0; i < friendsOfUser.length; i++) {\n  //  fictionAtFriends.push({iD:friendsOfUser[i].iD, name:friendsOfUser[i].usersInfo.name, status:getFictionAtUser(fiction.iD, friendsOfUser[i].iD)})\n  //}\n\n  let addComment = content => {//props.dispatch(addCommentActionCreator(getLoggedUserId(),fiction.iD, content))\n  };\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 12\n    }, this);\n  } else if (isLoaded) {\n    if (!fiction) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Fiction not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ChosenFiction, {\n        fiction: fiction,\n        loggedIn: getLoggedInStatus(),\n        usersStatus: userStatus,\n        usersRating: userRating,\n        overallRating: overallRating,\n        comments: [],\n        fictionAtFriends: fictionAtFriends,\n        addComment: addComment,\n        changeUsersRatingOfFiction: changeUsersRatingOfFiction,\n        changeUsersStatusOfFiction: changeUsersStatusOfFiction,\n        view: view,\n        dispatch: props.dispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(ChosenFictionContainer, \"78h//WDI7FnhXzvxXWQizsKDQt4=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = ChosenFictionContainer;\nexport default ChosenFictionContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChosenFictionContainer\");","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/SchoolProject/client/src/components/ChosenFiction/chosenFictionContainer.jsx"],"names":["getFictionById","getAllFictions","getRatingOfFictionFromUser","getOverallRatingOfFiction","getUsersFriends","getFictionAtUser","getFictionsComments","getLoggedInStatus","getLoggedUserId","changeUsersRatingOfFictionActionCreator","changeUsersStatusOfFictionActionCreator","addCommentActionCreator","useParams","useNavigate","useState","useEffect","ChosenFiction","ChosenFictionContainer","props","fiction","setFiction","userRating","setUserRating","userStatus","setUserStatus","overallRating","setOverallRating","params","error","setError","isLoaded","setIsLoaded","navigate","fP","iD","oRP","rP","uS","Promise","all","then","result","view","changeUsersRatingOfFiction","rating","dispatch","changeUsersStatusOfFiction","status","fictionAtFriends","addComment","content","message"],"mappings":"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","sourcesContent":["import { getFictionById, getAllFictions, getRatingOfFictionFromUser, getOverallRatingOfFiction } from './../../DataBase/Fictions.js'\r\nimport { getUsersFriends, getFictionAtUser } from './../../DataBase/Users.js'\r\nimport { getFictionsComments } from './../../DataBase/Comments.js'\r\nimport { getLoggedInStatus, getLoggedUserId } from './../../LocalInfo/localInfo.js'\r\nimport { changeUsersRatingOfFictionActionCreator, changeUsersStatusOfFictionActionCreator, addCommentActionCreator } from './../../redux/reducers/chosenFictionReducer.js'\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport {useState, useEffect } from 'react';\r\nimport ChosenFiction from './chosenFiction.jsx'\r\n\r\nconst ChosenFictionContainer = (props) =>{\r\n  const [fiction, setFiction] = useState([]);\r\n  const [userRating, setUserRating] = useState(0)\r\n  const [userStatus, setUserStatus] = useState('not completed')\r\n  const [overallRating, setOverallRating] = useState(0)\r\n  const params = useParams();\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n useEffect(() => {\r\n   let fP = getFictionById(params.iD)\r\n   let oRP = getOverallRatingOfFiction(params.iD)\r\n   let rP = ''\r\n   let uS = ''\r\n   if (getLoggedInStatus()){\r\n     rP = getRatingOfFictionFromUser(params.iD, getLoggedUserId())\r\n     uS = getFictionAtUser(getLoggedUserId(), params.iD)\r\n   }\r\n\r\n   if (getLoggedInStatus()){\r\n     Promise.all([fP, rP, oRP, uS])\r\n     .then((result)=>{\r\n       setFiction(result[0])\r\n       setOverallRating(result[2])\r\n       setUserRating(result[1])\r\n       setUserStatus(result[3])\r\n\r\n   })} else {\r\n     Promise.all([fP, oRP])\r\n     .then((result)=>{\r\n       setFiction(result[0])\r\n       setOverallRating(result[1])\r\n     })}\r\n    setIsLoaded(true)\r\n }, []);\r\n\r\n let view = ''\r\n if (getLoggedInStatus()){\r\n   view = 'loggedInUsersView';\r\n }else{\r\n   view = 'notLoggedInUsersView';\r\n }\r\n\r\n let changeUsersRatingOfFiction = (rating) =>{\r\n   props.dispatch(changeUsersRatingOfFictionActionCreator(params.iD, getLoggedUserId(), rating))\r\n   setUserRating(rating)\r\n }\r\n let changeUsersStatusOfFiction = (status) =>{\r\n   //props.dispatch(changeUsersStatusOfFictionActionCreator(getLoggedUserId(), iD, status))\r\n }\r\n\r\n let fictionAtFriends = []\r\n //let friendsOfUser = getUsersFriends(getLoggedUserId())\r\n //for (var i = 0; i < friendsOfUser.length; i++) {\r\n //  fictionAtFriends.push({iD:friendsOfUser[i].iD, name:friendsOfUser[i].usersInfo.name, status:getFictionAtUser(fiction.iD, friendsOfUser[i].iD)})\r\n //}\r\n\r\n let addComment = (content) =>{\r\n   //props.dispatch(addCommentActionCreator(getLoggedUserId(),fiction.iD, content))\r\n }\r\n\r\n\r\n  if (error){\r\n    return <div>Error: {error.message}</div>\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>\r\n  } else if (isLoaded) {\r\n    if(!fiction){\r\n      return <div>Fiction not found</div>\r\n    }\r\n    return(\r\n      <div>\r\n      <ChosenFiction fiction={fiction} loggedIn={getLoggedInStatus()}\r\n                usersStatus={userStatus}\r\n                usersRating={userRating}\r\n                overallRating={overallRating}\r\n                comments={[]}\r\n                fictionAtFriends={fictionAtFriends} addComment={addComment}\r\n                changeUsersRatingOfFiction={changeUsersRatingOfFiction}\r\n                changeUsersStatusOfFiction={changeUsersStatusOfFiction}\r\n                view={view} dispatch={props.dispatch}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChosenFictionContainer;\r\n"]},"metadata":{},"sourceType":"module"}