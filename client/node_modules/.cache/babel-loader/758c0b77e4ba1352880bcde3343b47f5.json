{"ast":null,"code":"import { getUsersFromDataBase, addUser, updateUser } from './../../DataBase/Users.jsx';\nconst LOG_IN = 'LOG_IN';\nconst SIGN_UP = 'SIGN-UP';\nconst ADD_LIKED_OR_DISLIKED_COMMENT = 'ADD_LIKED_OR_DISLIKED_COMMENT';\nlet intialState = {\n  status: '-',\n  loggedUser: '',\n  users: getUsersFromDataBase()\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN:\n      {\n        for (let i = 0; i < state.users.length; i++) {\n          if (state.users[i].usersInfo.name == action.username && state.users[i].usersInfo.password == action.password) {\n            let stateCopy = { ...state\n            };\n            stateCopy.loggedUser = state.users[i];\n            stateCopy.status = '+';\n            return stateCopy;\n          }\n        }\n\n        return state;\n      }\n\n    case SIGN_UP:\n      {\n        for (let i = 0; i < state.users.length; i++) {\n          if (state.users[i].usersInfo.name == action.username) {\n            return state;\n          }\n        }\n\n        let stateCopy = { ...state\n        };\n        let newUser = {\n          id: [stateCopy.users.length - 1],\n          usersInfo: {\n            name: action.username,\n            email: action.email,\n            password: action.password\n          },\n          commentsInfo: {\n            likedComments: [],\n            dislikedComments: []\n          },\n          markedBooks: [],\n          markedFilms: [],\n          lastReadBook: '',\n          lastWatchedFilm: ''\n        };\n        stateCopy.users = addUser(newUser);\n        stateCopy.loggedUser = stateCopy.users[stateCopy.users.length - 1];\n        stateCopy.status = '+';\n        return stateCopy;\n      }\n\n    case ADD_LIKED_OR_DISLIKED_COMMENT:\n      {\n        let stateCopy = { ...state\n        };\n\n        if (action.like_or_dislike == 'like') {\n          stateCopy.loggedUser.commentsInfo.likedComments = [...stateCopy.loggedUser.commentsInfo.likedComments];\n          stateCopy.loggedUser.commentsInfo.likedComments.push(action.comment);\n          updateUser(stateCopy.loggedUser.id, { ...stateCopy.loggedUser\n          });\n          console.log(getUserFromDataBase(loggedUser.id).commentsInfo.likedComments);\n        } else if (action.like_or_dislike == 'dislike') {\n          stateCopy.loggedUser.commentsInfo.dislikedComments = [...stateCopy.loggedUser.commentsInfo.dislikedComments];\n          stateCopy.loggedUser.commentsInfo.dislikedComments.push(action.comment);\n          updateUser(stateCopy.loggedUser.id, { ...stateCopy.loggedUser\n          });\n          console.log(getUserFromDataBase(loggedUser.id).commentsInfo.dislikedComments);\n        }\n\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default usersReducer;\nexport const tryLogIn = (username, password) => ({\n  type: LOG_IN,\n  username: username,\n  password: password\n});\nexport const trySignUp = (username, password, email) => ({\n  type: SIGN_UP,\n  username: username,\n  password: password,\n  email: email\n});\nexport const likeOrDislikeCommentActionCreator = (comment, like_or_dislike) => ({\n  type: ADD_LIKED_OR_DISLIKED_COMMENT,\n  comment: comment,\n  like_or_dislike: like_or_dislike\n});","map":{"version":3,"sources":["D:/Learning/Litsey_10th_grade/Informatics/Fictionlib/webproject/src/redux/reducers/usersR.js"],"names":["getUsersFromDataBase","addUser","updateUser","LOG_IN","SIGN_UP","ADD_LIKED_OR_DISLIKED_COMMENT","intialState","status","loggedUser","users","usersReducer","state","action","type","i","length","usersInfo","name","username","password","stateCopy","newUser","id","email","commentsInfo","likedComments","dislikedComments","markedBooks","markedFilms","lastReadBook","lastWatchedFilm","like_or_dislike","push","comment","console","log","getUserFromDataBase","tryLogIn","trySignUp","likeOrDislikeCommentActionCreator"],"mappings":"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","sourcesContent":["import {getUsersFromDataBase, addUser, updateUser} from './../../DataBase/Users.jsx'\r\n\r\nconst LOG_IN = 'LOG_IN';\r\nconst SIGN_UP = 'SIGN-UP';\r\nconst ADD_LIKED_OR_DISLIKED_COMMENT = 'ADD_LIKED_OR_DISLIKED_COMMENT';\r\n\r\n\r\nlet intialState = {status:'-', loggedUser:'', users: getUsersFromDataBase()};\r\n\r\nconst usersReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN:{\r\n      for (let i=0; i<state.users.length;i++){\r\n        if ((state.users[i].usersInfo.name == action.username) && (state.users[i].usersInfo.password == action.password)){\r\n          let stateCopy = {...state}\r\n          stateCopy.loggedUser = state.users[i]\r\n          stateCopy.status = '+';\r\n          return stateCopy;\r\n        }\r\n      }\r\n\r\n      return state;\r\n    }\r\n    case SIGN_UP:{\r\n      for (let i=0; i<state.users.length;i++){\r\n        if (state.users[i].usersInfo.name == action.username){\r\n          return state;\r\n        }\r\n      }\r\n      let stateCopy = {...state}\r\n\r\n      let newUser = {id:[stateCopy.users.length-1],usersInfo:{name:action.username, email:action.email, password:action.password}, commentsInfo:{likedComments:[], dislikedComments:[]},markedBooks:[], markedFilms:[], lastReadBook:'', lastWatchedFilm:''}\r\n\r\n      stateCopy.users = addUser(newUser);\r\n      stateCopy.loggedUser = stateCopy.users[stateCopy.users.length-1]\r\n      stateCopy.status = '+';\r\n      return stateCopy;\r\n    }\r\n    case ADD_LIKED_OR_DISLIKED_COMMENT:{\r\n      let stateCopy = {...state}\r\n      if (action.like_or_dislike == 'like'){\r\n        stateCopy.loggedUser.commentsInfo.likedComments = [...stateCopy.loggedUser.commentsInfo.likedComments]\r\n        stateCopy.loggedUser.commentsInfo.likedComments.push(action.comment)\r\n        updateUser(stateCopy.loggedUser.id, {...stateCopy.loggedUser})\r\n        console.log(getUserFromDataBase(loggedUser.id).commentsInfo.likedComments)\r\n      }else if (action.like_or_dislike == 'dislike'){\r\n        stateCopy.loggedUser.commentsInfo.dislikedComments = [...stateCopy.loggedUser.commentsInfo.dislikedComments]\r\n        stateCopy.loggedUser.commentsInfo.dislikedComments.push(action.comment)\r\n        updateUser(stateCopy.loggedUser.id, {...stateCopy.loggedUser})\r\n        console.log(getUserFromDataBase(loggedUser.id).commentsInfo.dislikedComments)\r\n      }\r\n      return stateCopy;\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default usersReducer;\r\n\r\nexport const tryLogIn = (username, password) => (\r\n  {type: LOG_IN, username:username, password:password});\r\nexport const trySignUp = (username, password, email) => (\r\n  {type: SIGN_UP, username:username, password:password, email:email});\r\nexport const likeOrDislikeCommentActionCreator = (comment, like_or_dislike) => (\r\n    {type: ADD_LIKED_OR_DISLIKED_COMMENT, comment:comment, like_or_dislike:like_or_dislike});\r\n"]},"metadata":{},"sourceType":"module"}